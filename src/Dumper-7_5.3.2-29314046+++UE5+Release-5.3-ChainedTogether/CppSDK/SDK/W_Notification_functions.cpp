#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Notification

#include "Basic.hpp"

#include "W_Notification_classes.hpp"
#include "W_Notification_parameters.hpp"


namespace SDK
{

// Function W_Notification.W_Notification_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_Notification_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Notification_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Notification.W_Notification_C.ExecuteUbergraph_W_Notification
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Notification_C::ExecuteUbergraph_W_Notification(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Notification_C", "ExecuteUbergraph_W_Notification");

	Params::W_Notification_C_ExecuteUbergraph_W_Notification Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Notification.W_Notification_C.Finished_2EB94D504016E0DA22B4F094BAFCC274
// (BlueprintCallable, BlueprintEvent)

void UW_Notification_C::Finished_2EB94D504016E0DA22B4F094BAFCC274()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Notification_C", "Finished_2EB94D504016E0DA22B4F094BAFCC274");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Notification.W_Notification_C.Finished_F4764C91432E43B32140E1BD4FF3A9D7
// (BlueprintCallable, BlueprintEvent)

void UW_Notification_C::Finished_F4764C91432E43B32140E1BD4FF3A9D7()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Notification_C", "Finished_F4764C91432E43B32140E1BD4FF3A9D7");

	UObject::ProcessEvent(Func, nullptr);
}

}

