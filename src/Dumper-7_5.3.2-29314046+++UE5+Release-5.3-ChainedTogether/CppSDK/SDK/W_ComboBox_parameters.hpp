#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ComboBox

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "S_ComboBoxContent_structs.hpp"


namespace SDK::Params
{

// Function W_ComboBox.W_ComboBox_C.AddOptionsOnce
// 0x0010 (0x0010 - 0x0000)
struct W_ComboBox_C_AddOptionsOnce final
{
public:
	TArray<class FString>                         Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_ComboBox_C_AddOptionsOnce) == 0x000008, "Wrong alignment on W_ComboBox_C_AddOptionsOnce");
static_assert(sizeof(W_ComboBox_C_AddOptionsOnce) == 0x000010, "Wrong size on W_ComboBox_C_AddOptionsOnce");
static_assert(offsetof(W_ComboBox_C_AddOptionsOnce, Array) == 0x000000, "Member 'W_ComboBox_C_AddOptionsOnce::Array' has a wrong offset!");

// Function W_ComboBox.W_ComboBox_C.AssignPressEvent
// 0x0008 (0x0008 - 0x0000)
struct W_ComboBox_C_AssignPressEvent final
{
public:
	class UW_ComboChoice_C*                       ComboChoice;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ComboBox_C_AssignPressEvent) == 0x000008, "Wrong alignment on W_ComboBox_C_AssignPressEvent");
static_assert(sizeof(W_ComboBox_C_AssignPressEvent) == 0x000008, "Wrong size on W_ComboBox_C_AssignPressEvent");
static_assert(offsetof(W_ComboBox_C_AssignPressEvent, ComboChoice) == 0x000000, "Member 'W_ComboBox_C_AssignPressEvent::ComboChoice' has a wrong offset!");

// Function W_ComboBox.W_ComboBox_C.CropMicrophoneName
// 0x0020 (0x0020 - 0x0000)
struct W_ComboBox_C_CropMicrophoneName final
{
public:
	class FString                                 SourceString;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(W_ComboBox_C_CropMicrophoneName) == 0x000008, "Wrong alignment on W_ComboBox_C_CropMicrophoneName");
static_assert(sizeof(W_ComboBox_C_CropMicrophoneName) == 0x000020, "Wrong size on W_ComboBox_C_CropMicrophoneName");
static_assert(offsetof(W_ComboBox_C_CropMicrophoneName, SourceString) == 0x000000, "Member 'W_ComboBox_C_CropMicrophoneName::SourceString' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_CropMicrophoneName, ReturnValue) == 0x000010, "Member 'W_ComboBox_C_CropMicrophoneName::ReturnValue' has a wrong offset!");

// Function W_ComboBox.W_ComboBox_C.ExecuteUbergraph_W_ComboBox
// 0x00B0 (0x00B0 - 0x0000)
struct W_ComboBox_C_ExecuteUbergraph_W_ComboBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33CA[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33CB[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Item)>    K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33CC[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ComboChoice_C*                       K2Node_CustomEvent_ComboChoice;                    // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Item;                           // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33CD[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_CustomEvent_Array;                          // 0x0058(0x0010)(ReferenceParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33CE[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33CF[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_SelectedOption;                 // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox) == 0x000008, "Wrong alignment on W_ComboBox_C_ExecuteUbergraph_W_ComboBox");
static_assert(sizeof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox) == 0x0000B0, "Wrong size on W_ComboBox_C_ExecuteUbergraph_W_ComboBox");
static_assert(offsetof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox, EntryPoint) == 0x000000, "Member 'W_ComboBox_C_ExecuteUbergraph_W_ComboBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_ComboBox_C_ExecuteUbergraph_W_ComboBox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox, Temp_bool_IsClosed_Variable) == 0x000008, "Member 'W_ComboBox_C_ExecuteUbergraph_W_ComboBox::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_ComboBox_C_ExecuteUbergraph_W_ComboBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox, Temp_bool_Has_Been_Initd_Variable) == 0x000010, "Member 'W_ComboBox_C_ExecuteUbergraph_W_ComboBox::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox, Temp_int_Array_Index_Variable) == 0x000014, "Member 'W_ComboBox_C_ExecuteUbergraph_W_ComboBox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'W_ComboBox_C_ExecuteUbergraph_W_ComboBox::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'W_ComboBox_C_ExecuteUbergraph_W_ComboBox::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'W_ComboBox_C_ExecuteUbergraph_W_ComboBox::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'W_ComboBox_C_ExecuteUbergraph_W_ComboBox::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox, K2Node_CustomEvent_ComboChoice) == 0x000038, "Member 'W_ComboBox_C_ExecuteUbergraph_W_ComboBox::K2Node_CustomEvent_ComboChoice' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox, K2Node_CustomEvent_Item) == 0x000040, "Member 'W_ComboBox_C_ExecuteUbergraph_W_ComboBox::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox, K2Node_Event_IsDesignTime) == 0x000050, "Member 'W_ComboBox_C_ExecuteUbergraph_W_ComboBox::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox, K2Node_CustomEvent_Array) == 0x000058, "Member 'W_ComboBox_C_ExecuteUbergraph_W_ComboBox::K2Node_CustomEvent_Array' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox, CallFunc_PlayAnimation_ReturnValue) == 0x000068, "Member 'W_ComboBox_C_ExecuteUbergraph_W_ComboBox::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox, CallFunc_Array_Get_Item) == 0x000070, "Member 'W_ComboBox_C_ExecuteUbergraph_W_ComboBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'W_ComboBox_C_ExecuteUbergraph_W_ComboBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'W_ComboBox_C_ExecuteUbergraph_W_ComboBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'W_ComboBox_C_ExecuteUbergraph_W_ComboBox::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'W_ComboBox_C_ExecuteUbergraph_W_ComboBox::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox, CallFunc_Less_IntInt_ReturnValue_1) == 0x00009C, "Member 'W_ComboBox_C_ExecuteUbergraph_W_ComboBox::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_ExecuteUbergraph_W_ComboBox, K2Node_CustomEvent_SelectedOption) == 0x0000A0, "Member 'W_ComboBox_C_ExecuteUbergraph_W_ComboBox::K2Node_CustomEvent_SelectedOption' has a wrong offset!");

// Function W_ComboBox.W_ComboBox_C.InitColor
// 0x0A00 (0x0A00 - 0x0000)
struct W_ComboBox_C_InitColor final
{
public:
	struct FSlateBrush                            DisabledStyle;                                     // 0x0000(0x00D0)(Edit, BlueprintVisible)
	struct FSlateBrush                            PressedStyle;                                      // 0x00D0(0x00D0)(Edit, BlueprintVisible)
	struct FSlateBrush                            HoveredStyle;                                      // 0x01A0(0x00D0)(Edit, BlueprintVisible)
	struct FSlateBrush                            NormalStyle;                                       // 0x0270(0x00D0)(Edit, BlueprintVisible)
	struct FComboBoxStyle                         StyleRef;                                          // 0x0340(0x0660)(Edit, BlueprintVisible)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x09A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x09B0(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x09C4(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x09D8(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x09EC(0x0014)()
};
static_assert(alignof(W_ComboBox_C_InitColor) == 0x000010, "Wrong alignment on W_ComboBox_C_InitColor");
static_assert(sizeof(W_ComboBox_C_InitColor) == 0x000A00, "Wrong size on W_ComboBox_C_InitColor");
static_assert(offsetof(W_ComboBox_C_InitColor, DisabledStyle) == 0x000000, "Member 'W_ComboBox_C_InitColor::DisabledStyle' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_InitColor, PressedStyle) == 0x0000D0, "Member 'W_ComboBox_C_InitColor::PressedStyle' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_InitColor, HoveredStyle) == 0x0001A0, "Member 'W_ComboBox_C_InitColor::HoveredStyle' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_InitColor, NormalStyle) == 0x000270, "Member 'W_ComboBox_C_InitColor::NormalStyle' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_InitColor, StyleRef) == 0x000340, "Member 'W_ComboBox_C_InitColor::StyleRef' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_InitColor, CallFunc_GetVectorParameterValue_ReturnValue) == 0x0009A0, "Member 'W_ComboBox_C_InitColor::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_InitColor, K2Node_MakeStruct_SlateColor) == 0x0009B0, "Member 'W_ComboBox_C_InitColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_InitColor, K2Node_MakeStruct_SlateColor_1) == 0x0009C4, "Member 'W_ComboBox_C_InitColor::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_InitColor, K2Node_MakeStruct_SlateColor_2) == 0x0009D8, "Member 'W_ComboBox_C_InitColor::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_InitColor, K2Node_MakeStruct_SlateColor_3) == 0x0009EC, "Member 'W_ComboBox_C_InitColor::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");

// Function W_ComboBox.W_ComboBox_C.LoadDebugSetting
// 0x0001 (0x0001 - 0x0000)
struct W_ComboBox_C_LoadDebugSetting final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ComboBox_C_LoadDebugSetting) == 0x000001, "Wrong alignment on W_ComboBox_C_LoadDebugSetting");
static_assert(sizeof(W_ComboBox_C_LoadDebugSetting) == 0x000001, "Wrong size on W_ComboBox_C_LoadDebugSetting");
static_assert(offsetof(W_ComboBox_C_LoadDebugSetting, Condition) == 0x000000, "Member 'W_ComboBox_C_LoadDebugSetting::Condition' has a wrong offset!");

// Function W_ComboBox.W_ComboBox_C.LoadPushToTalkSetting
// 0x0001 (0x0001 - 0x0000)
struct W_ComboBox_C_LoadPushToTalkSetting final
{
public:
	bool                                          UsePTT;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ComboBox_C_LoadPushToTalkSetting) == 0x000001, "Wrong alignment on W_ComboBox_C_LoadPushToTalkSetting");
static_assert(sizeof(W_ComboBox_C_LoadPushToTalkSetting) == 0x000001, "Wrong size on W_ComboBox_C_LoadPushToTalkSetting");
static_assert(offsetof(W_ComboBox_C_LoadPushToTalkSetting, UsePTT) == 0x000000, "Member 'W_ComboBox_C_LoadPushToTalkSetting::UsePTT' has a wrong offset!");

// Function W_ComboBox.W_ComboBox_C.OnComboSettingChange__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct W_ComboBox_C_OnComboSettingChange__DelegateSignature final
{
public:
	class FString                                 NewSelection;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectType;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ComboBox_C_OnComboSettingChange__DelegateSignature) == 0x000008, "Wrong alignment on W_ComboBox_C_OnComboSettingChange__DelegateSignature");
static_assert(sizeof(W_ComboBox_C_OnComboSettingChange__DelegateSignature) == 0x000018, "Wrong size on W_ComboBox_C_OnComboSettingChange__DelegateSignature");
static_assert(offsetof(W_ComboBox_C_OnComboSettingChange__DelegateSignature, NewSelection) == 0x000000, "Member 'W_ComboBox_C_OnComboSettingChange__DelegateSignature::NewSelection' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_OnComboSettingChange__DelegateSignature, SelectType) == 0x000010, "Member 'W_ComboBox_C_OnComboSettingChange__DelegateSignature::SelectType' has a wrong offset!");

// Function W_ComboBox.W_ComboBox_C.OnGenerateWidget_0
// 0x0060 (0x0060 - 0x0000)
struct W_ComboBox_C_OnGenerateWidget_0 final
{
public:
	class FString                                 Item;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UWidget*                                ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ToolTip;                                           // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D0[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Option;                                            // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D1[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_3;                             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_4;                             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_ComboChoice_C*                       CallFunc_Create_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ComboBox_C_OnGenerateWidget_0) == 0x000008, "Wrong alignment on W_ComboBox_C_OnGenerateWidget_0");
static_assert(sizeof(W_ComboBox_C_OnGenerateWidget_0) == 0x000060, "Wrong size on W_ComboBox_C_OnGenerateWidget_0");
static_assert(offsetof(W_ComboBox_C_OnGenerateWidget_0, Item) == 0x000000, "Member 'W_ComboBox_C_OnGenerateWidget_0::Item' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_OnGenerateWidget_0, ReturnValue) == 0x000010, "Member 'W_ComboBox_C_OnGenerateWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_OnGenerateWidget_0, ToolTip) == 0x000018, "Member 'W_ComboBox_C_OnGenerateWidget_0::ToolTip' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_OnGenerateWidget_0, Option) == 0x00001C, "Member 'W_ComboBox_C_OnGenerateWidget_0::Option' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_OnGenerateWidget_0, Temp_int_Variable) == 0x000020, "Member 'W_ComboBox_C_OnGenerateWidget_0::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_OnGenerateWidget_0, K2Node_SwitchString_CmpSuccess) == 0x000024, "Member 'W_ComboBox_C_OnGenerateWidget_0::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_OnGenerateWidget_0, Temp_class_Variable) == 0x000028, "Member 'W_ComboBox_C_OnGenerateWidget_0::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_OnGenerateWidget_0, Temp_class_Variable_1) == 0x000030, "Member 'W_ComboBox_C_OnGenerateWidget_0::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_OnGenerateWidget_0, Temp_class_Variable_2) == 0x000038, "Member 'W_ComboBox_C_OnGenerateWidget_0::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_OnGenerateWidget_0, Temp_class_Variable_3) == 0x000040, "Member 'W_ComboBox_C_OnGenerateWidget_0::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_OnGenerateWidget_0, Temp_class_Variable_4) == 0x000048, "Member 'W_ComboBox_C_OnGenerateWidget_0::Temp_class_Variable_4' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_OnGenerateWidget_0, CallFunc_Create_ReturnValue) == 0x000050, "Member 'W_ComboBox_C_OnGenerateWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_OnGenerateWidget_0, K2Node_Select_Default) == 0x000058, "Member 'W_ComboBox_C_OnGenerateWidget_0::K2Node_Select_Default' has a wrong offset!");

// Function W_ComboBox.W_ComboBox_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_ComboBox_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ComboBox_C_PreConstruct) == 0x000001, "Wrong alignment on W_ComboBox_C_PreConstruct");
static_assert(sizeof(W_ComboBox_C_PreConstruct) == 0x000001, "Wrong size on W_ComboBox_C_PreConstruct");
static_assert(offsetof(W_ComboBox_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_ComboBox_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_ComboBox.W_ComboBox_C.Press_Event_0
// 0x0010 (0x0010 - 0x0000)
struct W_ComboBox_C_Press_Event_0 final
{
public:
	class FString                                 Item;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ComboBox_C_Press_Event_0) == 0x000008, "Wrong alignment on W_ComboBox_C_Press_Event_0");
static_assert(sizeof(W_ComboBox_C_Press_Event_0) == 0x000010, "Wrong size on W_ComboBox_C_Press_Event_0");
static_assert(offsetof(W_ComboBox_C_Press_Event_0, Item) == 0x000000, "Member 'W_ComboBox_C_Press_Event_0::Item' has a wrong offset!");

// Function W_ComboBox.W_ComboBox_C.Refresh Audio Devices
// 0x0050 (0x0050 - 0x0000)
struct W_ComboBox_C_Refresh_Audio_Devices final
{
public:
	TArray<class FString>                         Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ID;                                                // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UV_SaveGame_C*                          CallFunc_GetSaveGame_SaveGame;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameSave_C>       K2Node_DynamicCast_AsBPI_Game_Save;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSettingFromIdentifier_ReturnValue;     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D2[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSettingFromIdentifier_Value;           // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ComboBox_C_Refresh_Audio_Devices) == 0x000008, "Wrong alignment on W_ComboBox_C_Refresh_Audio_Devices");
static_assert(sizeof(W_ComboBox_C_Refresh_Audio_Devices) == 0x000050, "Wrong size on W_ComboBox_C_Refresh_Audio_Devices");
static_assert(offsetof(W_ComboBox_C_Refresh_Audio_Devices, Array) == 0x000000, "Member 'W_ComboBox_C_Refresh_Audio_Devices::Array' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_Refresh_Audio_Devices, ID) == 0x000010, "Member 'W_ComboBox_C_Refresh_Audio_Devices::ID' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_Refresh_Audio_Devices, CallFunc_GetSaveGame_SaveGame) == 0x000020, "Member 'W_ComboBox_C_Refresh_Audio_Devices::CallFunc_GetSaveGame_SaveGame' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_Refresh_Audio_Devices, K2Node_DynamicCast_AsBPI_Game_Save) == 0x000028, "Member 'W_ComboBox_C_Refresh_Audio_Devices::K2Node_DynamicCast_AsBPI_Game_Save' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_Refresh_Audio_Devices, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'W_ComboBox_C_Refresh_Audio_Devices::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_Refresh_Audio_Devices, CallFunc_GetSettingFromIdentifier_ReturnValue) == 0x000039, "Member 'W_ComboBox_C_Refresh_Audio_Devices::CallFunc_GetSettingFromIdentifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_Refresh_Audio_Devices, CallFunc_GetSettingFromIdentifier_Value) == 0x000040, "Member 'W_ComboBox_C_Refresh_Audio_Devices::CallFunc_GetSettingFromIdentifier_Value' has a wrong offset!");

// Function W_ComboBox.W_ComboBox_C.RefreshComboBoxContent
// 0x0030 (0x0030 - 0x0000)
struct W_ComboBox_C_RefreshComboBoxContent final
{
public:
	struct FS_ComboBoxContent                     Params_0;                                          // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FString                                 Identifier;                                        // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ComboBox_C_RefreshComboBoxContent) == 0x000008, "Wrong alignment on W_ComboBox_C_RefreshComboBoxContent");
static_assert(sizeof(W_ComboBox_C_RefreshComboBoxContent) == 0x000030, "Wrong size on W_ComboBox_C_RefreshComboBoxContent");
static_assert(offsetof(W_ComboBox_C_RefreshComboBoxContent, Params_0) == 0x000000, "Member 'W_ComboBox_C_RefreshComboBoxContent::Params_0' has a wrong offset!");
static_assert(offsetof(W_ComboBox_C_RefreshComboBoxContent, Identifier) == 0x000020, "Member 'W_ComboBox_C_RefreshComboBoxContent::Identifier' has a wrong offset!");

// Function W_ComboBox.W_ComboBox_C.SetSelectedOption
// 0x0010 (0x0010 - 0x0000)
struct W_ComboBox_C_SetSelectedOption final
{
public:
	class FString                                 Param_SelectedOption;                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ComboBox_C_SetSelectedOption) == 0x000008, "Wrong alignment on W_ComboBox_C_SetSelectedOption");
static_assert(sizeof(W_ComboBox_C_SetSelectedOption) == 0x000010, "Wrong size on W_ComboBox_C_SetSelectedOption");
static_assert(offsetof(W_ComboBox_C_SetSelectedOption, Param_SelectedOption) == 0x000000, "Member 'W_ComboBox_C_SetSelectedOption::Param_SelectedOption' has a wrong offset!");

}

