#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CustomSkyLight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CustomSkyLight.BP_CustomSkyLight_C
// 0x0058 (0x0300 - 0x02A8)
class ABP_CustomSkyLight_C final : public ASkyLight
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Timeline_NewTrack_0_5DA0F7F54C80A87C770FC2BC8091864B; // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline__Direction_5DA0F7F54C80A87C770FC2BC8091864B; // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3838[0x3];                                     // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline;                                          // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        PreviousHeight;                                    // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RefreshHeightTreshold;                             // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TransitionMin_Z;                                   // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        TransitionMax_Z;                                   // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTextureCube*                           HellCubeMap;                                       // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTextureCube*                           CityCubeMap;                                       // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        MinIntensity;                                      // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         MaxIntensity;                                      // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EvaluateHeight;                                    // 0x02FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CustomSkyLight(int32 EntryPoint);
	void HellOverride(bool Hell);
	void ReceiveTick(float DeltaSeconds);
	void Timeline__FinishedFunc();
	void Timeline__UpdateFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CustomSkyLight_C">();
	}
	static class ABP_CustomSkyLight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CustomSkyLight_C>();
	}
};
static_assert(alignof(ABP_CustomSkyLight_C) == 0x000008, "Wrong alignment on ABP_CustomSkyLight_C");
static_assert(sizeof(ABP_CustomSkyLight_C) == 0x000300, "Wrong size on ABP_CustomSkyLight_C");
static_assert(offsetof(ABP_CustomSkyLight_C, UberGraphFrame) == 0x0002A8, "Member 'ABP_CustomSkyLight_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CustomSkyLight_C, Timeline_NewTrack_0_5DA0F7F54C80A87C770FC2BC8091864B) == 0x0002B0, "Member 'ABP_CustomSkyLight_C::Timeline_NewTrack_0_5DA0F7F54C80A87C770FC2BC8091864B' has a wrong offset!");
static_assert(offsetof(ABP_CustomSkyLight_C, Timeline__Direction_5DA0F7F54C80A87C770FC2BC8091864B) == 0x0002B4, "Member 'ABP_CustomSkyLight_C::Timeline__Direction_5DA0F7F54C80A87C770FC2BC8091864B' has a wrong offset!");
static_assert(offsetof(ABP_CustomSkyLight_C, Timeline) == 0x0002B8, "Member 'ABP_CustomSkyLight_C::Timeline' has a wrong offset!");
static_assert(offsetof(ABP_CustomSkyLight_C, PreviousHeight) == 0x0002C0, "Member 'ABP_CustomSkyLight_C::PreviousHeight' has a wrong offset!");
static_assert(offsetof(ABP_CustomSkyLight_C, RefreshHeightTreshold) == 0x0002C8, "Member 'ABP_CustomSkyLight_C::RefreshHeightTreshold' has a wrong offset!");
static_assert(offsetof(ABP_CustomSkyLight_C, TransitionMin_Z) == 0x0002D0, "Member 'ABP_CustomSkyLight_C::TransitionMin_Z' has a wrong offset!");
static_assert(offsetof(ABP_CustomSkyLight_C, TransitionMax_Z) == 0x0002D8, "Member 'ABP_CustomSkyLight_C::TransitionMax_Z' has a wrong offset!");
static_assert(offsetof(ABP_CustomSkyLight_C, HellCubeMap) == 0x0002E0, "Member 'ABP_CustomSkyLight_C::HellCubeMap' has a wrong offset!");
static_assert(offsetof(ABP_CustomSkyLight_C, CityCubeMap) == 0x0002E8, "Member 'ABP_CustomSkyLight_C::CityCubeMap' has a wrong offset!");
static_assert(offsetof(ABP_CustomSkyLight_C, MinIntensity) == 0x0002F0, "Member 'ABP_CustomSkyLight_C::MinIntensity' has a wrong offset!");
static_assert(offsetof(ABP_CustomSkyLight_C, MaxIntensity) == 0x0002F8, "Member 'ABP_CustomSkyLight_C::MaxIntensity' has a wrong offset!");
static_assert(offsetof(ABP_CustomSkyLight_C, EvaluateHeight) == 0x0002FC, "Member 'ABP_CustomSkyLight_C::EvaluateHeight' has a wrong offset!");

}

