#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TempleGate

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_TempleGate.BP_TempleGate_C.CountOccupedCars
// 0x0048 (0x0048 - 0x0000)
struct BP_TempleGate_C_CountOccupedCars final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalCount;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17A[0x4];                                      // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17B[0x4];                                      // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Vehicle_C>        K2Node_DynamicCast_AsBPI_Vehicle;                  // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPossessed_Possessed;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TempleGate_C_CountOccupedCars) == 0x000008, "Wrong alignment on BP_TempleGate_C_CountOccupedCars");
static_assert(sizeof(BP_TempleGate_C_CountOccupedCars) == 0x000048, "Wrong size on BP_TempleGate_C_CountOccupedCars");
static_assert(offsetof(BP_TempleGate_C_CountOccupedCars, Count) == 0x000000, "Member 'BP_TempleGate_C_CountOccupedCars::Count' has a wrong offset!");
static_assert(offsetof(BP_TempleGate_C_CountOccupedCars, LocalCount) == 0x000004, "Member 'BP_TempleGate_C_CountOccupedCars::LocalCount' has a wrong offset!");
static_assert(offsetof(BP_TempleGate_C_CountOccupedCars, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_TempleGate_C_CountOccupedCars::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TempleGate_C_CountOccupedCars, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_TempleGate_C_CountOccupedCars::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempleGate_C_CountOccupedCars, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_TempleGate_C_CountOccupedCars::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TempleGate_C_CountOccupedCars, Temp_int_Variable) == 0x000014, "Member 'BP_TempleGate_C_CountOccupedCars::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_TempleGate_C_CountOccupedCars, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_TempleGate_C_CountOccupedCars::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TempleGate_C_CountOccupedCars, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_TempleGate_C_CountOccupedCars::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TempleGate_C_CountOccupedCars, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_TempleGate_C_CountOccupedCars::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempleGate_C_CountOccupedCars, K2Node_DynamicCast_AsBPI_Vehicle) == 0x000030, "Member 'BP_TempleGate_C_CountOccupedCars::K2Node_DynamicCast_AsBPI_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_TempleGate_C_CountOccupedCars, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_TempleGate_C_CountOccupedCars::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TempleGate_C_CountOccupedCars, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'BP_TempleGate_C_CountOccupedCars::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempleGate_C_CountOccupedCars, CallFunc_IsPossessed_Possessed) == 0x000042, "Member 'BP_TempleGate_C_CountOccupedCars::CallFunc_IsPossessed_Possessed' has a wrong offset!");

// Function BP_TempleGate.BP_TempleGate_C.ExecuteUbergraph_BP_TempleGate
// 0x0138 (0x0138 - 0x0000)
struct BP_TempleGate_C_ExecuteUbergraph_BP_TempleGate final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D[0x7];                                      // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0028(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17E[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TempleGate_C_ExecuteUbergraph_BP_TempleGate) == 0x000008, "Wrong alignment on BP_TempleGate_C_ExecuteUbergraph_BP_TempleGate");
static_assert(sizeof(BP_TempleGate_C_ExecuteUbergraph_BP_TempleGate) == 0x000138, "Wrong size on BP_TempleGate_C_ExecuteUbergraph_BP_TempleGate");
static_assert(offsetof(BP_TempleGate_C_ExecuteUbergraph_BP_TempleGate, EntryPoint) == 0x000000, "Member 'BP_TempleGate_C_ExecuteUbergraph_BP_TempleGate::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TempleGate_C_ExecuteUbergraph_BP_TempleGate, CallFunc_VLerp_ReturnValue) == 0x000008, "Member 'BP_TempleGate_C_ExecuteUbergraph_BP_TempleGate::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempleGate_C_ExecuteUbergraph_BP_TempleGate, Temp_bool_Has_Been_Initd_Variable) == 0x000020, "Member 'BP_TempleGate_C_ExecuteUbergraph_BP_TempleGate::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_TempleGate_C_ExecuteUbergraph_BP_TempleGate, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000028, "Member 'BP_TempleGate_C_ExecuteUbergraph_BP_TempleGate::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_TempleGate_C_ExecuteUbergraph_BP_TempleGate, Temp_bool_IsClosed_Variable) == 0x000110, "Member 'BP_TempleGate_C_ExecuteUbergraph_BP_TempleGate::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_TempleGate_C_ExecuteUbergraph_BP_TempleGate, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000118, "Member 'BP_TempleGate_C_ExecuteUbergraph_BP_TempleGate::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempleGate_C_ExecuteUbergraph_BP_TempleGate, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000130, "Member 'BP_TempleGate_C_ExecuteUbergraph_BP_TempleGate::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");

// Function BP_TempleGate.BP_TempleGate_C.IsActivated
// 0x0001 (0x0001 - 0x0000)
struct BP_TempleGate_C_IsActivated final
{
public:
	bool                                          Activated;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TempleGate_C_IsActivated) == 0x000001, "Wrong alignment on BP_TempleGate_C_IsActivated");
static_assert(sizeof(BP_TempleGate_C_IsActivated) == 0x000001, "Wrong size on BP_TempleGate_C_IsActivated");
static_assert(offsetof(BP_TempleGate_C_IsActivated, Activated) == 0x000000, "Member 'BP_TempleGate_C_IsActivated::Activated' has a wrong offset!");

}

