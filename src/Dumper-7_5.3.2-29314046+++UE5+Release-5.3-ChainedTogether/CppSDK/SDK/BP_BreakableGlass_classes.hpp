#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BreakableGlass

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BreakableGlass.BP_BreakableGlass_C
// 0x0050 (0x02E8 - 0x0298)
class ABP_BreakableGlass_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHierarchicalInstancedStaticMeshComponent* HierarchicalInstancedStaticMesh;                   // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh3;                                     // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh2;                                     // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh1;                                     // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABridge_Spline_BP_C*                    NewVar;                                            // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_BreakableGlass_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ExecuteUbergraph_BP_BreakableGlass(int32 EntryPoint);
	void Reset();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BreakableGlass_C">();
	}
	static class ABP_BreakableGlass_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BreakableGlass_C>();
	}
};
static_assert(alignof(ABP_BreakableGlass_C) == 0x000008, "Wrong alignment on ABP_BreakableGlass_C");
static_assert(sizeof(ABP_BreakableGlass_C) == 0x0002E8, "Wrong size on ABP_BreakableGlass_C");
static_assert(offsetof(ABP_BreakableGlass_C, UberGraphFrame) == 0x000298, "Member 'ABP_BreakableGlass_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BreakableGlass_C, HierarchicalInstancedStaticMesh) == 0x0002A0, "Member 'ABP_BreakableGlass_C::HierarchicalInstancedStaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_BreakableGlass_C, SkeletalMesh3) == 0x0002A8, "Member 'ABP_BreakableGlass_C::SkeletalMesh3' has a wrong offset!");
static_assert(offsetof(ABP_BreakableGlass_C, SkeletalMesh2) == 0x0002B0, "Member 'ABP_BreakableGlass_C::SkeletalMesh2' has a wrong offset!");
static_assert(offsetof(ABP_BreakableGlass_C, SkeletalMesh1) == 0x0002B8, "Member 'ABP_BreakableGlass_C::SkeletalMesh1' has a wrong offset!");
static_assert(offsetof(ABP_BreakableGlass_C, SkeletalMesh) == 0x0002C0, "Member 'ABP_BreakableGlass_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_BreakableGlass_C, Box) == 0x0002C8, "Member 'ABP_BreakableGlass_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_BreakableGlass_C, Sphere) == 0x0002D0, "Member 'ABP_BreakableGlass_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_BreakableGlass_C, DefaultSceneRoot) == 0x0002D8, "Member 'ABP_BreakableGlass_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_BreakableGlass_C, NewVar) == 0x0002E0, "Member 'ABP_BreakableGlass_C::NewVar' has a wrong offset!");

}

