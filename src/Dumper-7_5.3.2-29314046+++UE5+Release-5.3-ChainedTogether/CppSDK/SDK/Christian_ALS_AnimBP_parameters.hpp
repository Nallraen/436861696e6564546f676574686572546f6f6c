#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Christian_ALS_AnimBP

#include "Basic.hpp"

#include "VelocityBlend_structs.hpp"
#include "ALS_RotationMode_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "MovementDirection_structs.hpp"
#include "LeanAmount_structs.hpp"
#include "DynamicMontageParams_structs.hpp"
#include "RotateInPlace_Asset_structs.hpp"
#include "TurnInPlace_Asset_structs.hpp"
#include "ALS_Gait_structs.hpp"
#include "ALS_MovementState_structs.hpp"
#include "ALS_MovementAction_structs.hpp"
#include "ALS_Stance_structs.hpp"
#include "ALS_ViewMode_structs.hpp"
#include "ALS_OverlayState_structs.hpp"
#include "GroundedEntryState_structs.hpp"


namespace SDK::Params
{

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.(CLF) CycleBlending
// 0x0070 (0x0070 - 0x0000)
struct Christian_ALS_AnimBP_C__CLF__CycleBlending final
{
public:
	struct FPoseLink                              F;                                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              B;                                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              LF;                                                // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              LB;                                                // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              RF;                                                // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              RB;                                                // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param__CLF__CycleBlending;                         // 0x0060(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Christian_ALS_AnimBP_C__CLF__CycleBlending) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C__CLF__CycleBlending");
static_assert(sizeof(Christian_ALS_AnimBP_C__CLF__CycleBlending) == 0x000070, "Wrong size on Christian_ALS_AnimBP_C__CLF__CycleBlending");
static_assert(offsetof(Christian_ALS_AnimBP_C__CLF__CycleBlending, F) == 0x000000, "Member 'Christian_ALS_AnimBP_C__CLF__CycleBlending::F' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C__CLF__CycleBlending, B) == 0x000010, "Member 'Christian_ALS_AnimBP_C__CLF__CycleBlending::B' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C__CLF__CycleBlending, LF) == 0x000020, "Member 'Christian_ALS_AnimBP_C__CLF__CycleBlending::LF' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C__CLF__CycleBlending, LB) == 0x000030, "Member 'Christian_ALS_AnimBP_C__CLF__CycleBlending::LB' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C__CLF__CycleBlending, RF) == 0x000040, "Member 'Christian_ALS_AnimBP_C__CLF__CycleBlending::RF' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C__CLF__CycleBlending, RB) == 0x000050, "Member 'Christian_ALS_AnimBP_C__CLF__CycleBlending::RB' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C__CLF__CycleBlending, Param__CLF__CycleBlending) == 0x000060, "Member 'Christian_ALS_AnimBP_C__CLF__CycleBlending::Param__CLF__CycleBlending' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.(N) CycleBlending
// 0x0080 (0x0080 - 0x0000)
struct Christian_ALS_AnimBP_C__N__CycleBlending final
{
public:
	struct FPoseLink                              F;                                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              B;                                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              LF;                                                // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              LB;                                                // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              RF;                                                // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              RB;                                                // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Sprint;                                            // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param__N__CycleBlending;                           // 0x0070(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Christian_ALS_AnimBP_C__N__CycleBlending) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C__N__CycleBlending");
static_assert(sizeof(Christian_ALS_AnimBP_C__N__CycleBlending) == 0x000080, "Wrong size on Christian_ALS_AnimBP_C__N__CycleBlending");
static_assert(offsetof(Christian_ALS_AnimBP_C__N__CycleBlending, F) == 0x000000, "Member 'Christian_ALS_AnimBP_C__N__CycleBlending::F' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C__N__CycleBlending, B) == 0x000010, "Member 'Christian_ALS_AnimBP_C__N__CycleBlending::B' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C__N__CycleBlending, LF) == 0x000020, "Member 'Christian_ALS_AnimBP_C__N__CycleBlending::LF' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C__N__CycleBlending, LB) == 0x000030, "Member 'Christian_ALS_AnimBP_C__N__CycleBlending::LB' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C__N__CycleBlending, RF) == 0x000040, "Member 'Christian_ALS_AnimBP_C__N__CycleBlending::RF' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C__N__CycleBlending, RB) == 0x000050, "Member 'Christian_ALS_AnimBP_C__N__CycleBlending::RB' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C__N__CycleBlending, Sprint) == 0x000060, "Member 'Christian_ALS_AnimBP_C__N__CycleBlending::Sprint' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C__N__CycleBlending, Param__N__CycleBlending) == 0x000070, "Member 'Christian_ALS_AnimBP_C__N__CycleBlending::Param__N__CycleBlending' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.AimOffsetBehaviors
// 0x0010 (0x0010 - 0x0000)
struct Christian_ALS_AnimBP_C_AimOffsetBehaviors final
{
public:
	struct FPoseLink                              Param_AimOffsetBehaviors;                          // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Christian_ALS_AnimBP_C_AimOffsetBehaviors) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_AimOffsetBehaviors");
static_assert(sizeof(Christian_ALS_AnimBP_C_AimOffsetBehaviors) == 0x000010, "Wrong size on Christian_ALS_AnimBP_C_AimOffsetBehaviors");
static_assert(offsetof(Christian_ALS_AnimBP_C_AimOffsetBehaviors, Param_AimOffsetBehaviors) == 0x000000, "Member 'Christian_ALS_AnimBP_C_AimOffsetBehaviors::Param_AimOffsetBehaviors' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.AngleInRange
// 0x0050 (0x0050 - 0x0000)
struct Christian_ALS_AnimBP_C_AngleInRange final
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinAngle;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxAngle;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Buffer;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IncreaseBuffer;                                    // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9A[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_AngleInRange) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_AngleInRange");
static_assert(sizeof(Christian_ALS_AnimBP_C_AngleInRange) == 0x000050, "Wrong size on Christian_ALS_AnimBP_C_AngleInRange");
static_assert(offsetof(Christian_ALS_AnimBP_C_AngleInRange, Angle) == 0x000000, "Member 'Christian_ALS_AnimBP_C_AngleInRange::Angle' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_AngleInRange, MinAngle) == 0x000008, "Member 'Christian_ALS_AnimBP_C_AngleInRange::MinAngle' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_AngleInRange, MaxAngle) == 0x000010, "Member 'Christian_ALS_AnimBP_C_AngleInRange::MaxAngle' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_AngleInRange, Buffer) == 0x000018, "Member 'Christian_ALS_AnimBP_C_AngleInRange::Buffer' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_AngleInRange, IncreaseBuffer) == 0x000020, "Member 'Christian_ALS_AnimBP_C_AngleInRange::IncreaseBuffer' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_AngleInRange, ReturnValue) == 0x000021, "Member 'Christian_ALS_AnimBP_C_AngleInRange::ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_AngleInRange, Temp_bool_Variable) == 0x000022, "Member 'Christian_ALS_AnimBP_C_AngleInRange::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_AngleInRange, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'Christian_ALS_AnimBP_C_AngleInRange::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_AngleInRange, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Christian_ALS_AnimBP_C_AngleInRange::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_AngleInRange, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'Christian_ALS_AnimBP_C_AngleInRange::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_AngleInRange, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Christian_ALS_AnimBP_C_AngleInRange::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_AngleInRange, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000048, "Member 'Christian_ALS_AnimBP_C_AngleInRange::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_AngleInRange, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x000049, "Member 'Christian_ALS_AnimBP_C_AngleInRange::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_AngleInRange, K2Node_Select_Default) == 0x00004A, "Member 'Christian_ALS_AnimBP_C_AngleInRange::K2Node_Select_Default' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Christian_ALS_AnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Christian_ALS_AnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_AnimGraph");
static_assert(sizeof(Christian_ALS_AnimBP_C_AnimGraph) == 0x000010, "Wrong size on Christian_ALS_AnimBP_C_AnimGraph");
static_assert(offsetof(Christian_ALS_AnimBP_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'Christian_ALS_AnimBP_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.BaseLayer
// 0x0010 (0x0010 - 0x0000)
struct Christian_ALS_AnimBP_C_BaseLayer final
{
public:
	struct FPoseLink                              Param_BaseLayer;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Christian_ALS_AnimBP_C_BaseLayer) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_BaseLayer");
static_assert(sizeof(Christian_ALS_AnimBP_C_BaseLayer) == 0x000010, "Wrong size on Christian_ALS_AnimBP_C_BaseLayer");
static_assert(offsetof(Christian_ALS_AnimBP_C_BaseLayer, Param_BaseLayer) == 0x000000, "Member 'Christian_ALS_AnimBP_C_BaseLayer::Param_BaseLayer' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.BasePoses
// 0x0010 (0x0010 - 0x0000)
struct Christian_ALS_AnimBP_C_BasePoses final
{
public:
	struct FPoseLink                              Param_BasePoses;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Christian_ALS_AnimBP_C_BasePoses) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_BasePoses");
static_assert(sizeof(Christian_ALS_AnimBP_C_BasePoses) == 0x000010, "Wrong size on Christian_ALS_AnimBP_C_BasePoses");
static_assert(offsetof(Christian_ALS_AnimBP_C_BasePoses, Param_BasePoses) == 0x000000, "Member 'Christian_ALS_AnimBP_C_BasePoses::Param_BasePoses' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct Christian_ALS_AnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         Param_DeltaTimeX;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on Christian_ALS_AnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(Christian_ALS_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on Christian_ALS_AnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(Christian_ALS_AnimBP_C_BlueprintUpdateAnimation, Param_DeltaTimeX) == 0x000000, "Member 'Christian_ALS_AnimBP_C_BlueprintUpdateAnimation::Param_DeltaTimeX' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.BPI_SetGroundedEntryState
// 0x0001 (0x0001 - 0x0000)
struct Christian_ALS_AnimBP_C_BPI_SetGroundedEntryState final
{
public:
	EGroundedEntryState                           Param_GroundedEntryState;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_BPI_SetGroundedEntryState) == 0x000001, "Wrong alignment on Christian_ALS_AnimBP_C_BPI_SetGroundedEntryState");
static_assert(sizeof(Christian_ALS_AnimBP_C_BPI_SetGroundedEntryState) == 0x000001, "Wrong size on Christian_ALS_AnimBP_C_BPI_SetGroundedEntryState");
static_assert(offsetof(Christian_ALS_AnimBP_C_BPI_SetGroundedEntryState, Param_GroundedEntryState) == 0x000000, "Member 'Christian_ALS_AnimBP_C_BPI_SetGroundedEntryState::Param_GroundedEntryState' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.BPI_SetOverlayOverrideState
// 0x0004 (0x0004 - 0x0000)
struct Christian_ALS_AnimBP_C_BPI_SetOverlayOverrideState final
{
public:
	int32                                         Param_OverlayOverrideState;                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_BPI_SetOverlayOverrideState) == 0x000004, "Wrong alignment on Christian_ALS_AnimBP_C_BPI_SetOverlayOverrideState");
static_assert(sizeof(Christian_ALS_AnimBP_C_BPI_SetOverlayOverrideState) == 0x000004, "Wrong size on Christian_ALS_AnimBP_C_BPI_SetOverlayOverrideState");
static_assert(offsetof(Christian_ALS_AnimBP_C_BPI_SetOverlayOverrideState, Param_OverlayOverrideState) == 0x000000, "Member 'Christian_ALS_AnimBP_C_BPI_SetOverlayOverrideState::Param_OverlayOverrideState' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.CalculateCrouchingPlayRate
// 0x0060 (0x0060 - 0x0000)
struct Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate final
{
public:
	double                                        PlayRate;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate");
static_assert(sizeof(Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate) == 0x000060, "Wrong size on Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate, PlayRate) == 0x000000, "Member 'Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate::PlayRate' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_GetOwningComponent_ReturnValue) == 0x000008, "Member 'Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000010, "Member 'Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_BreakVector_X) == 0x000028, "Member 'Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_BreakVector_Y) == 0x000030, "Member 'Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_BreakVector_Z) == 0x000038, "Member 'Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'Christian_ALS_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.CalculateDiagonalScaleAmount
// 0x0040 (0x0040 - 0x0000)
struct Christian_ALS_AnimBP_C_CalculateDiagonalScaleAmount final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9B[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_CalculateDiagonalScaleAmount) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_CalculateDiagonalScaleAmount");
static_assert(sizeof(Christian_ALS_AnimBP_C_CalculateDiagonalScaleAmount) == 0x000040, "Wrong size on Christian_ALS_AnimBP_C_CalculateDiagonalScaleAmount");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateDiagonalScaleAmount, ReturnValue) == 0x000000, "Member 'Christian_ALS_AnimBP_C_CalculateDiagonalScaleAmount::ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateDiagonalScaleAmount, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'Christian_ALS_AnimBP_C_CalculateDiagonalScaleAmount::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateDiagonalScaleAmount, CallFunc_Abs_ReturnValue) == 0x000010, "Member 'Christian_ALS_AnimBP_C_CalculateDiagonalScaleAmount::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateDiagonalScaleAmount, CallFunc_GetFloatValue_ReturnValue) == 0x000018, "Member 'Christian_ALS_AnimBP_C_CalculateDiagonalScaleAmount::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateDiagonalScaleAmount, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000020, "Member 'Christian_ALS_AnimBP_C_CalculateDiagonalScaleAmount::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateDiagonalScaleAmount, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000028, "Member 'Christian_ALS_AnimBP_C_CalculateDiagonalScaleAmount::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateDiagonalScaleAmount, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000030, "Member 'Christian_ALS_AnimBP_C_CalculateDiagonalScaleAmount::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateDiagonalScaleAmount, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000038, "Member 'Christian_ALS_AnimBP_C_CalculateDiagonalScaleAmount::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.CalculateInAirLeanAmount
// 0x00D0 (0x00D0 - 0x0000)
struct Christian_ALS_AnimBP_C_CalculateInAirLeanAmount final
{
public:
	struct FLeanAmount                            Param_LeanAmount;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9C[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCapsuleRotation_Rotation;              // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeanAmount                            K2Node_MakeStruct_LeanAmount;                      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9D[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_Vector2DFloat_B_ImplicitCast;    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_CalculateInAirLeanAmount) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_CalculateInAirLeanAmount");
static_assert(sizeof(Christian_ALS_AnimBP_C_CalculateInAirLeanAmount) == 0x0000D0, "Wrong size on Christian_ALS_AnimBP_C_CalculateInAirLeanAmount");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateInAirLeanAmount, Param_LeanAmount) == 0x000000, "Member 'Christian_ALS_AnimBP_C_CalculateInAirLeanAmount::Param_LeanAmount' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateInAirLeanAmount, K2Node_DynamicCast_AsBPI_Character) == 0x000008, "Member 'Christian_ALS_AnimBP_C_CalculateInAirLeanAmount::K2Node_DynamicCast_AsBPI_Character' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateInAirLeanAmount, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Christian_ALS_AnimBP_C_CalculateInAirLeanAmount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_GetFloatValue_ReturnValue) == 0x00001C, "Member 'Christian_ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_GetCapsuleRotation_Rotation) == 0x000020, "Member 'Christian_ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_GetCapsuleRotation_Rotation' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000038, "Member 'Christian_ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000050, "Member 'Christian_ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_BreakVector_X) == 0x000068, "Member 'Christian_ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_BreakVector_Y) == 0x000070, "Member 'Christian_ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_BreakVector_Z) == 0x000078, "Member 'Christian_ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_MakeVector2D_ReturnValue) == 0x000080, "Member 'Christian_ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000090, "Member 'Christian_ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_BreakVector2D_X) == 0x0000A0, "Member 'Christian_ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_BreakVector2D_Y) == 0x0000A8, "Member 'Christian_ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateInAirLeanAmount, K2Node_MakeStruct_LeanAmount) == 0x0000B0, "Member 'Christian_ALS_AnimBP_C_CalculateInAirLeanAmount::K2Node_MakeStruct_LeanAmount' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0000B8, "Member 'Christian_ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_Multiply_Vector2DFloat_B_ImplicitCast) == 0x0000C0, "Member 'Christian_ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_Multiply_Vector2DFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateInAirLeanAmount, K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast) == 0x0000C8, "Member 'Christian_ALS_AnimBP_C_CalculateInAirLeanAmount::K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateInAirLeanAmount, K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast) == 0x0000CC, "Member 'Christian_ALS_AnimBP_C_CalculateInAirLeanAmount::K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.CalculateLandPrediction
// 0x02E0 (0x02E0 - 0x0000)
struct Christian_ALS_AnimBP_C_CalculateLandPrediction final
{
public:
	double                                        Param_LandPrediction;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	EDrawDebugTrace                               CallFunc_GetDebugTraceType_DebugType;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9E[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9F[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FA0[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      CallFunc_GetCapsuleComponent_Capsule;              // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_NormalUnsafe_ReturnValue;          // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_CapsuleTraceSingleByProfile_OutHit;       // 0x00F8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleByProfile_ReturnValue;  // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FA1[0x1];                                     // 0x01E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FA2[0x4];                                     // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FA3[0x4];                                     // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalkableSurface_ReturnValue;            // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FA4[0x3];                                     // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FA5[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_CalculateLandPrediction) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_CalculateLandPrediction");
static_assert(sizeof(Christian_ALS_AnimBP_C_CalculateLandPrediction) == 0x0002E0, "Wrong size on Christian_ALS_AnimBP_C_CalculateLandPrediction");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, Param_LandPrediction) == 0x000000, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::Param_LandPrediction' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, Temp_object_Variable) == 0x000008, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_GetDebugTraceType_DebugType) == 0x000018, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_GetDebugTraceType_DebugType' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000019, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, K2Node_DynamicCast_AsBPI_Character) == 0x000020, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::K2Node_DynamicCast_AsBPI_Character' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_GetCurveValue_ReturnValue) == 0x000034, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, K2Node_DynamicCast_AsBPI_Character_1) == 0x000038, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::K2Node_DynamicCast_AsBPI_Character_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_GetCapsuleComponent_Capsule) == 0x000068, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_GetCapsuleComponent_Capsule' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakVector_X) == 0x000070, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakVector_Y) == 0x000078, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakVector_Z) == 0x000080, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_FClamp_ReturnValue) == 0x000088, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_MapRangeClamped_ReturnValue) == 0x000090, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_MakeVector_ReturnValue) == 0x000098, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_Vector_NormalUnsafe_ReturnValue) == 0x0000B0, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_Vector_NormalUnsafe_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000C8, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E0, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_CapsuleTraceSingleByProfile_OutHit) == 0x0000F8, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_CapsuleTraceSingleByProfile_OutHit' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_CapsuleTraceSingleByProfile_ReturnValue) == 0x0001E0, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_CapsuleTraceSingleByProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_bBlockingHit) == 0x0001E1, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001E2, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_Time) == 0x0001E4, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_Distance) == 0x0001E8, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_Location) == 0x0001F0, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_ImpactPoint) == 0x000208, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_Normal) == 0x000220, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_ImpactNormal) == 0x000238, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_PhysMat) == 0x000250, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_HitActor) == 0x000258, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_HitComponent) == 0x000260, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_HitBoneName) == 0x000268, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_BoneName) == 0x000270, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_HitItem) == 0x000278, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_ElementIndex) == 0x00027C, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_FaceIndex) == 0x000280, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_TraceStart) == 0x000288, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_TraceEnd) == 0x0002A0, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_IsWalkableSurface_ReturnValue) == 0x0002B8, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_IsWalkableSurface_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_GetFloatValue_ReturnValue) == 0x0002BC, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_Lerp_ReturnValue) == 0x0002C0, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BooleanAND_ReturnValue) == 0x0002C8, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_Lerp_Alpha_ImplicitCast) == 0x0002D0, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateLandPrediction, CallFunc_Lerp_A_ImplicitCast) == 0x0002D8, "Member 'Christian_ALS_AnimBP_C_CalculateLandPrediction::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.CalculateMovementDirection
// 0x0058 (0x0058 - 0x0000)
struct Christian_ALS_AnimBP_C_CalculateMovementDirection final
{
public:
	EMovementDirection                            ReturnValues;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FA6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FA7[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementDirection                            CallFunc_CalculateQuadrant_ReturnValue;            // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FA8[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculateQuadrant_Angle_ImplicitCast;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_CalculateMovementDirection) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_CalculateMovementDirection");
static_assert(sizeof(Christian_ALS_AnimBP_C_CalculateMovementDirection) == 0x000058, "Wrong size on Christian_ALS_AnimBP_C_CalculateMovementDirection");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateMovementDirection, ReturnValues) == 0x000000, "Member 'Christian_ALS_AnimBP_C_CalculateMovementDirection::ReturnValues' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateMovementDirection, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000008, "Member 'Christian_ALS_AnimBP_C_CalculateMovementDirection::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateMovementDirection, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'Christian_ALS_AnimBP_C_CalculateMovementDirection::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateMovementDirection, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000028, "Member 'Christian_ALS_AnimBP_C_CalculateMovementDirection::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateMovementDirection, CallFunc_BreakRotator_Roll) == 0x000040, "Member 'Christian_ALS_AnimBP_C_CalculateMovementDirection::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateMovementDirection, CallFunc_BreakRotator_Pitch) == 0x000044, "Member 'Christian_ALS_AnimBP_C_CalculateMovementDirection::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateMovementDirection, CallFunc_BreakRotator_Yaw) == 0x000048, "Member 'Christian_ALS_AnimBP_C_CalculateMovementDirection::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateMovementDirection, K2Node_SwitchEnum_CmpSuccess_1) == 0x00004C, "Member 'Christian_ALS_AnimBP_C_CalculateMovementDirection::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateMovementDirection, CallFunc_CalculateQuadrant_ReturnValue) == 0x00004D, "Member 'Christian_ALS_AnimBP_C_CalculateMovementDirection::CallFunc_CalculateQuadrant_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateMovementDirection, CallFunc_CalculateQuadrant_Angle_ImplicitCast) == 0x000050, "Member 'Christian_ALS_AnimBP_C_CalculateMovementDirection::CallFunc_CalculateQuadrant_Angle_ImplicitCast' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.CalculateQuadrant
// 0x0048 (0x0048 - 0x0000)
struct Christian_ALS_AnimBP_C_CalculateQuadrant final
{
public:
	EMovementDirection                            Current;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FA9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FRMinusThreshold;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FLMinusThreshold;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BRMinusThreshold;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BLMinusThreshold;                                  // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Buffer;                                            // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementDirection                            ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AngleInRange_ReturnValue;                 // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AngleInRange_ReturnValue_1;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_4;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_5;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AngleInRange_ReturnValue_2;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_CalculateQuadrant) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_CalculateQuadrant");
static_assert(sizeof(Christian_ALS_AnimBP_C_CalculateQuadrant) == 0x000048, "Wrong size on Christian_ALS_AnimBP_C_CalculateQuadrant");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateQuadrant, Current) == 0x000000, "Member 'Christian_ALS_AnimBP_C_CalculateQuadrant::Current' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateQuadrant, FRMinusThreshold) == 0x000008, "Member 'Christian_ALS_AnimBP_C_CalculateQuadrant::FRMinusThreshold' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateQuadrant, FLMinusThreshold) == 0x000010, "Member 'Christian_ALS_AnimBP_C_CalculateQuadrant::FLMinusThreshold' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateQuadrant, BRMinusThreshold) == 0x000018, "Member 'Christian_ALS_AnimBP_C_CalculateQuadrant::BRMinusThreshold' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateQuadrant, BLMinusThreshold) == 0x000020, "Member 'Christian_ALS_AnimBP_C_CalculateQuadrant::BLMinusThreshold' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateQuadrant, Buffer) == 0x000028, "Member 'Christian_ALS_AnimBP_C_CalculateQuadrant::Buffer' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateQuadrant, Angle) == 0x000030, "Member 'Christian_ALS_AnimBP_C_CalculateQuadrant::Angle' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateQuadrant, ReturnValue) == 0x000038, "Member 'Christian_ALS_AnimBP_C_CalculateQuadrant::ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateQuadrant, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000039, "Member 'Christian_ALS_AnimBP_C_CalculateQuadrant::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateQuadrant, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00003A, "Member 'Christian_ALS_AnimBP_C_CalculateQuadrant::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateQuadrant, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x00003B, "Member 'Christian_ALS_AnimBP_C_CalculateQuadrant::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateQuadrant, CallFunc_BooleanOR_ReturnValue) == 0x00003C, "Member 'Christian_ALS_AnimBP_C_CalculateQuadrant::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateQuadrant, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x00003D, "Member 'Christian_ALS_AnimBP_C_CalculateQuadrant::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateQuadrant, CallFunc_AngleInRange_ReturnValue) == 0x00003E, "Member 'Christian_ALS_AnimBP_C_CalculateQuadrant::CallFunc_AngleInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateQuadrant, CallFunc_BooleanOR_ReturnValue_1) == 0x00003F, "Member 'Christian_ALS_AnimBP_C_CalculateQuadrant::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateQuadrant, CallFunc_AngleInRange_ReturnValue_1) == 0x000040, "Member 'Christian_ALS_AnimBP_C_CalculateQuadrant::CallFunc_AngleInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateQuadrant, CallFunc_NotEqual_ByteByte_ReturnValue_4) == 0x000041, "Member 'Christian_ALS_AnimBP_C_CalculateQuadrant::CallFunc_NotEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateQuadrant, CallFunc_NotEqual_ByteByte_ReturnValue_5) == 0x000042, "Member 'Christian_ALS_AnimBP_C_CalculateQuadrant::CallFunc_NotEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateQuadrant, CallFunc_BooleanOR_ReturnValue_2) == 0x000043, "Member 'Christian_ALS_AnimBP_C_CalculateQuadrant::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateQuadrant, CallFunc_AngleInRange_ReturnValue_2) == 0x000044, "Member 'Christian_ALS_AnimBP_C_CalculateQuadrant::CallFunc_AngleInRange_ReturnValue_2' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.CalculateRelativeAccelerationAmount
// 0x0140 (0x0140 - 0x0000)
struct Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxBrakingDeceleration;                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FAA[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetCapsuleRotation_Rotation;              // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Vector_ClampSizeMax_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character_1;              // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FAB[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetCapsuleRotation_Rotation_1;            // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character_2;              // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FAC[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWalkMagnitude_Magnitude;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FAD[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Vector_ClampSizeMax_ReturnValue_1;        // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_1;         // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue_1;     // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount");
static_assert(sizeof(Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount) == 0x000140, "Wrong size on Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount, ReturnValue) == 0x000000, "Member 'Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount::ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount, MaxBrakingDeceleration) == 0x000018, "Member 'Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount::MaxBrakingDeceleration' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount, K2Node_DynamicCast_AsBPI_Character) == 0x000020, "Member 'Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount::K2Node_DynamicCast_AsBPI_Character' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_GetCapsuleRotation_Rotation) == 0x000038, "Member 'Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_GetCapsuleRotation_Rotation' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Vector_ClampSizeMax_ReturnValue) == 0x000050, "Member 'Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Vector_ClampSizeMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000068, "Member 'Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000080, "Member 'Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount, K2Node_DynamicCast_AsBPI_Character_1) == 0x000098, "Member 'Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount::K2Node_DynamicCast_AsBPI_Character_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_GetCapsuleRotation_Rotation_1) == 0x0000B0, "Member 'Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_GetCapsuleRotation_Rotation_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount, K2Node_DynamicCast_AsBPI_Character_2) == 0x0000C8, "Member 'Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount::K2Node_DynamicCast_AsBPI_Character_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount, K2Node_DynamicCast_bSuccess_2) == 0x0000D8, "Member 'Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_GetWalkMagnitude_Magnitude) == 0x0000E0, "Member 'Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_GetWalkMagnitude_Magnitude' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000E8, "Member 'Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Vector_ClampSizeMax_ReturnValue_1) == 0x0000F8, "Member 'Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Vector_ClampSizeMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Divide_VectorFloat_ReturnValue_1) == 0x000110, "Member 'Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Divide_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_LessLess_VectorRotator_ReturnValue_1) == 0x000128, "Member 'Christian_ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_LessLess_VectorRotator_ReturnValue_1' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.CalculateStandingPlayRate
// 0x00C0 (0x00C0 - 0x0000)
struct Christian_ALS_AnimBP_C_CalculateStandingPlayRate final
{
public:
	double                                        PlayRate;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FAE[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FAF[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_CalculateStandingPlayRate");
static_assert(sizeof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate) == 0x0000C0, "Wrong size on Christian_ALS_AnimBP_C_CalculateStandingPlayRate");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate, PlayRate) == 0x000000, "Member 'Christian_ALS_AnimBP_C_CalculateStandingPlayRate::PlayRate' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_GetCurveValue_ReturnValue) == 0x000008, "Member 'Christian_ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'Christian_ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'Christian_ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_GetCurveValue_ReturnValue_1) == 0x000020, "Member 'Christian_ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_GetOwningComponent_ReturnValue) == 0x000028, "Member 'Christian_ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Christian_ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000038, "Member 'Christian_ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_FClamp_ReturnValue_1) == 0x000050, "Member 'Christian_ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_BreakVector_X) == 0x000058, "Member 'Christian_ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_BreakVector_Y) == 0x000060, "Member 'Christian_ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_BreakVector_Z) == 0x000068, "Member 'Christian_ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000070, "Member 'Christian_ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'Christian_ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'Christian_ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_Lerp_ReturnValue) == 0x000088, "Member 'Christian_ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_Lerp_ReturnValue_1) == 0x000090, "Member 'Christian_ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000098, "Member 'Christian_ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x0000A0, "Member 'Christian_ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_FClamp_ReturnValue_2) == 0x0000A8, "Member 'Christian_ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0000B0, "Member 'Christian_ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x0000B8, "Member 'Christian_ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.CalculateStrideBlend
// 0x0010 (0x0010 - 0x0000)
struct Christian_ALS_AnimBP_C_CalculateStrideBlend final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_CalculateStrideBlend) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_CalculateStrideBlend");
static_assert(sizeof(Christian_ALS_AnimBP_C_CalculateStrideBlend) == 0x000010, "Wrong size on Christian_ALS_AnimBP_C_CalculateStrideBlend");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStrideBlend, ReturnValue) == 0x000000, "Member 'Christian_ALS_AnimBP_C_CalculateStrideBlend::ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateStrideBlend, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Christian_ALS_AnimBP_C_CalculateStrideBlend::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.CalculateVelocityBlend
// 0x0168 (0x0168 - 0x0000)
struct Christian_ALS_AnimBP_C_CalculateVelocityBlend final
{
public:
	struct FVelocityBlend                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RelativeDirection;                                 // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sum;                                               // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocRelativeVelocityDir;                            // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character;                // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB0[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCapsuleRotation_Rotation;              // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Abs_ReturnValue_3;                        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_4;                        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVelocityBlend                         K2Node_MakeStruct_VelocityBlend;                   // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_9_79E6E09B4A52B442B9FE6DB7192CFBEE_ImplicitCast; // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_L_8_DFEBB8584D28F158D2562CA60EB07B6D_ImplicitCast; // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_5_0A0855774CB13BB3E4B0A6847E7154F6_ImplicitCast; // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_F_3_2154ABAD4BD15DAC904154B63D704219_ImplicitCast; // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_CalculateVelocityBlend) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_CalculateVelocityBlend");
static_assert(sizeof(Christian_ALS_AnimBP_C_CalculateVelocityBlend) == 0x000168, "Wrong size on Christian_ALS_AnimBP_C_CalculateVelocityBlend");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, ReturnValue) == 0x000000, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, RelativeDirection) == 0x000010, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::RelativeDirection' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, Sum) == 0x000028, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::Sum' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, LocRelativeVelocityDir) == 0x000030, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::LocRelativeVelocityDir' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000048, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_BreakVector_X) == 0x000060, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_BreakVector_Y) == 0x000068, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_BreakVector_Z) == 0x000070, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_Abs_ReturnValue) == 0x000078, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_Abs_ReturnValue_1) == 0x000080, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_Abs_ReturnValue_2) == 0x000088, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000090, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_Normal_ReturnValue) == 0x000098, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_BreakVector_X_1) == 0x0000B8, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_BreakVector_Y_1) == 0x0000C0, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_BreakVector_Z_1) == 0x0000C8, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_FClamp_ReturnValue) == 0x0000D0, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, K2Node_DynamicCast_AsBPI_Character) == 0x0000D8, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::K2Node_DynamicCast_AsBPI_Character' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_FClamp_ReturnValue_1) == 0x0000F0, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_GetCapsuleRotation_Rotation) == 0x0000F8, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_GetCapsuleRotation_Rotation' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_Abs_ReturnValue_3) == 0x000110, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000118, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_FClamp_ReturnValue_2) == 0x000130, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_Abs_ReturnValue_4) == 0x000138, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_Abs_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_FClamp_ReturnValue_3) == 0x000140, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, K2Node_MakeStruct_VelocityBlend) == 0x000148, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::K2Node_MakeStruct_VelocityBlend' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, K2Node_MakeStruct_R_9_79E6E09B4A52B442B9FE6DB7192CFBEE_ImplicitCast) == 0x000158, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::K2Node_MakeStruct_R_9_79E6E09B4A52B442B9FE6DB7192CFBEE_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, K2Node_MakeStruct_L_8_DFEBB8584D28F158D2562CA60EB07B6D_ImplicitCast) == 0x00015C, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::K2Node_MakeStruct_L_8_DFEBB8584D28F158D2562CA60EB07B6D_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, K2Node_MakeStruct_B_5_0A0855774CB13BB3E4B0A6847E7154F6_ImplicitCast) == 0x000160, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::K2Node_MakeStruct_B_5_0A0855774CB13BB3E4B0A6847E7154F6_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateVelocityBlend, K2Node_MakeStruct_F_3_2154ABAD4BD15DAC904154B63D704219_ImplicitCast) == 0x000164, "Member 'Christian_ALS_AnimBP_C_CalculateVelocityBlend::K2Node_MakeStruct_F_3_2154ABAD4BD15DAC904154B63D704219_ImplicitCast' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.CalculateWalkRunBlend
// 0x0020 (0x0020 - 0x0000)
struct Christian_ALS_AnimBP_C_CalculateWalkRunBlend final
{
public:
	double                                        Param_WalkRunBlend;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RunSpeed;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WalkSpeed;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_CalculateWalkRunBlend) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_CalculateWalkRunBlend");
static_assert(sizeof(Christian_ALS_AnimBP_C_CalculateWalkRunBlend) == 0x000020, "Wrong size on Christian_ALS_AnimBP_C_CalculateWalkRunBlend");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateWalkRunBlend, Param_WalkRunBlend) == 0x000000, "Member 'Christian_ALS_AnimBP_C_CalculateWalkRunBlend::Param_WalkRunBlend' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateWalkRunBlend, RunSpeed) == 0x000008, "Member 'Christian_ALS_AnimBP_C_CalculateWalkRunBlend::RunSpeed' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateWalkRunBlend, WalkSpeed) == 0x000010, "Member 'Christian_ALS_AnimBP_C_CalculateWalkRunBlend::WalkSpeed' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CalculateWalkRunBlend, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'Christian_ALS_AnimBP_C_CalculateWalkRunBlend::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.CanDynamicTransition
// 0x0018 (0x0018 - 0x0000)
struct Christian_ALS_AnimBP_C_CanDynamicTransition final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB2[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_CanDynamicTransition) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_CanDynamicTransition");
static_assert(sizeof(Christian_ALS_AnimBP_C_CanDynamicTransition) == 0x000018, "Wrong size on Christian_ALS_AnimBP_C_CanDynamicTransition");
static_assert(offsetof(Christian_ALS_AnimBP_C_CanDynamicTransition, ReturnValue) == 0x000000, "Member 'Christian_ALS_AnimBP_C_CanDynamicTransition::ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CanDynamicTransition, CallFunc_GetCurveValue_ReturnValue) == 0x000004, "Member 'Christian_ALS_AnimBP_C_CanDynamicTransition::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CanDynamicTransition, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'Christian_ALS_AnimBP_C_CanDynamicTransition::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CanDynamicTransition, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x000010, "Member 'Christian_ALS_AnimBP_C_CanDynamicTransition::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.CanOverlayTransition
// 0x0004 (0x0004 - 0x0000)
struct Christian_ALS_AnimBP_C_CanOverlayTransition final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_CanOverlayTransition) == 0x000001, "Wrong alignment on Christian_ALS_AnimBP_C_CanOverlayTransition");
static_assert(sizeof(Christian_ALS_AnimBP_C_CanOverlayTransition) == 0x000004, "Wrong size on Christian_ALS_AnimBP_C_CanOverlayTransition");
static_assert(offsetof(Christian_ALS_AnimBP_C_CanOverlayTransition, ReturnValue) == 0x000000, "Member 'Christian_ALS_AnimBP_C_CanOverlayTransition::ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CanOverlayTransition, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Christian_ALS_AnimBP_C_CanOverlayTransition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CanOverlayTransition, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'Christian_ALS_AnimBP_C_CanOverlayTransition::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CanOverlayTransition, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'Christian_ALS_AnimBP_C_CanOverlayTransition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.CanRotateInPlace
// 0x0004 (0x0004 - 0x0000)
struct Christian_ALS_AnimBP_C_CanRotateInPlace final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_CanRotateInPlace) == 0x000001, "Wrong alignment on Christian_ALS_AnimBP_C_CanRotateInPlace");
static_assert(sizeof(Christian_ALS_AnimBP_C_CanRotateInPlace) == 0x000004, "Wrong size on Christian_ALS_AnimBP_C_CanRotateInPlace");
static_assert(offsetof(Christian_ALS_AnimBP_C_CanRotateInPlace, ReturnValue) == 0x000000, "Member 'Christian_ALS_AnimBP_C_CanRotateInPlace::ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CanRotateInPlace, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Christian_ALS_AnimBP_C_CanRotateInPlace::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CanRotateInPlace, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'Christian_ALS_AnimBP_C_CanRotateInPlace::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CanRotateInPlace, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'Christian_ALS_AnimBP_C_CanRotateInPlace::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.CanTurnInPlace
// 0x0018 (0x0018 - 0x0000)
struct Christian_ALS_AnimBP_C_CanTurnInPlace final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB3[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB4[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_CanTurnInPlace) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_CanTurnInPlace");
static_assert(sizeof(Christian_ALS_AnimBP_C_CanTurnInPlace) == 0x000018, "Wrong size on Christian_ALS_AnimBP_C_CanTurnInPlace");
static_assert(offsetof(Christian_ALS_AnimBP_C_CanTurnInPlace, ReturnValue) == 0x000000, "Member 'Christian_ALS_AnimBP_C_CanTurnInPlace::ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CanTurnInPlace, CallFunc_GetCurveValue_ReturnValue) == 0x000004, "Member 'Christian_ALS_AnimBP_C_CanTurnInPlace::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CanTurnInPlace, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'Christian_ALS_AnimBP_C_CanTurnInPlace::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CanTurnInPlace, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'Christian_ALS_AnimBP_C_CanTurnInPlace::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CanTurnInPlace, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000A, "Member 'Christian_ALS_AnimBP_C_CanTurnInPlace::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CanTurnInPlace, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'Christian_ALS_AnimBP_C_CanTurnInPlace::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CanTurnInPlace, CallFunc_BooleanAND_ReturnValue_1) == 0x00000C, "Member 'Christian_ALS_AnimBP_C_CanTurnInPlace::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_CanTurnInPlace, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000010, "Member 'Christian_ALS_AnimBP_C_CanTurnInPlace::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.DynamicTransitionCheck
// 0x0068 (0x0068 - 0x0000)
struct Christian_ALS_AnimBP_C_DynamicTransitionCheck final
{
public:
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams;            // 0x0000(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB5[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_1;          // 0x0028(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB6[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue_1;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue_1; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB7[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_DynamicTransitionCheck) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_DynamicTransitionCheck");
static_assert(sizeof(Christian_ALS_AnimBP_C_DynamicTransitionCheck) == 0x000068, "Wrong size on Christian_ALS_AnimBP_C_DynamicTransitionCheck");
static_assert(offsetof(Christian_ALS_AnimBP_C_DynamicTransitionCheck, K2Node_MakeStruct_DynamicMontageParams) == 0x000000, "Member 'Christian_ALS_AnimBP_C_DynamicTransitionCheck::K2Node_MakeStruct_DynamicMontageParams' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_DynamicTransitionCheck, CallFunc_GetOwningComponent_ReturnValue) == 0x000018, "Member 'Christian_ALS_AnimBP_C_DynamicTransitionCheck::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_DynamicTransitionCheck, CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue) == 0x000020, "Member 'Christian_ALS_AnimBP_C_DynamicTransitionCheck::CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_DynamicTransitionCheck, K2Node_MakeStruct_DynamicMontageParams_1) == 0x000028, "Member 'Christian_ALS_AnimBP_C_DynamicTransitionCheck::K2Node_MakeStruct_DynamicMontageParams_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_DynamicTransitionCheck, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000040, "Member 'Christian_ALS_AnimBP_C_DynamicTransitionCheck::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_DynamicTransitionCheck, CallFunc_GetOwningComponent_ReturnValue_1) == 0x000048, "Member 'Christian_ALS_AnimBP_C_DynamicTransitionCheck::CallFunc_GetOwningComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_DynamicTransitionCheck, CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue_1) == 0x000050, "Member 'Christian_ALS_AnimBP_C_DynamicTransitionCheck::CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_DynamicTransitionCheck, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000054, "Member 'Christian_ALS_AnimBP_C_DynamicTransitionCheck::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_DynamicTransitionCheck, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000058, "Member 'Christian_ALS_AnimBP_C_DynamicTransitionCheck::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_DynamicTransitionCheck, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x000060, "Member 'Christian_ALS_AnimBP_C_DynamicTransitionCheck::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.ExecuteUbergraph_Christian_ALS_AnimBP
// 0x0A60 (0x0A60 - 0x0000)
struct Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB9[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FBA[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_2;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_3;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_12;       // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_13;       // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FBB[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_4;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_14;       // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FBC[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_5;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_6;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_2;    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FBD[0x1];                                     // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue;       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_3;    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FBE[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_7;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_8;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FBF[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_4;    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_3;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC0[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_9;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_10;             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_1;     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_5;    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC1[0x2];                                     // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_2;     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_6;    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC2[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_11;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC3[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_4;          // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC4[0x1];                                     // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_7;    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC5[0x2];                                     // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceMachineWeight_ReturnValue;     // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceMachineWeight_ReturnValue_1;   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_8;    // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC6[0x2];                                     // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1; // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_9;    // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC7[0x1];                                     // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_3;     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2; // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_2;      // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_10;   // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC8[0x2];                                     // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC9[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_1; // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FCA[0x1];                                     // 0x0103(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_12;             // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_5;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_15;       // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FCB[0x6];                                     // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_2;         // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FCC[0x2];                                     // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3; // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_11;   // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_16;       // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_17;       // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceMachineWeight_ReturnValue_2;   // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_12;   // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_18;       // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_19;       // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FCD[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceMachineWeight_ReturnValue_3;   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_4;     // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_3;      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_4;      // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FCE[0x5];                                     // 0x0143(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_13;             // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_3;         // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FCF[0x1];                                     // 0x015F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_14;             // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_6;          // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_20;       // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_21;       // 0x0166(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD0[0x1];                                     // 0x0167(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_4;         // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_22;       // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_23;       // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x017B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD1[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4; // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_13;   // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_5;      // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_24;       // 0x019F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5; // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_14;   // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD2[0x3];                                     // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_2; // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD3[0x3];                                     // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_5;     // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_15;   // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD4[0x3];                                     // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_3; // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD5[0x2];                                     // 0x01C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_6;     // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_6;      // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD6[0x3];                                     // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_7;     // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_16;   // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x01D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD7[0x1];                                     // 0x01D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_5;         // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_17;                // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD8[0x2];                                     // 0x01EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_15;             // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_17;   // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD9[0x3];                                     // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_4; // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_6;                        // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_6;                        // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_5;       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_6;         // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_18;                // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FDA[0x5];                                     // 0x020B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_3;                        // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_25;       // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FDB[0x2];                                     // 0x021A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_8;     // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_18;   // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FDC[0x1];                                     // 0x0223(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_9;     // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_19;   // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_19;                // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_26;       // 0x022B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x022E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_27;       // 0x022F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_16;             // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_7;          // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FDD[0x3];                                     // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_17;             // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_18;             // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_6;       // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FDE[0x7];                                     // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_4;                        // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_4;          // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FDF[0x2];                                     // 0x0252(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_19;             // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_5;                        // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_8;          // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_5;          // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0263(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_7;       // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0266(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE0[0x1];                                     // 0x0267(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6; // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_20;   // 0x026D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_28;       // 0x026E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_29;       // 0x026F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_30;       // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_6;          // 0x0273(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_31;       // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_32;       // 0x0276(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_33;       // 0x0277(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_7;          // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_34;       // 0x027A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_35;       // 0x027B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE1[0x4];                                     // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue_1;     // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_1;             // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_8;          // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE2[0x3];                                     // 0x03D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_5; // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_8;       // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_20;                // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_36;       // 0x03DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE3[0x1];                                     // 0x03DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_20;             // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_21;   // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_9;          // 0x03E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_10;         // 0x03E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_11;         // 0x03E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE4[0x3];                                     // 0x03E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_21;             // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_22;   // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE5[0x3];                                     // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_6; // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_9;       // 0x03F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_10;      // 0x03F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_21;                // 0x03F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_12;         // 0x03F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE6[0x3];                                     // 0x0409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_10;    // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_23;   // 0x0411(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x0412(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE7[0x5];                                     // 0x0413(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_11;      // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE8[0x7];                                     // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_37;       // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE9[0x7];                                     // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_7;                        // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_7;                        // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_13;         // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_14;         // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_15;         // 0x047A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FEA[0x5];                                     // 0x047B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_16;         // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FEB[0x7];                                     // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetCurveValue_ReturnValue_22;             // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FEC[0x4];                                     // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_6;                        // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_9;          // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_17;         // 0x04B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_22;                // 0x04BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_23;                // 0x04BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FED[0x4];                                     // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams;            // 0x04C0(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_1;          // 0x04D8(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_2;          // 0x04F0(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_3;          // 0x0508(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_4;          // 0x0520(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_5;          // 0x0538(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_6;          // 0x0550(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_7;          // 0x0568(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_8;          // 0x0580(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_9;          // 0x0598(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_10;         // 0x05B0(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_11;         // 0x05C8(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_12;         // 0x05E0(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_13;         // 0x05F8(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_18;         // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_19;         // 0x0611(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_38;       // 0x0612(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_39;       // 0x0613(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x0614(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0615(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_20;         // 0x0616(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_40;       // 0x0617(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_23;             // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_24;   // 0x061C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_21;         // 0x061D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FEE[0x2];                                     // 0x061E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_7; // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_12;      // 0x0624(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_22;         // 0x0625(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_24;                // 0x0626(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FEF[0x1];                                     // 0x0627(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_24;             // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_13;      // 0x062C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FF0[0x3];                                     // 0x062D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_25;             // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_25;                // 0x0634(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_25;   // 0x0635(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_41;       // 0x0636(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FF1[0x1];                                     // 0x0637(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_8; // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_14;      // 0x063C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_26;                // 0x063D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_23;         // 0x063E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_42;       // 0x063F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_43;       // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_44;       // 0x0641(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_45;       // 0x0642(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FF2[0x1];                                     // 0x0643(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_26;             // 0x0644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_46;       // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_26;   // 0x0649(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FF3[0x2];                                     // 0x064A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_11;    // 0x064C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_47;       // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_27;   // 0x0651(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_48;       // 0x0652(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_49;       // 0x0653(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_50;       // 0x0654(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_51;       // 0x0655(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_52;       // 0x0656(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x0657(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_27;             // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_53;       // 0x065C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FF4[0x3];                                     // 0x065D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_7;                        // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_10;         // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_27;                // 0x0669(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_28;                // 0x066A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_54;       // 0x066B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_55;       // 0x066C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x066D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_56;       // 0x066E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_57;       // 0x066F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_58;       // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_24;         // 0x0671(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0672(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanDynamicTransition_ReturnValue;         // 0x0673(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanTurnInPlace_ReturnValue;               // 0x0674(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_25;         // 0x0675(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_59;       // 0x0676(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanRotateInPlace_ReturnValue;             // 0x0677(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FF5[0x3];                                     // 0x0679(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x067C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_9; // 0x0680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_15;      // 0x0684(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldMoveCheck_Return_Value;             // 0x0685(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_60;       // 0x0686(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_15;                 // 0x0687(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_1;            // 0x0688(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FF6[0x7];                                     // 0x0691(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDynamicMontageParams                  K2Node_CustomEvent_Parameters_1;                   // 0x0698(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue; // 0x06B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_4;               // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FF7[0x3];                                     // 0x06C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_28;             // 0x06C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_28;   // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_29;                // 0x06C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGroundedEntryState                           K2Node_Event_GroundedEntryState;                   // 0x06CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_5;               // 0x06CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue;         // 0x06CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue_1;       // 0x06CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue_2;       // 0x06CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue_3;       // 0x06CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue_4;       // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue_5;       // 0x06D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_4;                     // 0x06D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FF8[0x5];                                     // 0x06D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_ReTriggerDelay;                 // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_CustomEvent_Parameters;                     // 0x06E0(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_11;         // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FF9[0x7];                                     // 0x06F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue_1; // 0x0700(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_OverlayOverrideState;                 // 0x0708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue_6;       // 0x070C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue_7;       // 0x070D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FFA[0x2];                                     // 0x070E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_2;            // 0x0728(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character;                // 0x0730(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FFB[0x7];                                     // 0x0741(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_Comp;                                 // 0x0748(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_3;            // 0x0750(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_5;                     // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FFC[0x7];                                     // 0x0759(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0760(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0778(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_4;            // 0x0780(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_10; // 0x0788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FFD[0x4];                                     // 0x078C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0790(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_16;      // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FFE[0x7];                                     // 0x07A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue_1;       // 0x07B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_30;                // 0x07B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x07B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FFF[0x6];                                     // 0x07BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_5;            // 0x07C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x07C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_6;            // 0x07E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue_2;       // 0x07E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x07F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue_3;       // 0x0808(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_7;            // 0x0810(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character_1;               // 0x0818(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3000[0x7];                                     // 0x0821(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_1;       // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_1; // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_2;       // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_2; // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_3; // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_4; // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_5; // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_6; // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_1;                     // 0x0898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_7; // 0x08A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_8; // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1;   // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x08B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_9; // 0x08C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_2;   // 0x08C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_10; // 0x08D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_2;    // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_3;       // 0x08E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_11; // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_12; // 0x08F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_3;   // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_4;   // 0x0900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1; // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_4;       // 0x0910(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_13; // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_14; // 0x0920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_3;    // 0x0928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast;         // 0x0930(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3001[0x4];                                     // 0x0934(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_15; // 0x0938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_4;    // 0x0940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_5;   // 0x0948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_16; // 0x0950(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_17; // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_5;    // 0x0960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast_1;       // 0x0968(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3002[0x4];                                     // 0x096C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_18; // 0x0970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_19; // 0x0978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_5;       // 0x0980(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_6;    // 0x0988(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_2;                     // 0x0990(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_3;                     // 0x0998(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_20; // 0x09A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_7;    // 0x09A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_21; // 0x09B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_22; // 0x09B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_8;    // 0x09C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_23; // 0x09C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_87_ImplicitCast; // 0x09D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_83_ImplicitCast; // 0x09D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_84_ImplicitCast; // 0x09D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_89_ImplicitCast; // 0x09DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_90_ImplicitCast; // 0x09E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_88_ImplicitCast; // 0x09E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x09E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3003[0x4];                                     // 0x09EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_A_ImplicitCast_4;                     // 0x09F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_24; // 0x09F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_9;    // 0x0A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_10;   // 0x0A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_25; // 0x0A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_11;   // 0x0A18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_26; // 0x0A20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_27; // 0x0A28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_5;                     // 0x0A30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_DeltaTimeX_ImplicitCast;        // 0x0A38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_12;   // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_28; // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0A50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3004[0x4];                                     // 0x0A54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_13;   // 0x0A58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP");
static_assert(sizeof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP) == 0x000A60, "Wrong size on Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, EntryPoint) == 0x000000, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_DynamicCast_AsBP_Character) == 0x000010, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001A, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00001B, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00001C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00001D, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x00001E, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue) == 0x00001F, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_1) == 0x000020, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue) == 0x000024, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_2) == 0x000028, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000029, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x00002A, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x00002B, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x00002C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_1) == 0x000030, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_2) == 0x000034, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000039, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x00003A, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x00003B, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_3) == 0x00003C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x000041, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_12) == 0x000043, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_13) == 0x000044, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_4) == 0x000048, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_14) == 0x00004C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x00004D, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_5) == 0x000050, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_6) == 0x000054, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x000058, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_2) == 0x000059, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_1) == 0x00005A, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue) == 0x00005C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_3) == 0x000060, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_7) == 0x000064, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_8) == 0x000068, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Abs_ReturnValue) == 0x000070, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_4) == 0x000078, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_3) == 0x000079, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_9) == 0x00007C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_2) == 0x000080, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000081, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_3) == 0x000082, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_4) == 0x000083, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_10) == 0x000084, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_1) == 0x000088, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_5) == 0x00008C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x00008D, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_2) == 0x000090, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_6) == 0x000094, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BreakVector2D_X) == 0x000098, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BreakVector2D_Y) == 0x0000A0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_11) == 0x0000A8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_InRange_FloatFloat_ReturnValue) == 0x0000AC, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Abs_ReturnValue_1) == 0x0000B0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_5) == 0x0000B8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_4) == 0x0000B9, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_6) == 0x0000BA, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x0000BC, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_7) == 0x0000C0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_7) == 0x0000C1, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceMachineWeight_ReturnValue) == 0x0000C4, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceMachineWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceMachineWeight_ReturnValue_1) == 0x0000C8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceMachineWeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_8) == 0x0000CC, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x0000CD, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue) == 0x0000D0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1) == 0x0000D4, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0000D8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_9) == 0x0000D9, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_8) == 0x0000DA, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_3) == 0x0000DC, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2) == 0x0000E0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_ReturnValue_2) == 0x0000E4, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_10) == 0x0000E5, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BreakVector2D_X_1) == 0x0000E8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BreakVector2D_Y_1) == 0x0000F0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x0000F8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_1) == 0x0000FC, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_9) == 0x000100, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000101, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_10) == 0x000102, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_12) == 0x000104, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_5) == 0x000108, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_15) == 0x000109, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BreakVector2D_X_2) == 0x000110, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BreakVector2D_Y_2) == 0x000118, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_11) == 0x000120, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_InRange_FloatFloat_ReturnValue_2) == 0x000121, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_InRange_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3) == 0x000124, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_11) == 0x000128, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_16) == 0x000129, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_17) == 0x00012A, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_3) == 0x00012B, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceMachineWeight_ReturnValue_2) == 0x00012C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceMachineWeight_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_12) == 0x000130, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_18) == 0x000131, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_12) == 0x000132, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_19) == 0x000133, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_4) == 0x000134, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceMachineWeight_ReturnValue_3) == 0x000138, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceMachineWeight_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_4) == 0x00013C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_ReturnValue_3) == 0x000140, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_ReturnValue_4) == 0x000141, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_13) == 0x000142, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BreakVector2D_X_3) == 0x000148, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BreakVector2D_Y_3) == 0x000150, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_13) == 0x000158, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_InRange_FloatFloat_ReturnValue_3) == 0x00015C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_InRange_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x00015D, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_14) == 0x00015E, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_14) == 0x000160, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_6) == 0x000164, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_20) == 0x000165, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_21) == 0x000166, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BreakVector2D_X_4) == 0x000168, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BreakVector2D_Y_4) == 0x000170, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_InRange_FloatFloat_ReturnValue_4) == 0x000178, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_InRange_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_22) == 0x000179, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_23) == 0x00017A, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_IsValid_ReturnValue) == 0x00017B, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000180, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4) == 0x000198, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_13) == 0x00019C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_ReturnValue_5) == 0x00019D, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_IsValid_ReturnValue_1) == 0x00019E, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_24) == 0x00019F, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5) == 0x0001A0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_14) == 0x0001A4, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_2) == 0x0001A8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x0001AC, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Abs_ReturnValue_2) == 0x0001B0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_5) == 0x0001B8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_15) == 0x0001BC, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_3) == 0x0001C0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x0001C4, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_15) == 0x0001C5, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_6) == 0x0001C8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_ReturnValue_6) == 0x0001CC, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_7) == 0x0001D0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Not_PreBool_ReturnValue) == 0x0001D4, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_16) == 0x0001D5, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_16) == 0x0001D6, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BreakVector2D_X_5) == 0x0001D8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BreakVector2D_Y_5) == 0x0001E0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_InRange_FloatFloat_ReturnValue_5) == 0x0001E8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_InRange_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_17) == 0x0001E9, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_15) == 0x0001EC, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_17) == 0x0001F0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_4) == 0x0001F4, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BreakVector2D_X_6) == 0x0001F8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BreakVector2D_Y_6) == 0x000200, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_5) == 0x000208, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_InRange_FloatFloat_ReturnValue_6) == 0x000209, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_InRange_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_18) == 0x00020A, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Abs_ReturnValue_3) == 0x000210, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000218, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_25) == 0x000219, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_8) == 0x00021C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_18) == 0x000220, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, Temp_bool_IsClosed_Variable) == 0x000221, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000222, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_9) == 0x000224, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Not_PreBool_ReturnValue_1) == 0x000228, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_19) == 0x000229, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_19) == 0x00022A, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_26) == 0x00022B, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, Temp_bool_Has_Been_Initd_Variable) == 0x00022C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x00022D, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x00022E, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_27) == 0x00022F, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_16) == 0x000230, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_7) == 0x000234, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_17) == 0x000238, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_18) == 0x00023C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_6) == 0x000240, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Abs_ReturnValue_4) == 0x000248, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Abs_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x000250, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_4) == 0x000251, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_19) == 0x000254, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Abs_ReturnValue_5) == 0x000258, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Abs_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_8) == 0x000260, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, Temp_bool_Has_Been_Initd_Variable_1) == 0x000261, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_5) == 0x000262, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_5) == 0x000263, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_7) == 0x000264, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_6) == 0x000265, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_7) == 0x000266, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6) == 0x000268, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_8) == 0x00026C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_20) == 0x00026D, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_28) == 0x00026E, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_29) == 0x00026F, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000270, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_30) == 0x000271, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, Temp_bool_IsClosed_Variable_1) == 0x000272, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_6) == 0x000273, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_31) == 0x000274, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_9) == 0x000275, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_32) == 0x000276, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_33) == 0x000277, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Not_PreBool_ReturnValue_2) == 0x000278, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_7) == 0x000279, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_34) == 0x00027A, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_35) == 0x00027B, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetForwardVector_ReturnValue) == 0x000280, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000298, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0002B0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetRightVector_ReturnValue) == 0x0002C8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0002E0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Add_VectorVector_ReturnValue) == 0x0002F8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NormalizedDeltaRotator_ReturnValue_1) == 0x000310, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NormalizedDeltaRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000328, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetForwardVector_ReturnValue_1) == 0x000340, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetRightVector_ReturnValue_1) == 0x000358, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000370, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000388, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0003A0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0003B8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_8) == 0x0003D0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_5) == 0x0003D4, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_8) == 0x0003D8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_20) == 0x0003D9, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_36) == 0x0003DA, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_20) == 0x0003DC, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_21) == 0x0003E0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_9) == 0x0003E1, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_10) == 0x0003E2, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_11) == 0x0003E3, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_10) == 0x0003E4, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_21) == 0x0003E8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_22) == 0x0003EC, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_6) == 0x0003F0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_9) == 0x0003F4, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_10) == 0x0003F5, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_21) == 0x0003F6, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_12) == 0x0003F7, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0003F8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000400, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, Temp_bool_IsClosed_Variable_2) == 0x000408, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_10) == 0x00040C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_11) == 0x000410, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_23) == 0x000411, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_12) == 0x000412, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_SelectFloat_ReturnValue) == 0x000418, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BreakVector_X) == 0x000420, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BreakVector_Y) == 0x000428, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BreakVector_Z) == 0x000430, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_11) == 0x000438, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000440, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000448, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_SelectFloat_ReturnValue_1) == 0x000450, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_37) == 0x000458, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BreakVector2D_X_7) == 0x000460, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BreakVector2D_X_7' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BreakVector2D_Y_7) == 0x000468, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BreakVector2D_Y_7' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_SelectFloat_ReturnValue_2) == 0x000470, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_13) == 0x000478, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_14) == 0x000479, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_15) == 0x00047A, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_MapRangeClamped_ReturnValue) == 0x000480, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_16) == 0x000488, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_MakeRotator_ReturnValue) == 0x000490, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_22) == 0x0004A8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Abs_ReturnValue_6) == 0x0004B0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Abs_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_9) == 0x0004B8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_17) == 0x0004B9, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_22) == 0x0004BA, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_23) == 0x0004BB, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams) == 0x0004C0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_1) == 0x0004D8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_2) == 0x0004F0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_3) == 0x000508, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_4) == 0x000520, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_5) == 0x000538, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_6) == 0x000550, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_6' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_7) == 0x000568, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_7' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_8) == 0x000580, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_8' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_9) == 0x000598, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_9' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_10) == 0x0005B0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_10' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_11) == 0x0005C8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_11' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_12) == 0x0005E0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_12' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_13) == 0x0005F8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_13' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_18) == 0x000610, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_19) == 0x000611, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_38) == 0x000612, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_39) == 0x000613, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_13) == 0x000614, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, Temp_bool_IsClosed_Variable_3) == 0x000615, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_20) == 0x000616, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_40) == 0x000617, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_23) == 0x000618, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_24) == 0x00061C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_21) == 0x00061D, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_7) == 0x000620, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_12) == 0x000624, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_22) == 0x000625, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_24) == 0x000626, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_24) == 0x000628, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_13) == 0x00062C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_25) == 0x000630, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_25) == 0x000634, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_25) == 0x000635, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_41) == 0x000636, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_8) == 0x000638, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_14) == 0x00063C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_26) == 0x00063D, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_23) == 0x00063E, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_42) == 0x00063F, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_43) == 0x000640, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_44) == 0x000641, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_45) == 0x000642, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_26) == 0x000644, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_46) == 0x000648, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_26) == 0x000649, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_11) == 0x00064C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_47) == 0x000650, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_27) == 0x000651, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_48) == 0x000652, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_49) == 0x000653, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_50) == 0x000654, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_51) == 0x000655, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_52) == 0x000656, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_14) == 0x000657, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_27) == 0x000658, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_53) == 0x00065C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Abs_ReturnValue_7) == 0x000660, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Abs_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_10) == 0x000668, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_27) == 0x000669, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_28) == 0x00066A, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_54) == 0x00066B, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_55) == 0x00066C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, Temp_bool_Has_Been_Initd_Variable_2) == 0x00066D, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_56) == 0x00066E, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_57) == 0x00066F, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_58) == 0x000670, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_58' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_24) == 0x000671, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_SwitchEnum_CmpSuccess) == 0x000672, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_CanDynamicTransition_ReturnValue) == 0x000673, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_CanDynamicTransition_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_CanTurnInPlace_ReturnValue) == 0x000674, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_CanTurnInPlace_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_25) == 0x000675, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_59) == 0x000676, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_59' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_CanRotateInPlace_ReturnValue) == 0x000677, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_CanRotateInPlace_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, Temp_bool_Has_Been_Initd_Variable_3) == 0x000678, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_Event_DeltaTimeX) == 0x00067C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_9) == 0x000680, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_15) == 0x000684, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_ShouldMoveCheck_Return_Value) == 0x000685, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_ShouldMoveCheck_Return_Value' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_60) == 0x000686, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_60' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_15) == 0x000687, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_TryGetPawnOwner_ReturnValue_1) == 0x000688, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_TryGetPawnOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_IsValid_ReturnValue_2) == 0x000690, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_CustomEvent_Parameters_1) == 0x000698, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_CustomEvent_Parameters_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue) == 0x0006B0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0006B8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, Temp_bool_Has_Been_Initd_Variable_4) == 0x0006C0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::Temp_bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_28) == 0x0006C4, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_28) == 0x0006C8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_29) == 0x0006C9, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_Event_GroundedEntryState) == 0x0006CA, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_Event_GroundedEntryState' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, Temp_bool_Has_Been_Initd_Variable_5) == 0x0006CB, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::Temp_bool_Has_Been_Initd_Variable_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_CanOverlayTransition_ReturnValue) == 0x0006CC, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_CanOverlayTransition_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_CanOverlayTransition_ReturnValue_1) == 0x0006CD, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_CanOverlayTransition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_CanOverlayTransition_ReturnValue_2) == 0x0006CE, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_CanOverlayTransition_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_CanOverlayTransition_ReturnValue_3) == 0x0006CF, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_CanOverlayTransition_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_CanOverlayTransition_ReturnValue_4) == 0x0006D0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_CanOverlayTransition_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_CanOverlayTransition_ReturnValue_5) == 0x0006D1, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_CanOverlayTransition_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, Temp_bool_IsClosed_Variable_4) == 0x0006D2, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::Temp_bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_CustomEvent_ReTriggerDelay) == 0x0006D8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_CustomEvent_ReTriggerDelay' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_CustomEvent_Parameters) == 0x0006E0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_CustomEvent_Parameters' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_11) == 0x0006F8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue_1) == 0x000700, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_Event_OverlayOverrideState) == 0x000708, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_Event_OverlayOverrideState' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_CanOverlayTransition_ReturnValue_6) == 0x00070C, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_CanOverlayTransition_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_CanOverlayTransition_ReturnValue_7) == 0x00070D, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_CanOverlayTransition_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_RandomFloatInRange_ReturnValue) == 0x000710, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000718, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000720, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_TryGetPawnOwner_ReturnValue_2) == 0x000728, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_TryGetPawnOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_DynamicCast_AsBPI_Character) == 0x000730, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_DynamicCast_AsBPI_Character' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_DynamicCast_bSuccess_1) == 0x000740, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_Event_Comp) == 0x000748, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_Event_Comp' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_TryGetPawnOwner_ReturnValue_3) == 0x000750, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_TryGetPawnOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, Temp_bool_IsClosed_Variable_5) == 0x000758, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::Temp_bool_IsClosed_Variable_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000760, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000778, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_TryGetPawnOwner_ReturnValue_4) == 0x000780, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_TryGetPawnOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_10) == 0x000788, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000790, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_16) == 0x0007A8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_SpawnSoundAtLocation_ReturnValue_1) == 0x0007B0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_SpawnSoundAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_30) == 0x0007B8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x0007B9, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_TryGetPawnOwner_ReturnValue_5) == 0x0007C0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_TryGetPawnOwner_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0007C8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_TryGetPawnOwner_ReturnValue_6) == 0x0007E0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_TryGetPawnOwner_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_SpawnSoundAtLocation_ReturnValue_2) == 0x0007E8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_SpawnSoundAtLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0007F0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_SpawnSoundAtLocation_ReturnValue_3) == 0x000808, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_SpawnSoundAtLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_TryGetPawnOwner_ReturnValue_7) == 0x000810, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_TryGetPawnOwner_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_DynamicCast_AsBP_Character_1) == 0x000818, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_DynamicCast_AsBP_Character_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_DynamicCast_bSuccess_2) == 0x000820, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000828, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Less_DoubleDouble_A_ImplicitCast_1) == 0x000830, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Less_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000838, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x000840, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_1) == 0x000848, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Less_DoubleDouble_A_ImplicitCast_2) == 0x000850, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Less_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_2) == 0x000858, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_3) == 0x000860, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Abs_A_ImplicitCast) == 0x000868, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_4) == 0x000870, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000878, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_5) == 0x000880, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x000888, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_6) == 0x000890, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Abs_A_ImplicitCast_1) == 0x000898, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Abs_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_7) == 0x0008A0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_8) == 0x0008A8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1) == 0x0008B0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x0008B8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_9) == 0x0008C0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_2) == 0x0008C8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_10) == 0x0008D0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_2) == 0x0008D8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Less_DoubleDouble_A_ImplicitCast_3) == 0x0008E0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Less_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_11) == 0x0008E8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_12) == 0x0008F0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_3) == 0x0008F8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_4) == 0x000900, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1) == 0x000908, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Less_DoubleDouble_A_ImplicitCast_4) == 0x000910, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Less_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_13) == 0x000918, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_14) == 0x000920, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_3) == 0x000928, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_StructMemberSet_Alpha_ImplicitCast) == 0x000930, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_StructMemberSet_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_15) == 0x000938, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_4) == 0x000940, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_5) == 0x000948, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_16) == 0x000950, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_16' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_17) == 0x000958, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_17' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_5) == 0x000960, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_StructMemberSet_Alpha_ImplicitCast_1) == 0x000968, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_StructMemberSet_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_18) == 0x000970, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_18' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_19) == 0x000978, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_19' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Less_DoubleDouble_A_ImplicitCast_5) == 0x000980, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Less_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_6) == 0x000988, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Abs_A_ImplicitCast_2) == 0x000990, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Abs_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Abs_A_ImplicitCast_3) == 0x000998, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Abs_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_20) == 0x0009A0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_20' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_7) == 0x0009A8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_21) == 0x0009B0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_21' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_22) == 0x0009B8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_22' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_8) == 0x0009C0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_23) == 0x0009C8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_23' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_StructMemberSet___FloatProperty_87_ImplicitCast) == 0x0009D0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_StructMemberSet___FloatProperty_87_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_StructMemberSet___FloatProperty_83_ImplicitCast) == 0x0009D4, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_StructMemberSet___FloatProperty_83_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_StructMemberSet___FloatProperty_84_ImplicitCast) == 0x0009D8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_StructMemberSet___FloatProperty_84_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_StructMemberSet___FloatProperty_89_ImplicitCast) == 0x0009DC, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_StructMemberSet___FloatProperty_89_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_StructMemberSet___FloatProperty_90_ImplicitCast) == 0x0009E0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_StructMemberSet___FloatProperty_90_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_StructMemberSet___FloatProperty_88_ImplicitCast) == 0x0009E4, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_StructMemberSet___FloatProperty_88_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x0009E8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Abs_A_ImplicitCast_4) == 0x0009F0, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Abs_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_24) == 0x0009F8, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_24' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_9) == 0x000A00, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_10) == 0x000A08, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_25) == 0x000A10, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_25' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_11) == 0x000A18, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_26) == 0x000A20, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_26' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_27) == 0x000A28, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_27' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Abs_A_ImplicitCast_5) == 0x000A30, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Abs_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, K2Node_VariableSet_DeltaTimeX_ImplicitCast) == 0x000A38, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::K2Node_VariableSet_DeltaTimeX_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_12) == 0x000A40, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_28) == 0x000A48, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_28' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Delay_Duration_ImplicitCast) == 0x000A50, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_13) == 0x000A58, "Member 'Christian_ALS_AnimBP_C_ExecuteUbergraph_Christian_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_13' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.FixArmsLayer
// 0x0020 (0x0020 - 0x0000)
struct Christian_ALS_AnimBP_C_FixArmsLayer final
{
public:
	struct FPoseLink                              InPose_0;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_FixArmsLayer;                                // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Christian_ALS_AnimBP_C_FixArmsLayer) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_FixArmsLayer");
static_assert(sizeof(Christian_ALS_AnimBP_C_FixArmsLayer) == 0x000020, "Wrong size on Christian_ALS_AnimBP_C_FixArmsLayer");
static_assert(offsetof(Christian_ALS_AnimBP_C_FixArmsLayer, InPose_0) == 0x000000, "Member 'Christian_ALS_AnimBP_C_FixArmsLayer::InPose_0' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_FixArmsLayer, Param_FixArmsLayer) == 0x000010, "Member 'Christian_ALS_AnimBP_C_FixArmsLayer::Param_FixArmsLayer' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.Foot IK
// 0x0020 (0x0020 - 0x0000)
struct Christian_ALS_AnimBP_C_Foot_IK final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_Foot_IK;                                     // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Christian_ALS_AnimBP_C_Foot_IK) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_Foot_IK");
static_assert(sizeof(Christian_ALS_AnimBP_C_Foot_IK) == 0x000020, "Wrong size on Christian_ALS_AnimBP_C_Foot_IK");
static_assert(offsetof(Christian_ALS_AnimBP_C_Foot_IK, InPose) == 0x000000, "Member 'Christian_ALS_AnimBP_C_Foot_IK::InPose' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_Foot_IK, Param_Foot_IK) == 0x000010, "Member 'Christian_ALS_AnimBP_C_Foot_IK::Param_Foot_IK' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.GetDebugTraceType
// 0x0038 (0x0038 - 0x0000)
struct Christian_ALS_AnimBP_C_GetDebugTraceType final
{
public:
	EDrawDebugTrace                               ShowTraceType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               DebugType;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3005[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IALS_Controller_BPI_C> K2Node_DynamicCast_AsALS_Controller_BPI;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3006[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_BPI_Get_DebugInfo_DebugFocusCharacter;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_DebugView;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowHUD;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowTraces;             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowDebugShapes;        // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowLayerColors;        // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_Slomo;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowCharacterInfo;      // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_GetDebugTraceType) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_GetDebugTraceType");
static_assert(sizeof(Christian_ALS_AnimBP_C_GetDebugTraceType) == 0x000038, "Wrong size on Christian_ALS_AnimBP_C_GetDebugTraceType");
static_assert(offsetof(Christian_ALS_AnimBP_C_GetDebugTraceType, ShowTraceType) == 0x000000, "Member 'Christian_ALS_AnimBP_C_GetDebugTraceType::ShowTraceType' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_GetDebugTraceType, DebugType) == 0x000001, "Member 'Christian_ALS_AnimBP_C_GetDebugTraceType::DebugType' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_GetDebugTraceType, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'Christian_ALS_AnimBP_C_GetDebugTraceType::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_GetDebugTraceType, K2Node_DynamicCast_AsALS_Controller_BPI) == 0x000010, "Member 'Christian_ALS_AnimBP_C_GetDebugTraceType::K2Node_DynamicCast_AsALS_Controller_BPI' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_GetDebugTraceType, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Christian_ALS_AnimBP_C_GetDebugTraceType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_DebugFocusCharacter) == 0x000028, "Member 'Christian_ALS_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_DebugFocusCharacter' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_DebugView) == 0x000030, "Member 'Christian_ALS_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_DebugView' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_ShowHUD) == 0x000031, "Member 'Christian_ALS_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_ShowHUD' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_ShowTraces) == 0x000032, "Member 'Christian_ALS_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_ShowTraces' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_ShowDebugShapes) == 0x000033, "Member 'Christian_ALS_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_ShowDebugShapes' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_ShowLayerColors) == 0x000034, "Member 'Christian_ALS_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_ShowLayerColors' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_Slomo) == 0x000035, "Member 'Christian_ALS_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_Slomo' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_ShowCharacterInfo) == 0x000036, "Member 'Christian_ALS_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_ShowCharacterInfo' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.InterpLeanAmount
// 0x0068 (0x0068 - 0x0000)
struct Christian_ALS_AnimBP_C_InterpLeanAmount final
{
public:
	struct FLeanAmount                            Current;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeanAmount                            Target;                                            // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InterpSpeed;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaTime;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeanAmount                            ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeanAmount                            K2Node_MakeStruct_LeanAmount;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast_1;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast_1;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_InterpLeanAmount) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_InterpLeanAmount");
static_assert(sizeof(Christian_ALS_AnimBP_C_InterpLeanAmount) == 0x000068, "Wrong size on Christian_ALS_AnimBP_C_InterpLeanAmount");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpLeanAmount, Current) == 0x000000, "Member 'Christian_ALS_AnimBP_C_InterpLeanAmount::Current' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpLeanAmount, Target) == 0x000008, "Member 'Christian_ALS_AnimBP_C_InterpLeanAmount::Target' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpLeanAmount, InterpSpeed) == 0x000010, "Member 'Christian_ALS_AnimBP_C_InterpLeanAmount::InterpSpeed' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpLeanAmount, DeltaTime) == 0x000018, "Member 'Christian_ALS_AnimBP_C_InterpLeanAmount::DeltaTime' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpLeanAmount, ReturnValue) == 0x000020, "Member 'Christian_ALS_AnimBP_C_InterpLeanAmount::ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpLeanAmount, CallFunc_FInterpTo_ReturnValue) == 0x000028, "Member 'Christian_ALS_AnimBP_C_InterpLeanAmount::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpLeanAmount, CallFunc_FInterpTo_ReturnValue_1) == 0x000030, "Member 'Christian_ALS_AnimBP_C_InterpLeanAmount::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpLeanAmount, K2Node_MakeStruct_LeanAmount) == 0x000038, "Member 'Christian_ALS_AnimBP_C_InterpLeanAmount::K2Node_MakeStruct_LeanAmount' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpLeanAmount, CallFunc_FInterpTo_Target_ImplicitCast) == 0x000040, "Member 'Christian_ALS_AnimBP_C_InterpLeanAmount::CallFunc_FInterpTo_Target_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpLeanAmount, CallFunc_FInterpTo_Target_ImplicitCast_1) == 0x000048, "Member 'Christian_ALS_AnimBP_C_InterpLeanAmount::CallFunc_FInterpTo_Target_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpLeanAmount, CallFunc_FInterpTo_Current_ImplicitCast) == 0x000050, "Member 'Christian_ALS_AnimBP_C_InterpLeanAmount::CallFunc_FInterpTo_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpLeanAmount, CallFunc_FInterpTo_Current_ImplicitCast_1) == 0x000058, "Member 'Christian_ALS_AnimBP_C_InterpLeanAmount::CallFunc_FInterpTo_Current_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpLeanAmount, K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast) == 0x000060, "Member 'Christian_ALS_AnimBP_C_InterpLeanAmount::K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpLeanAmount, K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast) == 0x000064, "Member 'Christian_ALS_AnimBP_C_InterpLeanAmount::K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.InterpVelocityBlend
// 0x00C0 (0x00C0 - 0x0000)
struct Christian_ALS_AnimBP_C_InterpVelocityBlend final
{
public:
	struct FVelocityBlend                         Current;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVelocityBlend                         Target;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InterpSpeed;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaTime;                                         // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVelocityBlend                         ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_2;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_3;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVelocityBlend                         K2Node_MakeStruct_VelocityBlend;                   // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast_1;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast_2;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast_3;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast_1;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast_2;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast_3;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_F_3_2154ABAD4BD15DAC904154B63D704219_ImplicitCast; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_9_79E6E09B4A52B442B9FE6DB7192CFBEE_ImplicitCast; // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_L_8_DFEBB8584D28F158D2562CA60EB07B6D_ImplicitCast; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_5_0A0855774CB13BB3E4B0A6847E7154F6_ImplicitCast; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_InterpVelocityBlend) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_InterpVelocityBlend");
static_assert(sizeof(Christian_ALS_AnimBP_C_InterpVelocityBlend) == 0x0000C0, "Wrong size on Christian_ALS_AnimBP_C_InterpVelocityBlend");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpVelocityBlend, Current) == 0x000000, "Member 'Christian_ALS_AnimBP_C_InterpVelocityBlend::Current' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpVelocityBlend, Target) == 0x000010, "Member 'Christian_ALS_AnimBP_C_InterpVelocityBlend::Target' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpVelocityBlend, InterpSpeed) == 0x000020, "Member 'Christian_ALS_AnimBP_C_InterpVelocityBlend::InterpSpeed' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpVelocityBlend, DeltaTime) == 0x000028, "Member 'Christian_ALS_AnimBP_C_InterpVelocityBlend::DeltaTime' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpVelocityBlend, ReturnValue) == 0x000030, "Member 'Christian_ALS_AnimBP_C_InterpVelocityBlend::ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_ReturnValue) == 0x000040, "Member 'Christian_ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_ReturnValue_1) == 0x000048, "Member 'Christian_ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_ReturnValue_2) == 0x000050, "Member 'Christian_ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_ReturnValue_3) == 0x000058, "Member 'Christian_ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpVelocityBlend, K2Node_MakeStruct_VelocityBlend) == 0x000060, "Member 'Christian_ALS_AnimBP_C_InterpVelocityBlend::K2Node_MakeStruct_VelocityBlend' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Target_ImplicitCast) == 0x000070, "Member 'Christian_ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Target_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Target_ImplicitCast_1) == 0x000078, "Member 'Christian_ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Target_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Target_ImplicitCast_2) == 0x000080, "Member 'Christian_ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Target_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Target_ImplicitCast_3) == 0x000088, "Member 'Christian_ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Target_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Current_ImplicitCast) == 0x000090, "Member 'Christian_ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Current_ImplicitCast_1) == 0x000098, "Member 'Christian_ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Current_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Current_ImplicitCast_2) == 0x0000A0, "Member 'Christian_ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Current_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Current_ImplicitCast_3) == 0x0000A8, "Member 'Christian_ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Current_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpVelocityBlend, K2Node_MakeStruct_F_3_2154ABAD4BD15DAC904154B63D704219_ImplicitCast) == 0x0000B0, "Member 'Christian_ALS_AnimBP_C_InterpVelocityBlend::K2Node_MakeStruct_F_3_2154ABAD4BD15DAC904154B63D704219_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpVelocityBlend, K2Node_MakeStruct_R_9_79E6E09B4A52B442B9FE6DB7192CFBEE_ImplicitCast) == 0x0000B4, "Member 'Christian_ALS_AnimBP_C_InterpVelocityBlend::K2Node_MakeStruct_R_9_79E6E09B4A52B442B9FE6DB7192CFBEE_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpVelocityBlend, K2Node_MakeStruct_L_8_DFEBB8584D28F158D2562CA60EB07B6D_ImplicitCast) == 0x0000B8, "Member 'Christian_ALS_AnimBP_C_InterpVelocityBlend::K2Node_MakeStruct_L_8_DFEBB8584D28F158D2562CA60EB07B6D_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_InterpVelocityBlend, K2Node_MakeStruct_B_5_0A0855774CB13BB3E4B0A6847E7154F6_ImplicitCast) == 0x0000BC, "Member 'Christian_ALS_AnimBP_C_InterpVelocityBlend::K2Node_MakeStruct_B_5_0A0855774CB13BB3E4B0A6847E7154F6_ImplicitCast' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.LayerBlending
// 0x0040 (0x0040 - 0x0000)
struct Christian_ALS_AnimBP_C_LayerBlending final
{
public:
	struct FPoseLink                              Base_Layer_Input;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Overlay_Layer_Input;                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Base_Poses_Input;                                  // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_LayerBlending;                               // 0x0030(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Christian_ALS_AnimBP_C_LayerBlending) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_LayerBlending");
static_assert(sizeof(Christian_ALS_AnimBP_C_LayerBlending) == 0x000040, "Wrong size on Christian_ALS_AnimBP_C_LayerBlending");
static_assert(offsetof(Christian_ALS_AnimBP_C_LayerBlending, Base_Layer_Input) == 0x000000, "Member 'Christian_ALS_AnimBP_C_LayerBlending::Base_Layer_Input' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_LayerBlending, Overlay_Layer_Input) == 0x000010, "Member 'Christian_ALS_AnimBP_C_LayerBlending::Overlay_Layer_Input' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_LayerBlending, Base_Poses_Input) == 0x000020, "Member 'Christian_ALS_AnimBP_C_LayerBlending::Base_Poses_Input' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_LayerBlending, Param_LayerBlending) == 0x000030, "Member 'Christian_ALS_AnimBP_C_LayerBlending::Param_LayerBlending' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.OverlayLayer
// 0x0010 (0x0010 - 0x0000)
struct Christian_ALS_AnimBP_C_OverlayLayer final
{
public:
	struct FPoseLink                              Param_OverlayLayer;                                // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Christian_ALS_AnimBP_C_OverlayLayer) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_OverlayLayer");
static_assert(sizeof(Christian_ALS_AnimBP_C_OverlayLayer) == 0x000010, "Wrong size on Christian_ALS_AnimBP_C_OverlayLayer");
static_assert(offsetof(Christian_ALS_AnimBP_C_OverlayLayer, Param_OverlayLayer) == 0x000000, "Member 'Christian_ALS_AnimBP_C_OverlayLayer::Param_OverlayLayer' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.PlayDynamicTransition
// 0x0020 (0x0020 - 0x0000)
struct Christian_ALS_AnimBP_C_PlayDynamicTransition final
{
public:
	double                                        ReTriggerDelay;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  Parameters;                                        // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_PlayDynamicTransition) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_PlayDynamicTransition");
static_assert(sizeof(Christian_ALS_AnimBP_C_PlayDynamicTransition) == 0x000020, "Wrong size on Christian_ALS_AnimBP_C_PlayDynamicTransition");
static_assert(offsetof(Christian_ALS_AnimBP_C_PlayDynamicTransition, ReTriggerDelay) == 0x000000, "Member 'Christian_ALS_AnimBP_C_PlayDynamicTransition::ReTriggerDelay' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_PlayDynamicTransition, Parameters) == 0x000008, "Member 'Christian_ALS_AnimBP_C_PlayDynamicTransition::Parameters' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.PlayTransition
// 0x0018 (0x0018 - 0x0000)
struct Christian_ALS_AnimBP_C_PlayTransition final
{
public:
	struct FDynamicMontageParams                  Parameters;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_PlayTransition) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_PlayTransition");
static_assert(sizeof(Christian_ALS_AnimBP_C_PlayTransition) == 0x000018, "Wrong size on Christian_ALS_AnimBP_C_PlayTransition");
static_assert(offsetof(Christian_ALS_AnimBP_C_PlayTransition, Parameters) == 0x000000, "Member 'Christian_ALS_AnimBP_C_PlayTransition::Parameters' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.ResetIKOffsets
// 0x0070 (0x0070 - 0x0000)
struct Christian_ALS_AnimBP_C_ResetIKOffsets final
{
public:
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue_1;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue_1;                  // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast;         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast_1;       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast_1;       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_ResetIKOffsets) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_ResetIKOffsets");
static_assert(sizeof(Christian_ALS_AnimBP_C_ResetIKOffsets) == 0x000070, "Wrong size on Christian_ALS_AnimBP_C_ResetIKOffsets");
static_assert(offsetof(Christian_ALS_AnimBP_C_ResetIKOffsets, CallFunc_RInterpTo_ReturnValue) == 0x000000, "Member 'Christian_ALS_AnimBP_C_ResetIKOffsets::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ResetIKOffsets, CallFunc_VInterpTo_ReturnValue) == 0x000018, "Member 'Christian_ALS_AnimBP_C_ResetIKOffsets::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ResetIKOffsets, CallFunc_VInterpTo_ReturnValue_1) == 0x000030, "Member 'Christian_ALS_AnimBP_C_ResetIKOffsets::CallFunc_VInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ResetIKOffsets, CallFunc_RInterpTo_ReturnValue_1) == 0x000048, "Member 'Christian_ALS_AnimBP_C_ResetIKOffsets::CallFunc_RInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ResetIKOffsets, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x000060, "Member 'Christian_ALS_AnimBP_C_ResetIKOffsets::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ResetIKOffsets, CallFunc_VInterpTo_DeltaTime_ImplicitCast) == 0x000064, "Member 'Christian_ALS_AnimBP_C_ResetIKOffsets::CallFunc_VInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ResetIKOffsets, CallFunc_VInterpTo_DeltaTime_ImplicitCast_1) == 0x000068, "Member 'Christian_ALS_AnimBP_C_ResetIKOffsets::CallFunc_VInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ResetIKOffsets, CallFunc_RInterpTo_DeltaTime_ImplicitCast_1) == 0x00006C, "Member 'Christian_ALS_AnimBP_C_ResetIKOffsets::CallFunc_RInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.RotateInPlaceCheck
// 0x0058 (0x0058 - 0x0000)
struct Christian_ALS_AnimBP_C_RotateInPlaceCheck final
{
public:
	struct FRotateInPlace_Asset                   TargetRotateAsset;                                 // 0x0000(0x0020)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3007[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3008[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_RotateInPlaceCheck) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_RotateInPlaceCheck");
static_assert(sizeof(Christian_ALS_AnimBP_C_RotateInPlaceCheck) == 0x000058, "Wrong size on Christian_ALS_AnimBP_C_RotateInPlaceCheck");
static_assert(offsetof(Christian_ALS_AnimBP_C_RotateInPlaceCheck, TargetRotateAsset) == 0x000000, "Member 'Christian_ALS_AnimBP_C_RotateInPlaceCheck::TargetRotateAsset' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_RotateInPlaceCheck, CallFunc_BooleanOR_ReturnValue) == 0x000020, "Member 'Christian_ALS_AnimBP_C_RotateInPlaceCheck::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_RotateInPlaceCheck, CallFunc_BreakVector2D_X) == 0x000028, "Member 'Christian_ALS_AnimBP_C_RotateInPlaceCheck::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_RotateInPlaceCheck, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'Christian_ALS_AnimBP_C_RotateInPlaceCheck::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_RotateInPlaceCheck, CallFunc_BreakVector2D_X_1) == 0x000038, "Member 'Christian_ALS_AnimBP_C_RotateInPlaceCheck::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_RotateInPlaceCheck, CallFunc_BreakVector2D_Y_1) == 0x000040, "Member 'Christian_ALS_AnimBP_C_RotateInPlaceCheck::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_RotateInPlaceCheck, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'Christian_ALS_AnimBP_C_RotateInPlaceCheck::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_RotateInPlaceCheck, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000049, "Member 'Christian_ALS_AnimBP_C_RotateInPlaceCheck::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_RotateInPlaceCheck, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'Christian_ALS_AnimBP_C_RotateInPlaceCheck::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.SetActorComponentToPull
// 0x0008 (0x0008 - 0x0000)
struct Christian_ALS_AnimBP_C_SetActorComponentToPull final
{
public:
	class UPrimitiveComponent*                    Comp;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_SetActorComponentToPull) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_SetActorComponentToPull");
static_assert(sizeof(Christian_ALS_AnimBP_C_SetActorComponentToPull) == 0x000008, "Wrong size on Christian_ALS_AnimBP_C_SetActorComponentToPull");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetActorComponentToPull, Comp) == 0x000000, "Member 'Christian_ALS_AnimBP_C_SetActorComponentToPull::Comp' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.SetFootLocking
// 0x0140 (0x0140 - 0x0000)
struct Christian_ALS_AnimBP_C_SetFootLocking final
{
public:
	class FName                                   Enable_FootIK_Curve;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FootLockCurve;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   IKFootBone;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentFootLockAlpha;                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentFootLockLocation;                           // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CurrentFootLockRotation;                           // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	double                                        FootLockCurveValue;                                // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3009[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_300A[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_300B[0x2];                                     // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_300C[0x6];                                     // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_FootLockCurveValue_ImplicitCast; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_SetFootLocking) == 0x000010, "Wrong alignment on Christian_ALS_AnimBP_C_SetFootLocking");
static_assert(sizeof(Christian_ALS_AnimBP_C_SetFootLocking) == 0x000140, "Wrong size on Christian_ALS_AnimBP_C_SetFootLocking");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLocking, Enable_FootIK_Curve) == 0x000000, "Member 'Christian_ALS_AnimBP_C_SetFootLocking::Enable_FootIK_Curve' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLocking, FootLockCurve) == 0x000008, "Member 'Christian_ALS_AnimBP_C_SetFootLocking::FootLockCurve' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLocking, IKFootBone) == 0x000010, "Member 'Christian_ALS_AnimBP_C_SetFootLocking::IKFootBone' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLocking, CurrentFootLockAlpha) == 0x000018, "Member 'Christian_ALS_AnimBP_C_SetFootLocking::CurrentFootLockAlpha' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLocking, CurrentFootLockLocation) == 0x000020, "Member 'Christian_ALS_AnimBP_C_SetFootLocking::CurrentFootLockLocation' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLocking, CurrentFootLockRotation) == 0x000038, "Member 'Christian_ALS_AnimBP_C_SetFootLocking::CurrentFootLockRotation' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLocking, FootLockCurveValue) == 0x000050, "Member 'Christian_ALS_AnimBP_C_SetFootLocking::FootLockCurveValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLocking, CallFunc_GetCurveValue_ReturnValue) == 0x000058, "Member 'Christian_ALS_AnimBP_C_SetFootLocking::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLocking, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00005C, "Member 'Christian_ALS_AnimBP_C_SetFootLocking::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLocking, CallFunc_GetOwningComponent_ReturnValue) == 0x000060, "Member 'Christian_ALS_AnimBP_C_SetFootLocking::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLocking, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Christian_ALS_AnimBP_C_SetFootLocking::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLocking, CallFunc_GetSocketTransform_ReturnValue) == 0x000070, "Member 'Christian_ALS_AnimBP_C_SetFootLocking::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLocking, CallFunc_BreakTransform_Location) == 0x0000D0, "Member 'Christian_ALS_AnimBP_C_SetFootLocking::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLocking, CallFunc_BreakTransform_Rotation) == 0x0000E8, "Member 'Christian_ALS_AnimBP_C_SetFootLocking::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLocking, CallFunc_BreakTransform_Scale) == 0x000100, "Member 'Christian_ALS_AnimBP_C_SetFootLocking::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLocking, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000118, "Member 'Christian_ALS_AnimBP_C_SetFootLocking::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLocking, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000119, "Member 'Christian_ALS_AnimBP_C_SetFootLocking::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLocking, CallFunc_GetCurveValue_ReturnValue_1) == 0x00011C, "Member 'Christian_ALS_AnimBP_C_SetFootLocking::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLocking, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000120, "Member 'Christian_ALS_AnimBP_C_SetFootLocking::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLocking, CallFunc_BooleanOR_ReturnValue) == 0x000121, "Member 'Christian_ALS_AnimBP_C_SetFootLocking::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLocking, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000128, "Member 'Christian_ALS_AnimBP_C_SetFootLocking::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLocking, K2Node_VariableSet_FootLockCurveValue_ImplicitCast) == 0x000130, "Member 'Christian_ALS_AnimBP_C_SetFootLocking::K2Node_VariableSet_FootLockCurveValue_ImplicitCast' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.SetFootLockOffsets
// 0x0190 (0x0190 - 0x0000)
struct Christian_ALS_AnimBP_C_SetFootLockOffsets final
{
public:
	struct FVector                                LocalLocation;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LocalRotation;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                LocationDifference;                                // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RotationDifference;                                // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_300D[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character;                // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_300E[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetLastUpdateRotation_Rot;                // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character_1;              // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_300F[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue_1;     // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGrounded_Grounded;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_SetFootLockOffsets) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_SetFootLockOffsets");
static_assert(sizeof(Christian_ALS_AnimBP_C_SetFootLockOffsets) == 0x000190, "Wrong size on Christian_ALS_AnimBP_C_SetFootLockOffsets");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, LocalLocation) == 0x000000, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::LocalLocation' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, LocalRotation) == 0x000018, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::LocalRotation' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, LocationDifference) == 0x000030, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::LocationDifference' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, RotationDifference) == 0x000048, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::RotationDifference' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000060, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, CallFunc_BreakRotator_Roll) == 0x000078, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, CallFunc_BreakRotator_Pitch) == 0x00007C, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, CallFunc_BreakRotator_Yaw) == 0x000080, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, CallFunc_GetOwningComponent_ReturnValue) == 0x000088, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000090, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0000A8, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, CallFunc_RotateAngleAxis_ReturnValue) == 0x0000C0, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000D8, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000E0, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, K2Node_DynamicCast_AsBPI_Character) == 0x0000F8, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::K2Node_DynamicCast_AsBPI_Character' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000110, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, CallFunc_GetLastUpdateRotation_Rot) == 0x000128, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::CallFunc_GetLastUpdateRotation_Rot' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000140, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, K2Node_DynamicCast_AsBPI_Character_1) == 0x000158, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::K2Node_DynamicCast_AsBPI_Character_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, K2Node_DynamicCast_bSuccess_1) == 0x000168, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, CallFunc_NormalizedDeltaRotator_ReturnValue_1) == 0x000170, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::CallFunc_NormalizedDeltaRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootLockOffsets, CallFunc_IsGrounded_Grounded) == 0x000188, "Member 'Christian_ALS_AnimBP_C_SetFootLockOffsets::CallFunc_IsGrounded_Grounded' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.SetFootOffsets
// 0x00C0 (0x00C0 - 0x0000)
struct Christian_ALS_AnimBP_C_SetFootOffsets final
{
public:
	class FName                                   Enable_FootIK_Curve;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   IKFootBone;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RootBone;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentLocationTarget;                             // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentLocationOffset;                             // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CurrentRotationOffset;                             // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                               TargetRotationOffset;                              // 0x0060(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                ImpactNormal;                                      // 0x0078(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactPoint;                                       // 0x0090(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                IKFootFloorLocation;                               // 0x00A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_SetFootOffsets) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_SetFootOffsets");
static_assert(sizeof(Christian_ALS_AnimBP_C_SetFootOffsets) == 0x0000C0, "Wrong size on Christian_ALS_AnimBP_C_SetFootOffsets");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootOffsets, Enable_FootIK_Curve) == 0x000000, "Member 'Christian_ALS_AnimBP_C_SetFootOffsets::Enable_FootIK_Curve' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootOffsets, IKFootBone) == 0x000008, "Member 'Christian_ALS_AnimBP_C_SetFootOffsets::IKFootBone' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootOffsets, RootBone) == 0x000010, "Member 'Christian_ALS_AnimBP_C_SetFootOffsets::RootBone' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootOffsets, CurrentLocationTarget) == 0x000018, "Member 'Christian_ALS_AnimBP_C_SetFootOffsets::CurrentLocationTarget' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootOffsets, CurrentLocationOffset) == 0x000030, "Member 'Christian_ALS_AnimBP_C_SetFootOffsets::CurrentLocationOffset' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootOffsets, CurrentRotationOffset) == 0x000048, "Member 'Christian_ALS_AnimBP_C_SetFootOffsets::CurrentRotationOffset' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootOffsets, TargetRotationOffset) == 0x000060, "Member 'Christian_ALS_AnimBP_C_SetFootOffsets::TargetRotationOffset' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootOffsets, ImpactNormal) == 0x000078, "Member 'Christian_ALS_AnimBP_C_SetFootOffsets::ImpactNormal' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootOffsets, ImpactPoint) == 0x000090, "Member 'Christian_ALS_AnimBP_C_SetFootOffsets::ImpactPoint' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetFootOffsets, IKFootFloorLocation) == 0x0000A8, "Member 'Christian_ALS_AnimBP_C_SetFootOffsets::IKFootFloorLocation' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.SetPelvisIKOffset
// 0x0120 (0x0120 - 0x0000)
struct Christian_ALS_AnimBP_C_SetPelvisIKOffset final
{
public:
	struct FVector                                FootOffset_L_Target;                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootOffset_R_Target;                               // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PelvisTarget;                                      // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3010[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VInterpTo_ReturnValue_1;                  // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3011[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3012[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3013[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast;         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast_1;       // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3014[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_SetPelvisIKOffset) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_SetPelvisIKOffset");
static_assert(sizeof(Christian_ALS_AnimBP_C_SetPelvisIKOffset) == 0x000120, "Wrong size on Christian_ALS_AnimBP_C_SetPelvisIKOffset");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, FootOffset_L_Target) == 0x000000, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::FootOffset_L_Target' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, FootOffset_R_Target) == 0x000018, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::FootOffset_R_Target' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, PelvisTarget) == 0x000030, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::PelvisTarget' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_VInterpTo_ReturnValue) == 0x000048, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000060, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_VInterpTo_ReturnValue_1) == 0x000068, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_VInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_X) == 0x000080, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Y) == 0x000088, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Z) == 0x000090, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_X_1) == 0x000098, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Y_1) == 0x0000A0, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Z_1) == 0x0000A8, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_GetCurveValue_ReturnValue) == 0x0000B0, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0000B4, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_GetCurveValue_ReturnValue_1) == 0x0000B8, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_X_2) == 0x0000D0, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Y_2) == 0x0000D8, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Z_2) == 0x0000E0, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_X_3) == 0x0000E8, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Y_3) == 0x0000F0, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Z_3) == 0x0000F8, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000100, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_VInterpTo_DeltaTime_ImplicitCast) == 0x000104, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_VInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_VInterpTo_DeltaTime_ImplicitCast_1) == 0x000108, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_VInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000110, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000118, "Member 'Christian_ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.ShouldMoveCheck
// 0x0002 (0x0002 - 0x0000)
struct Christian_ALS_AnimBP_C_ShouldMoveCheck final
{
public:
	bool                                          Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_ShouldMoveCheck) == 0x000001, "Wrong alignment on Christian_ALS_AnimBP_C_ShouldMoveCheck");
static_assert(sizeof(Christian_ALS_AnimBP_C_ShouldMoveCheck) == 0x000002, "Wrong size on Christian_ALS_AnimBP_C_ShouldMoveCheck");
static_assert(offsetof(Christian_ALS_AnimBP_C_ShouldMoveCheck, Return_Value) == 0x000000, "Member 'Christian_ALS_AnimBP_C_ShouldMoveCheck::Return_Value' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_ShouldMoveCheck, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'Christian_ALS_AnimBP_C_ShouldMoveCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.TurnInPlace
// 0x0130 (0x0130 - 0x0000)
struct Christian_ALS_AnimBP_C_TurnInPlace final
{
public:
	struct FRotator                               TargetRotation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        PlayRateScale;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StartTime;                                         // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverrideCurrent;                                   // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3015[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTurnInPlace_Asset                     TargetTurnAsset;                                   // 0x0030(0x0020)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	double                                        TurnAngle;                                         // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingSlotAnimation_ReturnValue;       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3016[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character;                // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3017[0x6];                                     // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetCapsuleRotation_Rotation;              // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3018[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlaySlotAnimationAsDynamicMontage_InTimeToStartMontageAt_ImplicitCast; // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3019[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlaySlotAnimationAsDynamicMontage_InPlayRate_ImplicitCast; // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301A[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_TurnAngle_ImplicitCast;         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_TurnInPlace) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_TurnInPlace");
static_assert(sizeof(Christian_ALS_AnimBP_C_TurnInPlace) == 0x000130, "Wrong size on Christian_ALS_AnimBP_C_TurnInPlace");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, TargetRotation) == 0x000000, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::TargetRotation' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, PlayRateScale) == 0x000018, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::PlayRateScale' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, StartTime) == 0x000020, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::StartTime' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, OverrideCurrent) == 0x000028, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::OverrideCurrent' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, TargetTurnAsset) == 0x000030, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::TargetTurnAsset' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, TurnAngle) == 0x000050, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::TurnAngle' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000060, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue) == 0x000078, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000080, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_IsPlayingSlotAnimation_ReturnValue) == 0x000088, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_IsPlayingSlotAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000089, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_Not_PreBool_ReturnValue) == 0x00008A, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_BooleanOR_ReturnValue) == 0x00008B, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x00008C, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, K2Node_SwitchEnum_CmpSuccess) == 0x00008D, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, K2Node_SwitchEnum_CmpSuccess_1) == 0x00008E, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, K2Node_SwitchEnum_CmpSuccess_2) == 0x00008F, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, K2Node_SwitchEnum_CmpSuccess_3) == 0x000090, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_Abs_ReturnValue) == 0x000098, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, K2Node_DynamicCast_AsBPI_Character) == 0x0000A0, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::K2Node_DynamicCast_AsBPI_Character' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x0000B1, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_GetCapsuleRotation_Rotation) == 0x0000B8, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_GetCapsuleRotation_Rotation' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x0000D0, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_BreakRotator_Roll) == 0x0000E8, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_BreakRotator_Pitch) == 0x0000EC, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_BreakRotator_Yaw) == 0x0000F0, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000F8, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_PlaySlotAnimationAsDynamicMontage_InTimeToStartMontageAt_ImplicitCast) == 0x000100, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_PlaySlotAnimationAsDynamicMontage_InTimeToStartMontageAt_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000108, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000110, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000118, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, CallFunc_PlaySlotAnimationAsDynamicMontage_InPlayRate_ImplicitCast) == 0x000120, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::CallFunc_PlaySlotAnimationAsDynamicMontage_InPlayRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlace, K2Node_VariableSet_TurnAngle_ImplicitCast) == 0x000128, "Member 'Christian_ALS_AnimBP_C_TurnInPlace::K2Node_VariableSet_TurnAngle_ImplicitCast' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.TurnInPlaceCheck
// 0x00A0 (0x00A0 - 0x0000)
struct Christian_ALS_AnimBP_C_TurnInPlaceCheck final
{
public:
	double                                        AngleMulti;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTurnInPlace_Asset                     TargetTurnAsset;                                   // 0x0008(0x0020)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301B[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301C[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_TurnInPlaceCheck) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_TurnInPlaceCheck");
static_assert(sizeof(Christian_ALS_AnimBP_C_TurnInPlaceCheck) == 0x0000A0, "Wrong size on Christian_ALS_AnimBP_C_TurnInPlaceCheck");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlaceCheck, AngleMulti) == 0x000000, "Member 'Christian_ALS_AnimBP_C_TurnInPlaceCheck::AngleMulti' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlaceCheck, TargetTurnAsset) == 0x000008, "Member 'Christian_ALS_AnimBP_C_TurnInPlaceCheck::TargetTurnAsset' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_BreakRotator_Roll) == 0x000028, "Member 'Christian_ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_BreakRotator_Pitch) == 0x00002C, "Member 'Christian_ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_BreakRotator_Yaw) == 0x000030, "Member 'Christian_ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_MakeRotator_ReturnValue) == 0x000038, "Member 'Christian_ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_BreakVector2D_X) == 0x000050, "Member 'Christian_ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_BreakVector2D_Y) == 0x000058, "Member 'Christian_ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_Abs_ReturnValue) == 0x000060, "Member 'Christian_ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_MapRangeClamped_ReturnValue) == 0x000068, "Member 'Christian_ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000070, "Member 'Christian_ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_BreakVector2D_X_1) == 0x000078, "Member 'Christian_ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_BreakVector2D_Y_1) == 0x000080, "Member 'Christian_ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_Abs_ReturnValue_1) == 0x000088, "Member 'Christian_ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000090, "Member 'Christian_ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'Christian_ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000099, "Member 'Christian_ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_BooleanAND_ReturnValue) == 0x00009A, "Member 'Christian_ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.UpdateAimingValues
// 0x01F0 (0x01F0 - 0x0000)
struct Christian_ALS_AnimBP_C_UpdateAimingValues final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301E[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetCapsuleRotation_Rotation;              // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301F[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3020[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue_1;     // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3021[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue_2;     // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3022[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_InterpSpeed_ImplicitCast;       // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3023[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast_1;            // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast_1;            // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_UpdateAimingValues) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_UpdateAimingValues");
static_assert(sizeof(Christian_ALS_AnimBP_C_UpdateAimingValues) == 0x0001F0, "Wrong size on Christian_ALS_AnimBP_C_UpdateAimingValues");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, K2Node_DynamicCast_AsBPI_Character) == 0x000008, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::K2Node_DynamicCast_AsBPI_Character' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_GetCapsuleRotation_Rotation) == 0x000020, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_GetCapsuleRotation_Rotation' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, K2Node_SwitchEnum_CmpSuccess_1) == 0x000038, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000040, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000058, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000070, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Roll) == 0x000088, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Pitch) == 0x00008C, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Yaw) == 0x000090, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_MapRangeClamped_ReturnValue) == 0x000098, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_X) == 0x0000A0, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_Y) == 0x0000A8, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_X_1) == 0x0000B0, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_Y_1) == 0x0000B8, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000C0, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_MakeRotator_ReturnValue) == 0x0000D0, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_NormalizedDeltaRotator_ReturnValue_1) == 0x0000E8, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_NormalizedDeltaRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Roll_1) == 0x000100, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Pitch_1) == 0x000104, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Yaw_1) == 0x000108, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_FInterpTo_ReturnValue) == 0x000110, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_MakeVector2D_ReturnValue) == 0x000118, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_X_2) == 0x000128, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_Y_2) == 0x000130, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_X_3) == 0x000138, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_Y_3) == 0x000140, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000148, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_Abs_ReturnValue) == 0x000150, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000158, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_MapRangeClamped_ReturnValue_4) == 0x000160, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_NormalizedDeltaRotator_ReturnValue_2) == 0x000168, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_NormalizedDeltaRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_RInterpTo_ReturnValue) == 0x000180, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Roll_2) == 0x000198, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Pitch_2) == 0x00019C, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Yaw_2) == 0x0001A0, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_MakeVector2D_ReturnValue_1) == 0x0001A8, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x0001B8, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_RInterpTo_InterpSpeed_ImplicitCast) == 0x0001C0, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_RInterpTo_InterpSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0001C4, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x0001C8, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_MakeVector2D_X_ImplicitCast) == 0x0001D0, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x0001D8, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_MakeVector2D_Y_ImplicitCast_1) == 0x0001E0, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_MakeVector2D_Y_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateAimingValues, CallFunc_MakeVector2D_X_ImplicitCast_1) == 0x0001E8, "Member 'Christian_ALS_AnimBP_C_UpdateAimingValues::CallFunc_MakeVector2D_X_ImplicitCast_1' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.UpdateCarSpeed
// 0x0050 (0x0050 - 0x0000)
struct Christian_ALS_AnimBP_C_UpdateCarSpeed final
{
public:
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3024[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCurrentVehicle_Vehicle;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3025[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Vehicle_C>        K2Node_DynamicCast_AsBPI_Vehicle;                  // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3026[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetForwardSpeed_Speed;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_UpdateCarSpeed) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_UpdateCarSpeed");
static_assert(sizeof(Christian_ALS_AnimBP_C_UpdateCarSpeed) == 0x000050, "Wrong size on Christian_ALS_AnimBP_C_UpdateCarSpeed");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCarSpeed, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000000, "Member 'Christian_ALS_AnimBP_C_UpdateCarSpeed::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCarSpeed, K2Node_DynamicCast_AsBPI_Character) == 0x000008, "Member 'Christian_ALS_AnimBP_C_UpdateCarSpeed::K2Node_DynamicCast_AsBPI_Character' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCarSpeed, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Christian_ALS_AnimBP_C_UpdateCarSpeed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCarSpeed, CallFunc_GetCurrentVehicle_Vehicle) == 0x000020, "Member 'Christian_ALS_AnimBP_C_UpdateCarSpeed::CallFunc_GetCurrentVehicle_Vehicle' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCarSpeed, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'Christian_ALS_AnimBP_C_UpdateCarSpeed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCarSpeed, K2Node_DynamicCast_AsBPI_Vehicle) == 0x000030, "Member 'Christian_ALS_AnimBP_C_UpdateCarSpeed::K2Node_DynamicCast_AsBPI_Vehicle' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCarSpeed, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'Christian_ALS_AnimBP_C_UpdateCarSpeed::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCarSpeed, CallFunc_GetForwardSpeed_Speed) == 0x000048, "Member 'Christian_ALS_AnimBP_C_UpdateCarSpeed::CallFunc_GetForwardSpeed_Speed' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.UpdateCharacterInfo
// 0x01D8 (0x01D8 - 0x0000)
struct Christian_ALS_AnimBP_C_UpdateCharacterInfo final
{
public:
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3027[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCurrentVehicle_Vehicle;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_Vehicle_C>        K2Node_DynamicCast_AsBPI_Vehicle;                  // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCarosse_Carosse;                        // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3028[0x5];                                     // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_1;            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character_1;              // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3029[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetCapsuleRotation_Rotation;              // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IALS_Character_BPI_C>  K2Node_DynamicCast_AsALS_Character_BPI;            // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_302A[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IALS_Character_BPI_C>  K2Node_DynamicCast_AsALS_Character_BPI_1;          // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_302B[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BPI_Get_EssentialValues_Velocity;         // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BPI_Get_EssentialValues_Acceleration;     // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BPI_Get_EssentialValues_MovementInput;    // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_EssentialValues_IsMoving;         // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_EssentialValues_HasMovementInput; // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_302C[0x6];                                     // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BPI_Get_EssentialValues_Speed;            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BPI_Get_EssentialValues_MovementInputAmount; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BPI_Get_EssentialValues_AimingRotation;   // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BPI_Get_EssentialValues_AimYawRate;       // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BPI_Get_EssentialValues_PullCharacter;    // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_EssentialValues_Pull;             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_EssentialValues_Climb;            // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_302D[0x6];                                     // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_BPI_Get_EssentialValues_MoveInput;        // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_EssentialValues_SwimOnSurface;    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_302E[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BPI_Get_EssentialValues_LeftHandLocation; // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BPI_Get_EssentialValues_RightHandLocation; // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BPI_Get_EssentialValues_RadialVelocityRight; // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BPI_Get_EssentialValues_RadialVelocityUp; // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_EssentialValues_Swim;             // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_EssentialValues_Bounce;           // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_EssentialValues_LookAround;       // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_EssentialValues_Balancier;        // 0x01C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 CallFunc_BPI_Get_CurrentStates_PawnMovementMode;   // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementState                            CallFunc_BPI_Get_CurrentStates_MovementState;      // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementState                            CallFunc_BPI_Get_CurrentStates_PrevMovementState;  // 0x01C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementAction                           CallFunc_BPI_Get_CurrentStates_MovementAction;     // 0x01C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_RotationMode                             CallFunc_BPI_Get_CurrentStates_RotationMode;       // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Gait                                     CallFunc_BPI_Get_CurrentStates_ActualGait;         // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Stance                                   CallFunc_BPI_Get_CurrentStates_ActualStance;       // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_ViewMode                                 CallFunc_BPI_Get_CurrentStates_ViewMode;           // 0x01CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_OverlayState                             CallFunc_BPI_Get_CurrentStates_OverlayState;       // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_302F[0x3];                                     // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_UpdateCharacterInfo) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_UpdateCharacterInfo");
static_assert(sizeof(Christian_ALS_AnimBP_C_UpdateCharacterInfo) == 0x0001D8, "Wrong size on Christian_ALS_AnimBP_C_UpdateCharacterInfo");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_GetPlayerPawn_ReturnValue) == 0x000000, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_AsBPI_Character) == 0x000010, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_AsBPI_Character' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_GetCurrentVehicle_Vehicle) == 0x000028, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_GetCurrentVehicle_Vehicle' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BreakVector2D_X) == 0x000030, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_MakeRotator_ReturnValue) == 0x000040, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_AsBPI_Vehicle) == 0x000058, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_AsBPI_Vehicle' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_IsCarosse_Carosse) == 0x000069, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_IsCarosse_Carosse' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_IsValid_ReturnValue) == 0x00006A, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_TryGetPawnOwner_ReturnValue_1) == 0x000070, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_TryGetPawnOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_AsBPI_Character_1) == 0x000078, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_AsBPI_Character_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000089, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_GetCapsuleRotation_Rotation) == 0x000090, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_GetCapsuleRotation_Rotation' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_AsALS_Character_BPI) == 0x0000A8, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_AsALS_Character_BPI' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_bSuccess_3) == 0x0000B8, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_AsALS_Character_BPI_1) == 0x0000C0, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_AsALS_Character_BPI_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_bSuccess_4) == 0x0000D0, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_Velocity) == 0x0000D8, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_Velocity' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_Acceleration) == 0x0000F0, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_Acceleration' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_MovementInput) == 0x000108, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_MovementInput' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_IsMoving) == 0x000120, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_IsMoving' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_HasMovementInput) == 0x000121, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_HasMovementInput' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_Speed) == 0x000128, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_Speed' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_MovementInputAmount) == 0x000130, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_MovementInputAmount' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_AimingRotation) == 0x000138, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_AimingRotation' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_AimYawRate) == 0x000150, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_AimYawRate' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_PullCharacter) == 0x000158, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_PullCharacter' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_Pull) == 0x000160, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_Pull' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_Climb) == 0x000161, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_Climb' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_MoveInput) == 0x000168, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_MoveInput' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_SwimOnSurface) == 0x000178, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_SwimOnSurface' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_LeftHandLocation) == 0x000180, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_LeftHandLocation' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_RightHandLocation) == 0x000198, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_RightHandLocation' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_RadialVelocityRight) == 0x0001B0, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_RadialVelocityRight' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_RadialVelocityUp) == 0x0001B8, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_RadialVelocityUp' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_Swim) == 0x0001C0, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_Swim' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_Bounce) == 0x0001C1, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_Bounce' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_LookAround) == 0x0001C2, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_LookAround' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_Balancier) == 0x0001C3, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_Balancier' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_PawnMovementMode) == 0x0001C4, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_PawnMovementMode' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_MovementState) == 0x0001C5, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_MovementState' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_PrevMovementState) == 0x0001C6, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_PrevMovementState' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_MovementAction) == 0x0001C7, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_MovementAction' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_RotationMode) == 0x0001C8, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_RotationMode' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_ActualGait) == 0x0001C9, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_ActualGait' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_ActualStance) == 0x0001CA, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_ActualStance' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_ViewMode) == 0x0001CB, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_ViewMode' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_OverlayState) == 0x0001CC, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_OverlayState' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x0001D0, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0001D4, "Member 'Christian_ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.UpdateClimb
// 0x0038 (0x0038 - 0x0000)
struct Christian_ALS_AnimBP_C_UpdateClimb final
{
public:
	bool                                          Param_bClimb;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3030[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_UpdateClimb) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_UpdateClimb");
static_assert(sizeof(Christian_ALS_AnimBP_C_UpdateClimb) == 0x000038, "Wrong size on Christian_ALS_AnimBP_C_UpdateClimb");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateClimb, Param_bClimb) == 0x000000, "Member 'Christian_ALS_AnimBP_C_UpdateClimb::Param_bClimb' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateClimb, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'Christian_ALS_AnimBP_C_UpdateClimb::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateClimb, CallFunc_GetVelocity_ReturnValue) == 0x000010, "Member 'Christian_ALS_AnimBP_C_UpdateClimb::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateClimb, CallFunc_VSize_ReturnValue) == 0x000028, "Member 'Christian_ALS_AnimBP_C_UpdateClimb::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateClimb, CallFunc_FClamp_ReturnValue) == 0x000030, "Member 'Christian_ALS_AnimBP_C_UpdateClimb::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.UpdateFootIK
// 0x0030 (0x0030 - 0x0000)
struct Christian_ALS_AnimBP_C_UpdateFootIK final
{
public:
	struct FVector                                FootOffset_R_Target;                               // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootOffset_L_Target;                               // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_UpdateFootIK) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_UpdateFootIK");
static_assert(sizeof(Christian_ALS_AnimBP_C_UpdateFootIK) == 0x000030, "Wrong size on Christian_ALS_AnimBP_C_UpdateFootIK");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateFootIK, FootOffset_R_Target) == 0x000000, "Member 'Christian_ALS_AnimBP_C_UpdateFootIK::FootOffset_R_Target' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateFootIK, FootOffset_L_Target) == 0x000018, "Member 'Christian_ALS_AnimBP_C_UpdateFootIK::FootOffset_L_Target' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.UpdateInAirValues
// 0x0030 (0x0030 - 0x0000)
struct Christian_ALS_AnimBP_C_UpdateInAirValues final
{
public:
	struct FLeanAmount                            CallFunc_CalculateInAirLeanAmount_LeanAmount;      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeanAmount                            CallFunc_InterpLeanAmount_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateLandPrediction_LandPrediction;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_UpdateInAirValues) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_UpdateInAirValues");
static_assert(sizeof(Christian_ALS_AnimBP_C_UpdateInAirValues) == 0x000030, "Wrong size on Christian_ALS_AnimBP_C_UpdateInAirValues");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateInAirValues, CallFunc_CalculateInAirLeanAmount_LeanAmount) == 0x000000, "Member 'Christian_ALS_AnimBP_C_UpdateInAirValues::CallFunc_CalculateInAirLeanAmount_LeanAmount' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateInAirValues, CallFunc_InterpLeanAmount_ReturnValue) == 0x000008, "Member 'Christian_ALS_AnimBP_C_UpdateInAirValues::CallFunc_InterpLeanAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateInAirValues, CallFunc_CalculateLandPrediction_LandPrediction) == 0x000010, "Member 'Christian_ALS_AnimBP_C_UpdateInAirValues::CallFunc_CalculateLandPrediction_LandPrediction' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateInAirValues, CallFunc_BreakVector_X) == 0x000018, "Member 'Christian_ALS_AnimBP_C_UpdateInAirValues::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateInAirValues, CallFunc_BreakVector_Y) == 0x000020, "Member 'Christian_ALS_AnimBP_C_UpdateInAirValues::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateInAirValues, CallFunc_BreakVector_Z) == 0x000028, "Member 'Christian_ALS_AnimBP_C_UpdateInAirValues::CallFunc_BreakVector_Z' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.UpdateLayerValues
// 0x00F8 (0x00F8 - 0x0000)
struct Christian_ALS_AnimBP_C_UpdateLayerValues final
{
public:
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_2;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3031[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_3;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_4;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_5;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_6;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_7;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3032[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_8;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_9;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_10;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_11;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_12;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_13;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_14;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3033[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast;                      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Arm_L_LS_ImplicitCast;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Arm_R_LS_ImplicitCast;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast_1;                    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_BasePose_N_ImplicitCast;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_2;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_BasePose_CLF_ImplicitCast;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Arm_R_Add_ImplicitCast;         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Arm_L_Add_ImplicitCast;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Spine_Add_ImplicitCast;         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Hand_R_ImplicitCast;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Head_Add_ImplicitCast;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Hand_L_ImplicitCast;            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_UpdateLayerValues) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_UpdateLayerValues");
static_assert(sizeof(Christian_ALS_AnimBP_C_UpdateLayerValues) == 0x0000F8, "Wrong size on Christian_ALS_AnimBP_C_UpdateLayerValues");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue) == 0x000000, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_1) == 0x000004, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_2) == 0x000008, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_3) == 0x000018, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_4) == 0x00001C, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_5) == 0x000020, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_6) == 0x000024, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_ReturnValue_1) == 0x000028, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_7) == 0x000030, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_ReturnValue_2) == 0x000038, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_8) == 0x000040, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_9) == 0x000044, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_10) == 0x000048, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_11) == 0x00004C, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_12) == 0x000050, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_13) == 0x000054, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_FFloor_ReturnValue) == 0x000058, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_14) == 0x00005C, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_Subtract_IntInt_ReturnValue) == 0x000060, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000068, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_FFloor_ReturnValue_1) == 0x000070, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000074, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000078, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_B_ImplicitCast) == 0x000080, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Arm_L_LS_ImplicitCast) == 0x000088, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Arm_L_LS_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000090, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Arm_R_LS_ImplicitCast) == 0x000098, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Arm_R_LS_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_B_ImplicitCast_1) == 0x0000A0, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_BasePose_N_ImplicitCast) == 0x0000A8, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_BasePose_N_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x0000B0, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_Alpha_ImplicitCast_2) == 0x0000B8, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_BasePose_CLF_ImplicitCast) == 0x0000C0, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_BasePose_CLF_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Arm_R_Add_ImplicitCast) == 0x0000C8, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Arm_R_Add_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Arm_L_Add_ImplicitCast) == 0x0000D0, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Arm_L_Add_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Spine_Add_ImplicitCast) == 0x0000D8, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Spine_Add_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Hand_R_ImplicitCast) == 0x0000E0, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Hand_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Head_Add_ImplicitCast) == 0x0000E8, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Head_Add_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Hand_L_ImplicitCast) == 0x0000F0, "Member 'Christian_ALS_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Hand_L_ImplicitCast' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.UpdateMoveInput
// 0x0060 (0x0060 - 0x0000)
struct Christian_ALS_AnimBP_C_UpdateMoveInput final
{
public:
	struct FVector2D                              InVec;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Vector2DInterpTo_ReturnValue;             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector2DInterpTo_DeltaTime_ImplicitCast;  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_UpdateMoveInput) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_UpdateMoveInput");
static_assert(sizeof(Christian_ALS_AnimBP_C_UpdateMoveInput) == 0x000060, "Wrong size on Christian_ALS_AnimBP_C_UpdateMoveInput");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMoveInput, InVec) == 0x000000, "Member 'Christian_ALS_AnimBP_C_UpdateMoveInput::InVec' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMoveInput, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'Christian_ALS_AnimBP_C_UpdateMoveInput::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMoveInput, CallFunc_BreakVector2D_X) == 0x000018, "Member 'Christian_ALS_AnimBP_C_UpdateMoveInput::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMoveInput, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'Christian_ALS_AnimBP_C_UpdateMoveInput::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMoveInput, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Christian_ALS_AnimBP_C_UpdateMoveInput::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMoveInput, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000030, "Member 'Christian_ALS_AnimBP_C_UpdateMoveInput::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMoveInput, CallFunc_MakeVector2D_ReturnValue) == 0x000038, "Member 'Christian_ALS_AnimBP_C_UpdateMoveInput::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMoveInput, CallFunc_Vector2DInterpTo_ReturnValue) == 0x000048, "Member 'Christian_ALS_AnimBP_C_UpdateMoveInput::CallFunc_Vector2DInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMoveInput, CallFunc_Vector2DInterpTo_DeltaTime_ImplicitCast) == 0x000058, "Member 'Christian_ALS_AnimBP_C_UpdateMoveInput::CallFunc_Vector2DInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.UpdateMovementValues
// 0x00A0 (0x00A0 - 0x0000)
struct Christian_ALS_AnimBP_C_UpdateMovementValues final
{
public:
	struct FVelocityBlend                         TargetVelocityBlend;                               // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalculateRelativeAccelerationAmount_ReturnValue; // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeanAmount                            K2Node_MakeStruct_LeanAmount;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateDiagonalScaleAmount_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateCrouchingPlayRate_PlayRate;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateStrideBlend_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateWalkRunBlend_WalkRunBlend;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVelocityBlend                         CallFunc_CalculateVelocityBlend_ReturnValue;       // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeanAmount                            CallFunc_InterpLeanAmount_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVelocityBlend                         CallFunc_InterpVelocityBlend_ReturnValue;          // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateStandingPlayRate_PlayRate;       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_UpdateMovementValues) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_UpdateMovementValues");
static_assert(sizeof(Christian_ALS_AnimBP_C_UpdateMovementValues) == 0x0000A0, "Wrong size on Christian_ALS_AnimBP_C_UpdateMovementValues");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMovementValues, TargetVelocityBlend) == 0x000000, "Member 'Christian_ALS_AnimBP_C_UpdateMovementValues::TargetVelocityBlend' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMovementValues, CallFunc_CalculateRelativeAccelerationAmount_ReturnValue) == 0x000010, "Member 'Christian_ALS_AnimBP_C_UpdateMovementValues::CallFunc_CalculateRelativeAccelerationAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMovementValues, CallFunc_BreakVector_X) == 0x000028, "Member 'Christian_ALS_AnimBP_C_UpdateMovementValues::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMovementValues, CallFunc_BreakVector_Y) == 0x000030, "Member 'Christian_ALS_AnimBP_C_UpdateMovementValues::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMovementValues, CallFunc_BreakVector_Z) == 0x000038, "Member 'Christian_ALS_AnimBP_C_UpdateMovementValues::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMovementValues, K2Node_MakeStruct_LeanAmount) == 0x000040, "Member 'Christian_ALS_AnimBP_C_UpdateMovementValues::K2Node_MakeStruct_LeanAmount' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMovementValues, CallFunc_CalculateDiagonalScaleAmount_ReturnValue) == 0x000048, "Member 'Christian_ALS_AnimBP_C_UpdateMovementValues::CallFunc_CalculateDiagonalScaleAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMovementValues, CallFunc_CalculateCrouchingPlayRate_PlayRate) == 0x000050, "Member 'Christian_ALS_AnimBP_C_UpdateMovementValues::CallFunc_CalculateCrouchingPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMovementValues, CallFunc_CalculateStrideBlend_ReturnValue) == 0x000058, "Member 'Christian_ALS_AnimBP_C_UpdateMovementValues::CallFunc_CalculateStrideBlend_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMovementValues, CallFunc_CalculateWalkRunBlend_WalkRunBlend) == 0x000060, "Member 'Christian_ALS_AnimBP_C_UpdateMovementValues::CallFunc_CalculateWalkRunBlend_WalkRunBlend' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMovementValues, CallFunc_CalculateVelocityBlend_ReturnValue) == 0x000068, "Member 'Christian_ALS_AnimBP_C_UpdateMovementValues::CallFunc_CalculateVelocityBlend_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMovementValues, CallFunc_InterpLeanAmount_ReturnValue) == 0x000078, "Member 'Christian_ALS_AnimBP_C_UpdateMovementValues::CallFunc_InterpLeanAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMovementValues, CallFunc_InterpVelocityBlend_ReturnValue) == 0x000080, "Member 'Christian_ALS_AnimBP_C_UpdateMovementValues::CallFunc_InterpVelocityBlend_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMovementValues, CallFunc_CalculateStandingPlayRate_PlayRate) == 0x000090, "Member 'Christian_ALS_AnimBP_C_UpdateMovementValues::CallFunc_CalculateStandingPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMovementValues, K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast) == 0x000098, "Member 'Christian_ALS_AnimBP_C_UpdateMovementValues::K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateMovementValues, K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast) == 0x00009C, "Member 'Christian_ALS_AnimBP_C_UpdateMovementValues::K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.UpdatePullTransform
// 0x0088 (0x0088 - 0x0000)
struct Christian_ALS_AnimBP_C_UpdatePullTransform final
{
public:
	class AActor*                                 Self2;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3034[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_UpdatePullTransform) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_UpdatePullTransform");
static_assert(sizeof(Christian_ALS_AnimBP_C_UpdatePullTransform) == 0x000088, "Wrong size on Christian_ALS_AnimBP_C_UpdatePullTransform");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdatePullTransform, Self2) == 0x000000, "Member 'Christian_ALS_AnimBP_C_UpdatePullTransform::Self2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdatePullTransform, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'Christian_ALS_AnimBP_C_UpdatePullTransform::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdatePullTransform, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Christian_ALS_AnimBP_C_UpdatePullTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdatePullTransform, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'Christian_ALS_AnimBP_C_UpdatePullTransform::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdatePullTransform, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000030, "Member 'Christian_ALS_AnimBP_C_UpdatePullTransform::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdatePullTransform, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000038, "Member 'Christian_ALS_AnimBP_C_UpdatePullTransform::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdatePullTransform, CallFunc_FindLookAtRotation_ReturnValue) == 0x000050, "Member 'Christian_ALS_AnimBP_C_UpdatePullTransform::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdatePullTransform, CallFunc_RInterpTo_ReturnValue) == 0x000068, "Member 'Christian_ALS_AnimBP_C_UpdatePullTransform::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdatePullTransform, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x000080, "Member 'Christian_ALS_AnimBP_C_UpdatePullTransform::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.UpdateRagdollValues
// 0x0030 (0x0030 - 0x0000)
struct Christian_ALS_AnimBP_C_UpdateRagdollValues final
{
public:
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_UpdateRagdollValues) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_UpdateRagdollValues");
static_assert(sizeof(Christian_ALS_AnimBP_C_UpdateRagdollValues) == 0x000030, "Wrong size on Christian_ALS_AnimBP_C_UpdateRagdollValues");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRagdollValues, CallFunc_GetOwningComponent_ReturnValue) == 0x000000, "Member 'Christian_ALS_AnimBP_C_UpdateRagdollValues::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRagdollValues, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000008, "Member 'Christian_ALS_AnimBP_C_UpdateRagdollValues::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRagdollValues, CallFunc_VSize_ReturnValue) == 0x000020, "Member 'Christian_ALS_AnimBP_C_UpdateRagdollValues::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRagdollValues, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Christian_ALS_AnimBP_C_UpdateRagdollValues::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.UpdateRightSpeed
// 0x0038 (0x0038 - 0x0000)
struct Christian_ALS_AnimBP_C_UpdateRightSpeed final
{
public:
	bool                                          Swim;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3035[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_UpdateRightSpeed) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_UpdateRightSpeed");
static_assert(sizeof(Christian_ALS_AnimBP_C_UpdateRightSpeed) == 0x000038, "Wrong size on Christian_ALS_AnimBP_C_UpdateRightSpeed");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRightSpeed, Swim) == 0x000000, "Member 'Christian_ALS_AnimBP_C_UpdateRightSpeed::Swim' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRightSpeed, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000008, "Member 'Christian_ALS_AnimBP_C_UpdateRightSpeed::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRightSpeed, CallFunc_GetRightVector_ReturnValue) == 0x000018, "Member 'Christian_ALS_AnimBP_C_UpdateRightSpeed::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRightSpeed, CallFunc_Dot_VectorVector_ReturnValue) == 0x000030, "Member 'Christian_ALS_AnimBP_C_UpdateRightSpeed::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.UpdateRotationValues
// 0x00B8 (0x00B8 - 0x0000)
struct Christian_ALS_AnimBP_C_UpdateRotationValues final
{
public:
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementDirection                            CallFunc_CalculateMovementDirection_ReturnValues;  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3036[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue_1;             // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_UpdateRotationValues) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_UpdateRotationValues");
static_assert(sizeof(Christian_ALS_AnimBP_C_UpdateRotationValues) == 0x0000B8, "Wrong size on Christian_ALS_AnimBP_C_UpdateRotationValues");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRotationValues, CallFunc_GetControlRotation_ReturnValue) == 0x000000, "Member 'Christian_ALS_AnimBP_C_UpdateRotationValues::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRotationValues, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000018, "Member 'Christian_ALS_AnimBP_C_UpdateRotationValues::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRotationValues, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000030, "Member 'Christian_ALS_AnimBP_C_UpdateRotationValues::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRotationValues, CallFunc_BreakRotator_Roll) == 0x000048, "Member 'Christian_ALS_AnimBP_C_UpdateRotationValues::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRotationValues, CallFunc_BreakRotator_Pitch) == 0x00004C, "Member 'Christian_ALS_AnimBP_C_UpdateRotationValues::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRotationValues, CallFunc_BreakRotator_Yaw) == 0x000050, "Member 'Christian_ALS_AnimBP_C_UpdateRotationValues::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRotationValues, CallFunc_CalculateMovementDirection_ReturnValues) == 0x000054, "Member 'Christian_ALS_AnimBP_C_UpdateRotationValues::CallFunc_CalculateMovementDirection_ReturnValues' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRotationValues, CallFunc_GetVectorValue_ReturnValue) == 0x000058, "Member 'Christian_ALS_AnimBP_C_UpdateRotationValues::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRotationValues, CallFunc_BreakVector_X) == 0x000070, "Member 'Christian_ALS_AnimBP_C_UpdateRotationValues::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRotationValues, CallFunc_BreakVector_Y) == 0x000078, "Member 'Christian_ALS_AnimBP_C_UpdateRotationValues::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRotationValues, CallFunc_BreakVector_Z) == 0x000080, "Member 'Christian_ALS_AnimBP_C_UpdateRotationValues::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRotationValues, CallFunc_GetVectorValue_ReturnValue_1) == 0x000088, "Member 'Christian_ALS_AnimBP_C_UpdateRotationValues::CallFunc_GetVectorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRotationValues, CallFunc_BreakVector_X_1) == 0x0000A0, "Member 'Christian_ALS_AnimBP_C_UpdateRotationValues::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRotationValues, CallFunc_BreakVector_Y_1) == 0x0000A8, "Member 'Christian_ALS_AnimBP_C_UpdateRotationValues::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateRotationValues, CallFunc_BreakVector_Z_1) == 0x0000B0, "Member 'Christian_ALS_AnimBP_C_UpdateRotationValues::CallFunc_BreakVector_Z_1' has a wrong offset!");

// Function Christian_ALS_AnimBP.Christian_ALS_AnimBP_C.UpdateSunAttraction
// 0x0080 (0x0080 - 0x0000)
struct Christian_ALS_AnimBP_C_UpdateSunAttraction final
{
public:
	class UObject*                                Param_Character;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBeingAttracted_Attracted;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3037[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Christian_ALS_AnimBP_C_UpdateSunAttraction) == 0x000008, "Wrong alignment on Christian_ALS_AnimBP_C_UpdateSunAttraction");
static_assert(sizeof(Christian_ALS_AnimBP_C_UpdateSunAttraction) == 0x000080, "Wrong size on Christian_ALS_AnimBP_C_UpdateSunAttraction");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateSunAttraction, Param_Character) == 0x000000, "Member 'Christian_ALS_AnimBP_C_UpdateSunAttraction::Param_Character' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateSunAttraction, K2Node_DynamicCast_AsBPI_Character) == 0x000008, "Member 'Christian_ALS_AnimBP_C_UpdateSunAttraction::K2Node_DynamicCast_AsBPI_Character' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateSunAttraction, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Christian_ALS_AnimBP_C_UpdateSunAttraction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateSunAttraction, CallFunc_IsBeingAttracted_Attracted) == 0x000019, "Member 'Christian_ALS_AnimBP_C_UpdateSunAttraction::CallFunc_IsBeingAttracted_Attracted' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateSunAttraction, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000020, "Member 'Christian_ALS_AnimBP_C_UpdateSunAttraction::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateSunAttraction, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Christian_ALS_AnimBP_C_UpdateSunAttraction::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateSunAttraction, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Christian_ALS_AnimBP_C_UpdateSunAttraction::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateSunAttraction, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000038, "Member 'Christian_ALS_AnimBP_C_UpdateSunAttraction::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateSunAttraction, CallFunc_MakeRotator_ReturnValue) == 0x000040, "Member 'Christian_ALS_AnimBP_C_UpdateSunAttraction::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateSunAttraction, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000058, "Member 'Christian_ALS_AnimBP_C_UpdateSunAttraction::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateSunAttraction, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000070, "Member 'Christian_ALS_AnimBP_C_UpdateSunAttraction::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateSunAttraction, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000074, "Member 'Christian_ALS_AnimBP_C_UpdateSunAttraction::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Christian_ALS_AnimBP_C_UpdateSunAttraction, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000078, "Member 'Christian_ALS_AnimBP_C_UpdateSunAttraction::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");

}

