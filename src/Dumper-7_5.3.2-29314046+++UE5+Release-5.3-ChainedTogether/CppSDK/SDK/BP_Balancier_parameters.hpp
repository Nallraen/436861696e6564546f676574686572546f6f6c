#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Balancier

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Balancier.BP_Balancier_C.DetectLeftOrRight
// 0x00E8 (0x00E8 - 0x0000)
struct BP_Balancier_C_DetectLeftOrRight final
{
public:
	double                                        RightBalanceOut;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LeftBalance;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RightBalance;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AA[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumPlayers_ReturnValue;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AB[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0078(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AC[0x2];                                     // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue_1;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Balancier_C_DetectLeftOrRight) == 0x000008, "Wrong alignment on BP_Balancier_C_DetectLeftOrRight");
static_assert(sizeof(BP_Balancier_C_DetectLeftOrRight) == 0x0000E8, "Wrong size on BP_Balancier_C_DetectLeftOrRight");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, RightBalanceOut) == 0x000000, "Member 'BP_Balancier_C_DetectLeftOrRight::RightBalanceOut' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, LeftBalance) == 0x000008, "Member 'BP_Balancier_C_DetectLeftOrRight::LeftBalance' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, RightBalance) == 0x000010, "Member 'BP_Balancier_C_DetectLeftOrRight::RightBalance' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_Balancier_C_DetectLeftOrRight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_Balancier_C_DetectLeftOrRight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_Balancier_C_DetectLeftOrRight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000028, "Member 'BP_Balancier_C_DetectLeftOrRight::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000040, "Member 'BP_Balancier_C_DetectLeftOrRight::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, CallFunc_GetNumPlayers_ReturnValue) == 0x000058, "Member 'BP_Balancier_C_DetectLeftOrRight::CallFunc_GetNumPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000060, "Member 'BP_Balancier_C_DetectLeftOrRight::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_Balancier_C_DetectLeftOrRight::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_Balancier_C_DetectLeftOrRight::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000078, "Member 'BP_Balancier_C_DetectLeftOrRight::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_Balancier_C_DetectLeftOrRight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_Balancier_C_DetectLeftOrRight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, CallFunc_IsOverlappingActor_ReturnValue) == 0x000094, "Member 'BP_Balancier_C_DetectLeftOrRight::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, CallFunc_Less_IntInt_ReturnValue) == 0x000095, "Member 'BP_Balancier_C_DetectLeftOrRight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, CallFunc_SelectFloat_ReturnValue) == 0x000098, "Member 'BP_Balancier_C_DetectLeftOrRight::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_Balancier_C_DetectLeftOrRight::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, CallFunc_SelectFloat_ReturnValue_1) == 0x0000A8, "Member 'BP_Balancier_C_DetectLeftOrRight::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'BP_Balancier_C_DetectLeftOrRight::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'BP_Balancier_C_DetectLeftOrRight::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, CallFunc_Vector_Distance_ReturnValue) == 0x0000D0, "Member 'BP_Balancier_C_DetectLeftOrRight::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, CallFunc_Vector_Distance_ReturnValue_1) == 0x0000D8, "Member 'BP_Balancier_C_DetectLeftOrRight::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_DetectLeftOrRight, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'BP_Balancier_C_DetectLeftOrRight::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_Balancier.BP_Balancier_C.ExecuteUbergraph_BP_Balancier
// 0x0158 (0x0158 - 0x0000)
struct BP_Balancier_C_ExecuteUbergraph_BP_Balancier final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSomeoneMantling_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AD[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AE[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_DetectLeftOrRight_RightBalanceOut;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0068(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Balancier_C_ExecuteUbergraph_BP_Balancier) == 0x000008, "Wrong alignment on BP_Balancier_C_ExecuteUbergraph_BP_Balancier");
static_assert(sizeof(BP_Balancier_C_ExecuteUbergraph_BP_Balancier) == 0x000158, "Wrong size on BP_Balancier_C_ExecuteUbergraph_BP_Balancier");
static_assert(offsetof(BP_Balancier_C_ExecuteUbergraph_BP_Balancier, EntryPoint) == 0x000000, "Member 'BP_Balancier_C_ExecuteUbergraph_BP_Balancier::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_ExecuteUbergraph_BP_Balancier, CallFunc_IsSomeoneMantling_ReturnValue) == 0x000004, "Member 'BP_Balancier_C_ExecuteUbergraph_BP_Balancier::CallFunc_IsSomeoneMantling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_ExecuteUbergraph_BP_Balancier, CallFunc_HasAuthority_ReturnValue) == 0x000005, "Member 'BP_Balancier_C_ExecuteUbergraph_BP_Balancier::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_ExecuteUbergraph_BP_Balancier, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_Balancier_C_ExecuteUbergraph_BP_Balancier::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_ExecuteUbergraph_BP_Balancier, CallFunc_DetectLeftOrRight_RightBalanceOut) == 0x000010, "Member 'BP_Balancier_C_ExecuteUbergraph_BP_Balancier::CallFunc_DetectLeftOrRight_RightBalanceOut' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_ExecuteUbergraph_BP_Balancier, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'BP_Balancier_C_ExecuteUbergraph_BP_Balancier::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_ExecuteUbergraph_BP_Balancier, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000020, "Member 'BP_Balancier_C_ExecuteUbergraph_BP_Balancier::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_ExecuteUbergraph_BP_Balancier, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000028, "Member 'BP_Balancier_C_ExecuteUbergraph_BP_Balancier::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_ExecuteUbergraph_BP_Balancier, CallFunc_FInterpTo_ReturnValue) == 0x000030, "Member 'BP_Balancier_C_ExecuteUbergraph_BP_Balancier::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_ExecuteUbergraph_BP_Balancier, CallFunc_MakeRotator_ReturnValue) == 0x000038, "Member 'BP_Balancier_C_ExecuteUbergraph_BP_Balancier::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_ExecuteUbergraph_BP_Balancier, CallFunc_RInterpTo_ReturnValue) == 0x000050, "Member 'BP_Balancier_C_ExecuteUbergraph_BP_Balancier::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_ExecuteUbergraph_BP_Balancier, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000068, "Member 'BP_Balancier_C_ExecuteUbergraph_BP_Balancier::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_ExecuteUbergraph_BP_Balancier, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x000150, "Member 'BP_Balancier_C_ExecuteUbergraph_BP_Balancier::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_ExecuteUbergraph_BP_Balancier, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000154, "Member 'BP_Balancier_C_ExecuteUbergraph_BP_Balancier::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");

// Function BP_Balancier.BP_Balancier_C.IsSomeoneMantling
// 0x0048 (0x0048 - 0x0000)
struct BP_Balancier_C_IsSomeoneMantling final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AF[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B0[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B1[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Balancier_C_IsSomeoneMantling) == 0x000008, "Wrong alignment on BP_Balancier_C_IsSomeoneMantling");
static_assert(sizeof(BP_Balancier_C_IsSomeoneMantling) == 0x000048, "Wrong size on BP_Balancier_C_IsSomeoneMantling");
static_assert(offsetof(BP_Balancier_C_IsSomeoneMantling, ReturnValue) == 0x000000, "Member 'BP_Balancier_C_IsSomeoneMantling::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_IsSomeoneMantling, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Balancier_C_IsSomeoneMantling::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_IsSomeoneMantling, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Balancier_C_IsSomeoneMantling::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_IsSomeoneMantling, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Balancier_C_IsSomeoneMantling::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_IsSomeoneMantling, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000010, "Member 'BP_Balancier_C_IsSomeoneMantling::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_IsSomeoneMantling, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_Balancier_C_IsSomeoneMantling::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_IsSomeoneMantling, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_Balancier_C_IsSomeoneMantling::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_IsSomeoneMantling, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_Balancier_C_IsSomeoneMantling::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_IsSomeoneMantling, K2Node_DynamicCast_AsBP_Character) == 0x000038, "Member 'BP_Balancier_C_IsSomeoneMantling::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_IsSomeoneMantling, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_Balancier_C_IsSomeoneMantling::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Balancier_C_IsSomeoneMantling, CallFunc_IsPlaying_ReturnValue) == 0x000041, "Member 'BP_Balancier_C_IsSomeoneMantling::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

// Function BP_Balancier.BP_Balancier_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Balancier_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Balancier_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Balancier_C_ReceiveTick");
static_assert(sizeof(BP_Balancier_C_ReceiveTick) == 0x000004, "Wrong size on BP_Balancier_C_ReceiveTick");
static_assert(offsetof(BP_Balancier_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Balancier_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

