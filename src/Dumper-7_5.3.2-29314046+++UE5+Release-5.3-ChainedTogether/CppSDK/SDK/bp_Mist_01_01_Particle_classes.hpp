#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: bp_Mist_01_01_Particle

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass bp_Mist_01_01_Particle.bp_Mist_01_01_Particle_C
// 0x0030 (0x02C8 - 0x0298)
class Abp_Mist_01_01_Particle_C final : public AActor
{
public:
	class UParticleSystemComponent*               Particle;                                          // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        ParticleTemplate;                                  // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Alpha;                                             // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"bp_Mist_01_01_Particle_C">();
	}
	static class Abp_Mist_01_01_Particle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<Abp_Mist_01_01_Particle_C>();
	}
};
static_assert(alignof(Abp_Mist_01_01_Particle_C) == 0x000008, "Wrong alignment on Abp_Mist_01_01_Particle_C");
static_assert(sizeof(Abp_Mist_01_01_Particle_C) == 0x0002C8, "Wrong size on Abp_Mist_01_01_Particle_C");
static_assert(offsetof(Abp_Mist_01_01_Particle_C, Particle) == 0x000298, "Member 'Abp_Mist_01_01_Particle_C::Particle' has a wrong offset!");
static_assert(offsetof(Abp_Mist_01_01_Particle_C, DefaultSceneRoot) == 0x0002A0, "Member 'Abp_Mist_01_01_Particle_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(Abp_Mist_01_01_Particle_C, ParticleTemplate) == 0x0002A8, "Member 'Abp_Mist_01_01_Particle_C::ParticleTemplate' has a wrong offset!");
static_assert(offsetof(Abp_Mist_01_01_Particle_C, Color) == 0x0002B0, "Member 'Abp_Mist_01_01_Particle_C::Color' has a wrong offset!");
static_assert(offsetof(Abp_Mist_01_01_Particle_C, Alpha) == 0x0002C0, "Member 'Abp_Mist_01_01_Particle_C::Alpha' has a wrong offset!");

}

