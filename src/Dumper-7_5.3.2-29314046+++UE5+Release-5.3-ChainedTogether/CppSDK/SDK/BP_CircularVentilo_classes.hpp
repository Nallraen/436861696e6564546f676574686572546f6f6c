#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CircularVentilo

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CircularVentilo.BP_CircularVentilo_C
// 0x0100 (0x0398 - 0x0298)
class ABP_CircularVentilo_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio;                                             // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cylinder2;                                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem7;                                   // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem5;                                   // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem6;                                   // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem4;                                   // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Detector3;                                         // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Detector2;                                         // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Detector1;                                         // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Detector;                                          // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem3;                                   // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem2;                                   // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem1;                                   // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UC_TickOptimizer_C*                     C_TickOptimizer;                                   // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ventilo3;                                          // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ventilo2;                                          // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ventilo1;                                          // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ventilo;                                           // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cylinder1;                                         // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cylinder;                                          // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   VentiloFrame3;                                     // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   VentiloFrame2;                                     // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   VentiloFrame1;                                     // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   VentiloFrame;                                      // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_pole_barbed_wire_a_01;                          // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RepRot;                                            // 0x0380(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)

public:
	void CustomEvent();
	void ExecuteUbergraph_BP_CircularVentilo(int32 EntryPoint);
	void OnRep_RepRot();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CircularVentilo_C">();
	}
	static class ABP_CircularVentilo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CircularVentilo_C>();
	}
};
static_assert(alignof(ABP_CircularVentilo_C) == 0x000008, "Wrong alignment on ABP_CircularVentilo_C");
static_assert(sizeof(ABP_CircularVentilo_C) == 0x000398, "Wrong size on ABP_CircularVentilo_C");
static_assert(offsetof(ABP_CircularVentilo_C, UberGraphFrame) == 0x000298, "Member 'ABP_CircularVentilo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, Audio) == 0x0002A0, "Member 'ABP_CircularVentilo_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, Cylinder2) == 0x0002A8, "Member 'ABP_CircularVentilo_C::Cylinder2' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, ParticleSystem7) == 0x0002B0, "Member 'ABP_CircularVentilo_C::ParticleSystem7' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, ParticleSystem5) == 0x0002B8, "Member 'ABP_CircularVentilo_C::ParticleSystem5' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, ParticleSystem6) == 0x0002C0, "Member 'ABP_CircularVentilo_C::ParticleSystem6' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, ParticleSystem4) == 0x0002C8, "Member 'ABP_CircularVentilo_C::ParticleSystem4' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, Detector3) == 0x0002D0, "Member 'ABP_CircularVentilo_C::Detector3' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, Detector2) == 0x0002D8, "Member 'ABP_CircularVentilo_C::Detector2' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, Detector1) == 0x0002E0, "Member 'ABP_CircularVentilo_C::Detector1' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, Detector) == 0x0002E8, "Member 'ABP_CircularVentilo_C::Detector' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, ParticleSystem3) == 0x0002F0, "Member 'ABP_CircularVentilo_C::ParticleSystem3' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, ParticleSystem2) == 0x0002F8, "Member 'ABP_CircularVentilo_C::ParticleSystem2' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, ParticleSystem1) == 0x000300, "Member 'ABP_CircularVentilo_C::ParticleSystem1' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, ParticleSystem) == 0x000308, "Member 'ABP_CircularVentilo_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, C_TickOptimizer) == 0x000310, "Member 'ABP_CircularVentilo_C::C_TickOptimizer' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, Ventilo3) == 0x000318, "Member 'ABP_CircularVentilo_C::Ventilo3' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, Ventilo2) == 0x000320, "Member 'ABP_CircularVentilo_C::Ventilo2' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, Ventilo1) == 0x000328, "Member 'ABP_CircularVentilo_C::Ventilo1' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, Ventilo) == 0x000330, "Member 'ABP_CircularVentilo_C::Ventilo' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, Cylinder1) == 0x000338, "Member 'ABP_CircularVentilo_C::Cylinder1' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, Cylinder) == 0x000340, "Member 'ABP_CircularVentilo_C::Cylinder' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, VentiloFrame3) == 0x000348, "Member 'ABP_CircularVentilo_C::VentiloFrame3' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, VentiloFrame2) == 0x000350, "Member 'ABP_CircularVentilo_C::VentiloFrame2' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, VentiloFrame1) == 0x000358, "Member 'ABP_CircularVentilo_C::VentiloFrame1' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, VentiloFrame) == 0x000360, "Member 'ABP_CircularVentilo_C::VentiloFrame' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, SM_pole_barbed_wire_a_01) == 0x000368, "Member 'ABP_CircularVentilo_C::SM_pole_barbed_wire_a_01' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, StaticMesh) == 0x000370, "Member 'ABP_CircularVentilo_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, DefaultSceneRoot) == 0x000378, "Member 'ABP_CircularVentilo_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CircularVentilo_C, RepRot) == 0x000380, "Member 'ABP_CircularVentilo_C::RepRot' has a wrong offset!");

}

