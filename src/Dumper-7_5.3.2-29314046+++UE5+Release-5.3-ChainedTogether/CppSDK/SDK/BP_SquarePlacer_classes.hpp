#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SquarePlacer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SquarePlacer.BP_SquarePlacer_C
// 0x0070 (0x0308 - 0x0298)
class ABP_SquarePlacer_C final : public AActor
{
public:
	class UHierarchicalInstancedStaticMeshComponent* HierarchicalInstancedStaticMesh;                   // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         Longueur;                                          // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Largeur;                                           // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x02B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	double                                        Spacing;                                           // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UStaticMesh*                            Mesh;                                              // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                RelativeScale;                                     // 0x02D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        LargeurOffset;                                     // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        LongueurOffset;                                    // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	ECollisionEnabled                             Collision;                                         // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void PlaceMesh(double RelativeTransform_Location_X, double Relative_Transform_Location_Y, const struct FRotator& Relative_Transform_Rotation);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SquarePlacer_C">();
	}
	static class ABP_SquarePlacer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SquarePlacer_C>();
	}
};
static_assert(alignof(ABP_SquarePlacer_C) == 0x000008, "Wrong alignment on ABP_SquarePlacer_C");
static_assert(sizeof(ABP_SquarePlacer_C) == 0x000308, "Wrong size on ABP_SquarePlacer_C");
static_assert(offsetof(ABP_SquarePlacer_C, HierarchicalInstancedStaticMesh) == 0x000298, "Member 'ABP_SquarePlacer_C::HierarchicalInstancedStaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_SquarePlacer_C, DefaultSceneRoot) == 0x0002A0, "Member 'ABP_SquarePlacer_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_SquarePlacer_C, Longueur) == 0x0002A8, "Member 'ABP_SquarePlacer_C::Longueur' has a wrong offset!");
static_assert(offsetof(ABP_SquarePlacer_C, Largeur) == 0x0002AC, "Member 'ABP_SquarePlacer_C::Largeur' has a wrong offset!");
static_assert(offsetof(ABP_SquarePlacer_C, Rotation) == 0x0002B0, "Member 'ABP_SquarePlacer_C::Rotation' has a wrong offset!");
static_assert(offsetof(ABP_SquarePlacer_C, Spacing) == 0x0002C8, "Member 'ABP_SquarePlacer_C::Spacing' has a wrong offset!");
static_assert(offsetof(ABP_SquarePlacer_C, Mesh) == 0x0002D0, "Member 'ABP_SquarePlacer_C::Mesh' has a wrong offset!");
static_assert(offsetof(ABP_SquarePlacer_C, RelativeScale) == 0x0002D8, "Member 'ABP_SquarePlacer_C::RelativeScale' has a wrong offset!");
static_assert(offsetof(ABP_SquarePlacer_C, LargeurOffset) == 0x0002F0, "Member 'ABP_SquarePlacer_C::LargeurOffset' has a wrong offset!");
static_assert(offsetof(ABP_SquarePlacer_C, LongueurOffset) == 0x0002F8, "Member 'ABP_SquarePlacer_C::LongueurOffset' has a wrong offset!");
static_assert(offsetof(ABP_SquarePlacer_C, Collision) == 0x000300, "Member 'ABP_SquarePlacer_C::Collision' has a wrong offset!");

}

