#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_WaterTank

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_WaterTank.B_WaterTank_C
// 0x00C8 (0x0360 - 0x0298)
class AB_WaterTank_C final : public AActor
{
public:
	class UStaticMeshComponent*                   Tank;                                              // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ladder;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Support;                                           // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         Support_Type;                                      // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_386B[0x4];                                     // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ScaleTank;                                         // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScaleHeightTank;                                   // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Support_Scale;                                     // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Support_Scale_Height;                              // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Tank_Material_Type;                                // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Tank_Rotation;                                     // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Roof_Material_Type;                                // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_386C[0x4];                                     // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             RoofMaterials;                                     // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UMaterialInterface*>             TankMaterials;                                     // 0x0300(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Support_Material_Type;                             // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_386D[0x4];                                     // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             SupportMaterials;                                  // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          base;                                              // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_386E[0x3];                                     // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Base_Material_Type;                                // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             BaseMaterials;                                     // 0x0330(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UStaticMeshComponent*                   BaseSM;                                            // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Ladder_Rotation;                                   // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ladder_Height_Offset;                              // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Snap_Location;                                     // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Snap_Rotation;                                     // 0x0351(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_386F[0x2];                                     // 0x0352(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Snap_Location_Unit_Grid;                           // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	int32                                         Snap_Location_Height_Grid;                         // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	int32                                         Snap_Rotation_Degrees;                             // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_WaterTank_C">();
	}
	static class AB_WaterTank_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_WaterTank_C>();
	}
};
static_assert(alignof(AB_WaterTank_C) == 0x000008, "Wrong alignment on AB_WaterTank_C");
static_assert(sizeof(AB_WaterTank_C) == 0x000360, "Wrong size on AB_WaterTank_C");
static_assert(offsetof(AB_WaterTank_C, Tank) == 0x000298, "Member 'AB_WaterTank_C::Tank' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, Ladder) == 0x0002A0, "Member 'AB_WaterTank_C::Ladder' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, Support) == 0x0002A8, "Member 'AB_WaterTank_C::Support' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, DefaultSceneRoot) == 0x0002B0, "Member 'AB_WaterTank_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, Support_Type) == 0x0002B8, "Member 'AB_WaterTank_C::Support_Type' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, ScaleTank) == 0x0002C0, "Member 'AB_WaterTank_C::ScaleTank' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, ScaleHeightTank) == 0x0002C8, "Member 'AB_WaterTank_C::ScaleHeightTank' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, Support_Scale) == 0x0002D0, "Member 'AB_WaterTank_C::Support_Scale' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, Support_Scale_Height) == 0x0002D8, "Member 'AB_WaterTank_C::Support_Scale_Height' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, Tank_Material_Type) == 0x0002E0, "Member 'AB_WaterTank_C::Tank_Material_Type' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, Tank_Rotation) == 0x0002E4, "Member 'AB_WaterTank_C::Tank_Rotation' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, Roof_Material_Type) == 0x0002E8, "Member 'AB_WaterTank_C::Roof_Material_Type' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, RoofMaterials) == 0x0002F0, "Member 'AB_WaterTank_C::RoofMaterials' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, TankMaterials) == 0x000300, "Member 'AB_WaterTank_C::TankMaterials' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, Support_Material_Type) == 0x000310, "Member 'AB_WaterTank_C::Support_Material_Type' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, SupportMaterials) == 0x000318, "Member 'AB_WaterTank_C::SupportMaterials' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, base) == 0x000328, "Member 'AB_WaterTank_C::base' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, Base_Material_Type) == 0x00032C, "Member 'AB_WaterTank_C::Base_Material_Type' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, BaseMaterials) == 0x000330, "Member 'AB_WaterTank_C::BaseMaterials' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, BaseSM) == 0x000340, "Member 'AB_WaterTank_C::BaseSM' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, Ladder_Rotation) == 0x000348, "Member 'AB_WaterTank_C::Ladder_Rotation' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, Ladder_Height_Offset) == 0x00034C, "Member 'AB_WaterTank_C::Ladder_Height_Offset' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, Snap_Location) == 0x000350, "Member 'AB_WaterTank_C::Snap_Location' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, Snap_Rotation) == 0x000351, "Member 'AB_WaterTank_C::Snap_Rotation' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, Snap_Location_Unit_Grid) == 0x000354, "Member 'AB_WaterTank_C::Snap_Location_Unit_Grid' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, Snap_Location_Height_Grid) == 0x000358, "Member 'AB_WaterTank_C::Snap_Location_Height_Grid' has a wrong offset!");
static_assert(offsetof(AB_WaterTank_C, Snap_Rotation_Degrees) == 0x00035C, "Member 'AB_WaterTank_C::Snap_Rotation_Degrees' has a wrong offset!");

}

