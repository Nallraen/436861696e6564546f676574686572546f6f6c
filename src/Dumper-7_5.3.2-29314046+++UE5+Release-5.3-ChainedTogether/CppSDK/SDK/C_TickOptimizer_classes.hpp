#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: C_TickOptimizer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass C_TickOptimizer.C_TickOptimizer_C
// 0x0080 (0x0120 - 0x00A0)
class UC_TickOptimizer_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        MaxRate;                                           // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class USceneComponent*                        ComponentToCheck;                                  // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        MinDistance;                                       // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        MaxDistance;                                       // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          TooFar;                                            // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CEC[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           StaticMeshesPhysics;                               // 0x00D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          UpdateCollision;                                   // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2CED[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MeshesCullDistance;                                // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        EmitterCullDistance;                               // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UBoxComponent*                          BoxTrigger;                                        // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Rate;                                              // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisableTickOptimiser;                              // 0x0108(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2CEE[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxTick02;                                         // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxTick01;                                         // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_C_TickOptimizer(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"C_TickOptimizer_C">();
	}
	static class UC_TickOptimizer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UC_TickOptimizer_C>();
	}
};
static_assert(alignof(UC_TickOptimizer_C) == 0x000008, "Wrong alignment on UC_TickOptimizer_C");
static_assert(sizeof(UC_TickOptimizer_C) == 0x000120, "Wrong size on UC_TickOptimizer_C");
static_assert(offsetof(UC_TickOptimizer_C, UberGraphFrame) == 0x0000A0, "Member 'UC_TickOptimizer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UC_TickOptimizer_C, MaxRate) == 0x0000A8, "Member 'UC_TickOptimizer_C::MaxRate' has a wrong offset!");
static_assert(offsetof(UC_TickOptimizer_C, ComponentToCheck) == 0x0000B0, "Member 'UC_TickOptimizer_C::ComponentToCheck' has a wrong offset!");
static_assert(offsetof(UC_TickOptimizer_C, MinDistance) == 0x0000B8, "Member 'UC_TickOptimizer_C::MinDistance' has a wrong offset!");
static_assert(offsetof(UC_TickOptimizer_C, MaxDistance) == 0x0000C0, "Member 'UC_TickOptimizer_C::MaxDistance' has a wrong offset!");
static_assert(offsetof(UC_TickOptimizer_C, TooFar) == 0x0000C8, "Member 'UC_TickOptimizer_C::TooFar' has a wrong offset!");
static_assert(offsetof(UC_TickOptimizer_C, StaticMeshesPhysics) == 0x0000D0, "Member 'UC_TickOptimizer_C::StaticMeshesPhysics' has a wrong offset!");
static_assert(offsetof(UC_TickOptimizer_C, UpdateCollision) == 0x0000E0, "Member 'UC_TickOptimizer_C::UpdateCollision' has a wrong offset!");
static_assert(offsetof(UC_TickOptimizer_C, MeshesCullDistance) == 0x0000E8, "Member 'UC_TickOptimizer_C::MeshesCullDistance' has a wrong offset!");
static_assert(offsetof(UC_TickOptimizer_C, EmitterCullDistance) == 0x0000F0, "Member 'UC_TickOptimizer_C::EmitterCullDistance' has a wrong offset!");
static_assert(offsetof(UC_TickOptimizer_C, BoxTrigger) == 0x0000F8, "Member 'UC_TickOptimizer_C::BoxTrigger' has a wrong offset!");
static_assert(offsetof(UC_TickOptimizer_C, Rate) == 0x000100, "Member 'UC_TickOptimizer_C::Rate' has a wrong offset!");
static_assert(offsetof(UC_TickOptimizer_C, DisableTickOptimiser) == 0x000108, "Member 'UC_TickOptimizer_C::DisableTickOptimiser' has a wrong offset!");
static_assert(offsetof(UC_TickOptimizer_C, MaxTick02) == 0x000110, "Member 'UC_TickOptimizer_C::MaxTick02' has a wrong offset!");
static_assert(offsetof(UC_TickOptimizer_C, MaxTick01) == 0x000118, "Member 'UC_TickOptimizer_C::MaxTick01' has a wrong offset!");

}

