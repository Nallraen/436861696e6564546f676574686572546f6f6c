#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PC_WithSettings

#include "Basic.hpp"

#include "PC_WithSettings_classes.hpp"
#include "PC_WithSettings_parameters.hpp"


namespace SDK
{

// Function PC_WithSettings.PC_WithSettings_C.Close Settings
// (Public, BlueprintCallable, BlueprintEvent)

void APC_WithSettings_C::Close_Settings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_WithSettings_C", "Close Settings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PC_WithSettings.PC_WithSettings_C.CloseSettingsMenu
// (Public, BlueprintCallable, BlueprintEvent)

void APC_WithSettings_C::CloseSettingsMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_WithSettings_C", "CloseSettingsMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PC_WithSettings.PC_WithSettings_C.ExecuteUbergraph_PC_WithSettings
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APC_WithSettings_C::ExecuteUbergraph_PC_WithSettings(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_WithSettings_C", "ExecuteUbergraph_PC_WithSettings");

	Params::PC_WithSettings_C_ExecuteUbergraph_PC_WithSettings Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PC_WithSettings.PC_WithSettings_C.InpActEvt_AnyKey_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APC_WithSettings_C::InpActEvt_AnyKey_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_WithSettings_C", "InpActEvt_AnyKey_K2Node_InputKeyEvent_0");

	Params::PC_WithSettings_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PC_WithSettings.PC_WithSettings_C.InpActEvt_Pause_K2Node_EnhancedInputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APC_WithSettings_C::InpActEvt_Pause_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_WithSettings_C", "InpActEvt_Pause_K2Node_EnhancedInputActionEvent_1");

	Params::PC_WithSettings_C_InpActEvt_Pause_K2Node_EnhancedInputActionEvent_1 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PC_WithSettings.PC_WithSettings_C.InpActEvt_PauseEditor_K2Node_EnhancedInputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APC_WithSettings_C::InpActEvt_PauseEditor_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_WithSettings_C", "InpActEvt_PauseEditor_K2Node_EnhancedInputActionEvent_0");

	Params::PC_WithSettings_C_InpActEvt_PauseEditor_K2Node_EnhancedInputActionEvent_0 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PC_WithSettings.PC_WithSettings_C.IsMouseKeyboard
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FKey                             Key                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool APC_WithSettings_C::IsMouseKeyboard(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_WithSettings_C", "IsMouseKeyboard");

	Params::PC_WithSettings_C_IsMouseKeyboard Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PC_WithSettings.PC_WithSettings_C.IsPlayerOnGamepad
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Gamepad                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APC_WithSettings_C::IsPlayerOnGamepad(bool* Gamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_WithSettings_C", "IsPlayerOnGamepad");

	Params::PC_WithSettings_C_IsPlayerOnGamepad Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Gamepad != nullptr)
		*Gamepad = Parms.Gamepad;
}


// Function PC_WithSettings.PC_WithSettings_C.OpenSettings
// (Public, BlueprintCallable, BlueprintEvent)

void APC_WithSettings_C::OpenSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_WithSettings_C", "OpenSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PC_WithSettings.PC_WithSettings_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void APC_WithSettings_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_WithSettings_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PC_WithSettings.PC_WithSettings_C.ShowControls
// (Public, BlueprintCallable, BlueprintEvent)

void APC_WithSettings_C::ShowControls()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_WithSettings_C", "ShowControls");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PC_WithSettings.PC_WithSettings_C.ToggleSettings
// (Private, BlueprintCallable, BlueprintEvent)

void APC_WithSettings_C::ToggleSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PC_WithSettings_C", "ToggleSettings");

	UObject::ProcessEvent(Func, nullptr);
}

}

