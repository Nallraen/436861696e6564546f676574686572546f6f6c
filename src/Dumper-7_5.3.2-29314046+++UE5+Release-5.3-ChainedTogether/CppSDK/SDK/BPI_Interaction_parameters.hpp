#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Interaction

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_Interaction.BPI_Interaction_C.CanBeUsed
// 0x0001 (0x0001 - 0x0000)
struct BPI_Interaction_C_CanBeUsed final
{
public:
	bool                                          Param_CanBeUsed;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Interaction_C_CanBeUsed) == 0x000001, "Wrong alignment on BPI_Interaction_C_CanBeUsed");
static_assert(sizeof(BPI_Interaction_C_CanBeUsed) == 0x000001, "Wrong size on BPI_Interaction_C_CanBeUsed");
static_assert(offsetof(BPI_Interaction_C_CanBeUsed, Param_CanBeUsed) == 0x000000, "Member 'BPI_Interaction_C_CanBeUsed::Param_CanBeUsed' has a wrong offset!");

// Function BPI_Interaction.BPI_Interaction_C.Detected
// 0x0010 (0x0010 - 0x0000)
struct BPI_Interaction_C_Detected final
{
public:
	bool                                          Param_Detected;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      PC;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Interaction_C_Detected) == 0x000008, "Wrong alignment on BPI_Interaction_C_Detected");
static_assert(sizeof(BPI_Interaction_C_Detected) == 0x000010, "Wrong size on BPI_Interaction_C_Detected");
static_assert(offsetof(BPI_Interaction_C_Detected, Param_Detected) == 0x000000, "Member 'BPI_Interaction_C_Detected::Param_Detected' has a wrong offset!");
static_assert(offsetof(BPI_Interaction_C_Detected, PC) == 0x000008, "Member 'BPI_Interaction_C_Detected::PC' has a wrong offset!");

// Function BPI_Interaction.BPI_Interaction_C.Use
// 0x0010 (0x0010 - 0x0000)
struct BPI_Interaction_C_Use final
{
public:
	class AController*                            Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ControlledActor;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Interaction_C_Use) == 0x000008, "Wrong alignment on BPI_Interaction_C_Use");
static_assert(sizeof(BPI_Interaction_C_Use) == 0x000010, "Wrong size on BPI_Interaction_C_Use");
static_assert(offsetof(BPI_Interaction_C_Use, Controller) == 0x000000, "Member 'BPI_Interaction_C_Use::Controller' has a wrong offset!");
static_assert(offsetof(BPI_Interaction_C_Use, ControlledActor) == 0x000008, "Member 'BPI_Interaction_C_Use::ControlledActor' has a wrong offset!");

}

