#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: bp_ThirdPersonCharacter_SF

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CrouchState_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass bp_ThirdPersonCharacter_SF.bp_ThirdPersonCharacter_SF_C
// 0x0110 (0x0790 - 0x0680)
#pragma pack(push, 0x1)
class alignas(0x10) Abp_ThirdPersonCharacter_SF_C : public ACharacter
{
public:
	uint8                                         Pad_3659[0x8];                                     // 0x0678(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0680(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USpotLightComponent*                    TPPFlashlight;                                     // 0x0688(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        FPP_Flashlight_Socket;                             // 0x0690(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    LagMinusSimulation;                                // 0x0698(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        BreathingSound;                                    // 0x06A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x06A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        ZoomSound;                                         // 0x06B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_PlayerInteractiveForce_01_01;                   // 0x06B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    FPPFlashlight;                                     // 0x06C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Flashlight_FPP;                                    // 0x06C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       FPP_Camera;                                        // 0x06D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    BoomMinusFPPCamera;                                // 0x06D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        FlashlightToggle;                                  // 0x06E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       FollowCamera;                                      // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    BoomMinusTPPCamera;                                // 0x06F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Flashlight_TPP;                                    // 0x06F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        TPP_Flashlight_Socket;                             // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         FOV_Zoom_Mouse_movement_scale_5C18371A41FDF36C6341CCB67AC7178E; // 0x0708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FOV_Zoom_Field_of_view_5C18371A41FDF36C6341CCB67AC7178E; // 0x070C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FOV_Zoom__Direction_5C18371A41FDF36C6341CCB67AC7178E; // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365A[0x7];                                     // 0x0711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FOV_Zoom;                                          // 0x0718(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        BaseTurnRate;                                      // 0x0720(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BaseLookUpRate;                                    // 0x0728(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FPP_ON;                                            // 0x0730(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365B[0x7];                                     // 0x0731(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Fade;                                              // 0x0738(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        MouseSensitivityScale;                             // 0x0740(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrouchState                                  CrouchState;                                       // 0x0748(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365C[0x7];                                     // 0x0749(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UThirdPerson_AnimBP_C*                  AnimationInstance;                                 // 0x0750(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ZoomInSound;                                       // 0x0758(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ZoomOutSound;                                      // 0x0760(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Azimuth_Change_Speed;                              // 0x0768(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Inclination_Change_Speed;                          // 0x0770(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance_Change_Speed;                             // 0x0778(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max_Distance_Offset;                               // 0x0780(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DrawLightsDebug();
	void ExecuteUbergraph_bp_ThirdPersonCharacter_SF(int32 EntryPoint);
	void FOV_Zoom__FinishedFunc();
	void FOV_Zoom__UpdateFunc();
	void GenerateSwayLocation(double Theta, double Phi, double Distance, struct FVector* Location);
	void GrabFlashlight();
	void InpActEvt_C_K2Node_InputKeyEvent_3(const struct FKey& Key);
	void InpActEvt_F_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void InpActEvt_LeftShift_K2Node_InputKeyEvent_5(const struct FKey& Key);
	void InpActEvt_LeftShift_K2Node_InputKeyEvent_6(const struct FKey& Key);
	void InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_Q_K2Node_InputKeyEvent_4(const struct FKey& Key);
	void InpTchEvt_Pressed(ETouchIndex FingerIndex, const struct FVector& Location);
	void InpTchEvt_Released(ETouchIndex FingerIndex, const struct FVector& Location);
	void LeftFootPrint();
	void OnBlendOut_3500E0704DACECB9A9622098B2061724(class FName NotifyName);
	void OnBlendOut_D240DADE4E59F3A5F567059F1C522A3B(class FName NotifyName);
	void OnCompleted_3500E0704DACECB9A9622098B2061724(class FName NotifyName);
	void OnCompleted_D240DADE4E59F3A5F567059F1C522A3B(class FName NotifyName);
	void OnInterrupted_3500E0704DACECB9A9622098B2061724(class FName NotifyName);
	void OnInterrupted_D240DADE4E59F3A5F567059F1C522A3B(class FName NotifyName);
	void OnNotifyBegin_3500E0704DACECB9A9622098B2061724(class FName NotifyName);
	void OnNotifyBegin_D240DADE4E59F3A5F567059F1C522A3B(class FName NotifyName);
	void OnNotifyEnd_3500E0704DACECB9A9622098B2061724(class FName NotifyName);
	void OnNotifyEnd_D240DADE4E59F3A5F567059F1C522A3B(class FName NotifyName);
	void OnStartZoom(ETimelineDirection ZoomDirection);
	void OnStopZoom(ETimelineDirection Zoom_Direction);
	void PlayZoomSound(class USoundBase* Param_ZoomSound);
	void PutAwayFlashlight();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void RightFootPrint();
	void SetLightVisible(bool TurnedOn);
	void SetMeshVisible(bool IsVisible);
	void SpawnFootDecal(const struct FVector& FootLocation, const struct FRotator& FootRotation, bool RightFoot);
	void StartBreathing();
	void StartCrouching();
	void StartedMoving();
	void StartIdleShake();
	void StartToStandUp();
	void StopBreathing();
	void StopIdleShake(bool Immediate);
	void StoppedMoving();
	void ToggleFlashlight();
	void UpdateBreathingSound();
	void UpdateCameraType();
	void UpdateCrouch(double DeltaTime);
	void UpdateFlashlight(bool IsOn);
	void UpdateHandSway(double DeltaTime, double AzimuthSpeed, double InclinationSpeed, double DistanceSpeed, double Max_Distance);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"bp_ThirdPersonCharacter_SF_C">();
	}
	static class Abp_ThirdPersonCharacter_SF_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<Abp_ThirdPersonCharacter_SF_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(Abp_ThirdPersonCharacter_SF_C) == 0x000010, "Wrong alignment on Abp_ThirdPersonCharacter_SF_C");
static_assert(sizeof(Abp_ThirdPersonCharacter_SF_C) == 0x000790, "Wrong size on Abp_ThirdPersonCharacter_SF_C");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, UberGraphFrame) == 0x000680, "Member 'Abp_ThirdPersonCharacter_SF_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, TPPFlashlight) == 0x000688, "Member 'Abp_ThirdPersonCharacter_SF_C::TPPFlashlight' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, FPP_Flashlight_Socket) == 0x000690, "Member 'Abp_ThirdPersonCharacter_SF_C::FPP_Flashlight_Socket' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, LagMinusSimulation) == 0x000698, "Member 'Abp_ThirdPersonCharacter_SF_C::LagMinusSimulation' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, BreathingSound) == 0x0006A0, "Member 'Abp_ThirdPersonCharacter_SF_C::BreathingSound' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, Scene) == 0x0006A8, "Member 'Abp_ThirdPersonCharacter_SF_C::Scene' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, ZoomSound) == 0x0006B0, "Member 'Abp_ThirdPersonCharacter_SF_C::ZoomSound' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, BP_PlayerInteractiveForce_01_01) == 0x0006B8, "Member 'Abp_ThirdPersonCharacter_SF_C::BP_PlayerInteractiveForce_01_01' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, FPPFlashlight) == 0x0006C0, "Member 'Abp_ThirdPersonCharacter_SF_C::FPPFlashlight' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, Flashlight_FPP) == 0x0006C8, "Member 'Abp_ThirdPersonCharacter_SF_C::Flashlight_FPP' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, FPP_Camera) == 0x0006D0, "Member 'Abp_ThirdPersonCharacter_SF_C::FPP_Camera' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, BoomMinusFPPCamera) == 0x0006D8, "Member 'Abp_ThirdPersonCharacter_SF_C::BoomMinusFPPCamera' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, FlashlightToggle) == 0x0006E0, "Member 'Abp_ThirdPersonCharacter_SF_C::FlashlightToggle' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, FollowCamera) == 0x0006E8, "Member 'Abp_ThirdPersonCharacter_SF_C::FollowCamera' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, BoomMinusTPPCamera) == 0x0006F0, "Member 'Abp_ThirdPersonCharacter_SF_C::BoomMinusTPPCamera' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, Flashlight_TPP) == 0x0006F8, "Member 'Abp_ThirdPersonCharacter_SF_C::Flashlight_TPP' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, TPP_Flashlight_Socket) == 0x000700, "Member 'Abp_ThirdPersonCharacter_SF_C::TPP_Flashlight_Socket' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, FOV_Zoom_Mouse_movement_scale_5C18371A41FDF36C6341CCB67AC7178E) == 0x000708, "Member 'Abp_ThirdPersonCharacter_SF_C::FOV_Zoom_Mouse_movement_scale_5C18371A41FDF36C6341CCB67AC7178E' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, FOV_Zoom_Field_of_view_5C18371A41FDF36C6341CCB67AC7178E) == 0x00070C, "Member 'Abp_ThirdPersonCharacter_SF_C::FOV_Zoom_Field_of_view_5C18371A41FDF36C6341CCB67AC7178E' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, FOV_Zoom__Direction_5C18371A41FDF36C6341CCB67AC7178E) == 0x000710, "Member 'Abp_ThirdPersonCharacter_SF_C::FOV_Zoom__Direction_5C18371A41FDF36C6341CCB67AC7178E' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, FOV_Zoom) == 0x000718, "Member 'Abp_ThirdPersonCharacter_SF_C::FOV_Zoom' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, BaseTurnRate) == 0x000720, "Member 'Abp_ThirdPersonCharacter_SF_C::BaseTurnRate' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, BaseLookUpRate) == 0x000728, "Member 'Abp_ThirdPersonCharacter_SF_C::BaseLookUpRate' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, FPP_ON) == 0x000730, "Member 'Abp_ThirdPersonCharacter_SF_C::FPP_ON' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, Fade) == 0x000738, "Member 'Abp_ThirdPersonCharacter_SF_C::Fade' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, MouseSensitivityScale) == 0x000740, "Member 'Abp_ThirdPersonCharacter_SF_C::MouseSensitivityScale' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, CrouchState) == 0x000748, "Member 'Abp_ThirdPersonCharacter_SF_C::CrouchState' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, AnimationInstance) == 0x000750, "Member 'Abp_ThirdPersonCharacter_SF_C::AnimationInstance' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, ZoomInSound) == 0x000758, "Member 'Abp_ThirdPersonCharacter_SF_C::ZoomInSound' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, ZoomOutSound) == 0x000760, "Member 'Abp_ThirdPersonCharacter_SF_C::ZoomOutSound' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, Azimuth_Change_Speed) == 0x000768, "Member 'Abp_ThirdPersonCharacter_SF_C::Azimuth_Change_Speed' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, Inclination_Change_Speed) == 0x000770, "Member 'Abp_ThirdPersonCharacter_SF_C::Inclination_Change_Speed' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, Distance_Change_Speed) == 0x000778, "Member 'Abp_ThirdPersonCharacter_SF_C::Distance_Change_Speed' has a wrong offset!");
static_assert(offsetof(Abp_ThirdPersonCharacter_SF_C, Max_Distance_Offset) == 0x000780, "Member 'Abp_ThirdPersonCharacter_SF_C::Max_Distance_Offset' has a wrong offset!");

}

