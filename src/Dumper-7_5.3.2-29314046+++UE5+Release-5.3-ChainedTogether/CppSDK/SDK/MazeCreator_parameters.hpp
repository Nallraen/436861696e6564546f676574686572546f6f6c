#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MazeCreator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function MazeCreator.MazeCreator_C.Add Floor
// 0x01E0 (0x01E0 - 0x0000)
struct MazeCreator_C_Add_Floor final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36E8[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36E9[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36EA[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36EB[0xE];                                     // 0x0162(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0170(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          CallFunc_AddComponent_ReturnValue;                 // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MazeCreator_C_Add_Floor) == 0x000010, "Wrong alignment on MazeCreator_C_Add_Floor");
static_assert(sizeof(MazeCreator_C_Add_Floor) == 0x0001E0, "Wrong size on MazeCreator_C_Add_Floor");
static_assert(offsetof(MazeCreator_C_Add_Floor, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'MazeCreator_C_Add_Floor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'MazeCreator_C_Add_Floor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_MakeVector_ReturnValue) == 0x000008, "Member 'MazeCreator_C_Add_Floor::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'MazeCreator_C_Add_Floor::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'MazeCreator_C_Add_Floor::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_Multiply_IntInt_ReturnValue) == 0x000030, "Member 'MazeCreator_C_Add_Floor::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000038, "Member 'MazeCreator_C_Add_Floor::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'MazeCreator_C_Add_Floor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_SelectVector_ReturnValue) == 0x000048, "Member 'MazeCreator_C_Add_Floor::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000060, "Member 'MazeCreator_C_Add_Floor::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_MakeVector_ReturnValue_1) == 0x000068, "Member 'MazeCreator_C_Add_Floor::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000080, "Member 'MazeCreator_C_Add_Floor::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000088, "Member 'MazeCreator_C_Add_Floor::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'MazeCreator_C_Add_Floor::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A8, "Member 'MazeCreator_C_Add_Floor::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, Temp_int_Array_Index_Variable) == 0x0000C0, "Member 'MazeCreator_C_Add_Floor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x0000C8, "Member 'MazeCreator_C_Add_Floor::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'MazeCreator_C_Add_Floor::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_MakeVector_ReturnValue_2) == 0x0000D8, "Member 'MazeCreator_C_Add_Floor::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_MakeTransform_ReturnValue) == 0x0000F0, "Member 'MazeCreator_C_Add_Floor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_Array_Get_Item) == 0x000150, "Member 'MazeCreator_C_Add_Floor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_AddInstance_ReturnValue) == 0x000158, "Member 'MazeCreator_C_Add_Floor::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_Array_Length_ReturnValue) == 0x00015C, "Member 'MazeCreator_C_Add_Floor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_Less_IntInt_ReturnValue) == 0x000160, "Member 'MazeCreator_C_Add_Floor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_SetStaticMesh_ReturnValue) == 0x000161, "Member 'MazeCreator_C_Add_Floor::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, Temp_struct_Variable) == 0x000170, "Member 'MazeCreator_C_Add_Floor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Add_Floor, CallFunc_AddComponent_ReturnValue) == 0x0001D0, "Member 'MazeCreator_C_Add_Floor::CallFunc_AddComponent_ReturnValue' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.Corner is Inside Maze?
// 0x0050 (0x0050 - 0x0000)
struct MazeCreator_C_Corner_is_Inside_Maze_ final
{
public:
	struct FVector2D                              Corner_Location;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return_Value;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36EC[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36ED[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MazeCreator_C_Corner_is_Inside_Maze_) == 0x000008, "Wrong alignment on MazeCreator_C_Corner_is_Inside_Maze_");
static_assert(sizeof(MazeCreator_C_Corner_is_Inside_Maze_) == 0x000050, "Wrong size on MazeCreator_C_Corner_is_Inside_Maze_");
static_assert(offsetof(MazeCreator_C_Corner_is_Inside_Maze_, Corner_Location) == 0x000000, "Member 'MazeCreator_C_Corner_is_Inside_Maze_::Corner_Location' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Corner_is_Inside_Maze_, Return_Value) == 0x000010, "Member 'MazeCreator_C_Corner_is_Inside_Maze_::Return_Value' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Corner_is_Inside_Maze_, CallFunc_BreakVector2D_X) == 0x000018, "Member 'MazeCreator_C_Corner_is_Inside_Maze_::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Corner_is_Inside_Maze_, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'MazeCreator_C_Corner_is_Inside_Maze_::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Corner_is_Inside_Maze_, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'MazeCreator_C_Corner_is_Inside_Maze_::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Corner_is_Inside_Maze_, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'MazeCreator_C_Corner_is_Inside_Maze_::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Corner_is_Inside_Maze_, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'MazeCreator_C_Corner_is_Inside_Maze_::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Corner_is_Inside_Maze_, CallFunc_FFloor_ReturnValue) == 0x000040, "Member 'MazeCreator_C_Corner_is_Inside_Maze_::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Corner_is_Inside_Maze_, CallFunc_FFloor_ReturnValue_1) == 0x000044, "Member 'MazeCreator_C_Corner_is_Inside_Maze_::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Corner_is_Inside_Maze_, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'MazeCreator_C_Corner_is_Inside_Maze_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Corner_is_Inside_Maze_, CallFunc_Less_IntInt_ReturnValue_1) == 0x000049, "Member 'MazeCreator_C_Corner_is_Inside_Maze_::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Corner_is_Inside_Maze_, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00004A, "Member 'MazeCreator_C_Corner_is_Inside_Maze_::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Corner_is_Inside_Maze_, CallFunc_BooleanAND_ReturnValue) == 0x00004B, "Member 'MazeCreator_C_Corner_is_Inside_Maze_::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Corner_is_Inside_Maze_, CallFunc_BooleanAND_ReturnValue_1) == 0x00004C, "Member 'MazeCreator_C_Corner_is_Inside_Maze_::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Corner_is_Inside_Maze_, CallFunc_BooleanAND_ReturnValue_2) == 0x00004D, "Member 'MazeCreator_C_Corner_is_Inside_Maze_::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.ExecuteUbergraph_MazeCreator
// 0x0800 (0x0800 - 0x0000)
struct MazeCreator_C_ExecuteUbergraph_MazeCreator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36EE[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36EF[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Total_Outer_Edges_Return_Value;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36F0[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_3;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_3;                   // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_3;                    // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_3;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36F1[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_2;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_2;                   // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_2;                    // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_2;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36F2[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Get_Adjacent_Unvisited_Cells_Adjacent_Cell_Indices; // 0x00A0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Get_Adjacent_Unvisited_Cells_Return_Value; // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36F3[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1; // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue_2; // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36F4[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Get_Indices_to_Create_Room_Cell_Indices;  // 0x00E8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Get_Indices_to_Create_Room_Old_Cell;      // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Indices_to_Create_Room_Old_Width;     // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Indices_to_Create_Room_Old_Height;    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36F5[0x3];                                     // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      CallFunc_Remove_Corner_Pieces_in_Range_Removed_Corners; // 0x0108(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36F6[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36F7[0x3];                                     // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Array_Get_Item_2;                         // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36F8[0x3];                                     // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_1;          // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_1;                    // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_1;               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep_1;                   // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36F9[0x3];                                     // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult_1;                  // 0x01A8(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_MathExpression_ReturnValue;                 // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36FA[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36FB[0x3];                                     // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x02D0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_36FC[0x8];                                     // 0x03B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x03C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36FD[0x4];                                     // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Get_Adjacent_Visited_Cells_Adjacent_Cell_Indices; // 0x0438(0x0010)(ReferenceParm)
	bool                                          CallFunc_Get_Adjacent_Visited_Cells_Return_Value;  // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36FE[0x3];                                     // 0x0449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36FF[0x3];                                     // 0x0455(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x045C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3700[0x3];                                     // 0x045D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue_3; // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_4;                         // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0468(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3701[0x4];                                     // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Array_Get_Item_5;                         // 0x0498(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x04AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3702[0x3];                                     // 0x04AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3703[0x8];                                     // 0x04E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x04F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue_1;                // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x055C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0560(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0572(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0573(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0574(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Rectangle_Edge_is_Vertical__Is_Vertical_; // 0x0575(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3704[0x2];                                     // 0x0576(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Rectangle_Edge_is_Vertical__Index_Relative_To_Side; // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3705[0x3];                                     // 0x0581(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3706[0x7];                                     // 0x0599(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3707[0x4];                                     // 0x05B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x05B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_2;          // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_3;          // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue_1;               // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue_2;               // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_6;                // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_7;                // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0648(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3708[0x7];                                     // 0x0659(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue_1;      // 0x0660(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue_1;              // 0x0678(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3709[0xC];                                     // 0x0694(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x06A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue_2;      // 0x0700(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue_2;                // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_370A[0x4];                                     // 0x071C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0720(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0738(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0750(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CallFunc_AddComponent_ReturnValue;                 // 0x07B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x07B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x07C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x07CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_Vector2DToVector_Z_ImplicitCast;     // 0x07DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_Vector2DToVector_Z_ImplicitCast_1;   // 0x07F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MazeCreator_C_ExecuteUbergraph_MazeCreator) == 0x000010, "Wrong alignment on MazeCreator_C_ExecuteUbergraph_MazeCreator");
static_assert(sizeof(MazeCreator_C_ExecuteUbergraph_MazeCreator) == 0x000800, "Wrong size on MazeCreator_C_ExecuteUbergraph_MazeCreator");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, EntryPoint) == 0x000000, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::EntryPoint' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, Temp_bool_Variable) == 0x00001C, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Not_PreBool_ReturnValue) == 0x00001D, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Get_Total_Outer_Edges_Return_Value) == 0x000048, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Get_Total_Outer_Edges_Return_Value' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Subtract_IntInt_ReturnValue) == 0x000050, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, Temp_int_Loop_Counter_Variable_1) == 0x000054, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Add_IntInt_ReturnValue_2) == 0x000058, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CustomEvent_OverlappedComponent_3) == 0x000060, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CustomEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CustomEvent_OtherActor_3) == 0x000068, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CustomEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CustomEvent_OtherComp_3) == 0x000070, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CustomEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CustomEvent_OtherBodyIndex_3) == 0x000078, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CustomEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CustomEvent_OverlappedComponent_2) == 0x000080, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CustomEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CustomEvent_OtherActor_2) == 0x000088, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CustomEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CustomEvent_OtherComp_2) == 0x000090, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CustomEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CustomEvent_OtherBodyIndex_2) == 0x000098, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CustomEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Get_Adjacent_Unvisited_Cells_Adjacent_Cell_Indices) == 0x0000A0, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Get_Adjacent_Unvisited_Cells_Adjacent_Cell_Indices' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Get_Adjacent_Unvisited_Cells_Return_Value) == 0x0000B0, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Get_Adjacent_Unvisited_Cells_Return_Value' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000B8, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, Temp_int_Array_Index_Variable_1) == 0x0000BC, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Array_Length_ReturnValue_1) == 0x0000C0, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000C4, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_RandomIntegerInRangeFromStream_ReturnValue) == 0x0000C8, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_RandomIntegerInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Array_Get_Item) == 0x0000CC, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x0000D0, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1) == 0x0000D4, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_RandomIntegerInRangeFromStream_ReturnValue_2) == 0x0000D8, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_RandomIntegerInRangeFromStream_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Get_Indices_to_Create_Room_Cell_Indices) == 0x0000E8, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Get_Indices_to_Create_Room_Cell_Indices' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Get_Indices_to_Create_Room_Old_Cell) == 0x0000F8, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Get_Indices_to_Create_Room_Old_Cell' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Get_Indices_to_Create_Room_Old_Width) == 0x0000FC, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Get_Indices_to_Create_Room_Old_Width' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Get_Indices_to_Create_Room_Old_Height) == 0x000100, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Get_Indices_to_Create_Room_Old_Height' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000104, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Remove_Corner_Pieces_in_Range_Removed_Corners) == 0x000108, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Remove_Corner_Pieces_in_Range_Removed_Corners' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_BooleanAND_ReturnValue) == 0x000118, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Array_Get_Item_1) == 0x00011C, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Array_Length_ReturnValue_2) == 0x000120, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Less_IntInt_ReturnValue) == 0x000124, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Array_Get_Item_2) == 0x000128, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_BreakVector2D_X) == 0x000138, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_BreakVector2D_Y) == 0x000140, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Array_Length_ReturnValue_3) == 0x000148, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Less_IntInt_ReturnValue_1) == 0x00014C, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000150, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_MakeVector_ReturnValue_1) == 0x000158, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_MakeVector_ReturnValue_2) == 0x000170, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CustomEvent_OverlappedComponent_1) == 0x000188, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CustomEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CustomEvent_OtherActor_1) == 0x000190, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CustomEvent_OtherComp_1) == 0x000198, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CustomEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CustomEvent_OtherBodyIndex_1) == 0x0001A0, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CustomEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CustomEvent_bFromSweep_1) == 0x0001A4, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CustomEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CustomEvent_SweepResult_1) == 0x0001A8, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CustomEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_MathExpression_ReturnValue) == 0x000290, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_SelectRotator_ReturnValue) == 0x000298, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CustomEvent_OverlappedComponent) == 0x0002B0, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CustomEvent_OtherActor) == 0x0002B8, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CustomEvent_OtherComp) == 0x0002C0, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CustomEvent_OtherBodyIndex) == 0x0002C8, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CustomEvent_bFromSweep) == 0x0002CC, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CustomEvent_SweepResult) == 0x0002D0, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_MakeTransform_ReturnValue) == 0x0003C0, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_AddInstance_ReturnValue) == 0x000420, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, Temp_int_Loop_Counter_Variable_2) == 0x000424, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Add_IntInt_ReturnValue_3) == 0x000428, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, Temp_int_Variable) == 0x00042C, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Array_Get_Item_3) == 0x000430, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Get_Adjacent_Visited_Cells_Adjacent_Cell_Indices) == 0x000438, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Get_Adjacent_Visited_Cells_Adjacent_Cell_Indices' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Get_Adjacent_Visited_Cells_Return_Value) == 0x000448, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Get_Adjacent_Visited_Cells_Return_Value' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Add_IntInt_ReturnValue_4) == 0x00044C, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Array_Length_ReturnValue_4) == 0x000450, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000454, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000458, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_BooleanAND_ReturnValue_1) == 0x00045C, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_RandomIntegerInRangeFromStream_ReturnValue_3) == 0x000460, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_RandomIntegerInRangeFromStream_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Array_Get_Item_4) == 0x000464, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CreateDelegate_OutputDelegate_1) == 0x000468, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000478, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, Temp_int_Array_Index_Variable_2) == 0x000490, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Array_Get_Item_5) == 0x000498, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Array_Length_ReturnValue_5) == 0x0004A8, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Less_IntInt_ReturnValue_2) == 0x0004AC, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0004B0, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x0004B8, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_MakeVector_ReturnValue_3) == 0x0004D0, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_MakeTransform_ReturnValue_1) == 0x0004F0, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_AddInstance_ReturnValue_1) == 0x000550, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_AddInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, Temp_int_Variable_1) == 0x000554, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Add_IntInt_ReturnValue_5) == 0x000558, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, Temp_int_Variable_2) == 0x00055C, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CreateDelegate_OutputDelegate_2) == 0x000560, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000570, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000571, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_BooleanOR_ReturnValue) == 0x000572, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Less_IntInt_ReturnValue_3) == 0x000573, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_BooleanAND_ReturnValue_2) == 0x000574, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Rectangle_Edge_is_Vertical__Is_Vertical_) == 0x000575, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Rectangle_Edge_is_Vertical__Is_Vertical_' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Rectangle_Edge_is_Vertical__Index_Relative_To_Side) == 0x000578, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Rectangle_Edge_is_Vertical__Index_Relative_To_Side' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_SelectInt_ReturnValue) == 0x00057C, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000580, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000584, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_SelectInt_ReturnValue_1) == 0x000588, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x00058C, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000590, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000598, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_SelectFloat_ReturnValue) == 0x0005A0, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_SelectFloat_ReturnValue_1) == 0x0005A8, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Add_IntInt_ReturnValue_6) == 0x0005B0, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_MakeVector2D_ReturnValue) == 0x0005B8, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x0005C8, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0005D0, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0005D8, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_SelectFloat_ReturnValue_2) == 0x0005E0, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0005E8, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Multiply_IntFloat_ReturnValue_2) == 0x0005F0, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Multiply_IntFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_SelectFloat_ReturnValue_3) == 0x0005F8, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Multiply_IntFloat_ReturnValue_3) == 0x000600, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Multiply_IntFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_MathExpression_ReturnValue_1) == 0x000608, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_MathExpression_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_SelectFloat_ReturnValue_4) == 0x000610, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_MathExpression_ReturnValue_2) == 0x000618, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_MathExpression_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_SelectFloat_ReturnValue_5) == 0x000620, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_SelectFloat_ReturnValue_6) == 0x000628, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000630, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_SelectFloat_ReturnValue_7) == 0x000638, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x000640, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_MakeVector2D_ReturnValue_1) == 0x000648, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000658, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Conv_Vector2DToVector_ReturnValue_1) == 0x000660, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Conv_Vector2DToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_SelectRotator_ReturnValue_1) == 0x000678, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_SelectRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Array_Add_ReturnValue) == 0x000690, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_MakeTransform_ReturnValue_2) == 0x0006A0, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Conv_Vector2DToVector_ReturnValue_2) == 0x000700, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Conv_Vector2DToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_AddInstance_ReturnValue_2) == 0x000718, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_AddInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Add_VectorVector_ReturnValue) == 0x000720, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000738, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_MakeTransform_ReturnValue_3) == 0x000750, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_AddComponent_ReturnValue) == 0x0007B0, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0007B8, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Array_Add_ReturnValue_1) == 0x0007C8, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, K2Node_CreateDelegate_OutputDelegate_3) == 0x0007CC, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Conv_Vector2DToVector_Z_ImplicitCast) == 0x0007DC, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Conv_Vector2DToVector_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x0007E0, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0007E8, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_ExecuteUbergraph_MazeCreator, CallFunc_Conv_Vector2DToVector_Z_ImplicitCast_1) == 0x0007F0, "Member 'MazeCreator_C_ExecuteUbergraph_MazeCreator::CallFunc_Conv_Vector2DToVector_Z_ImplicitCast_1' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.Get Adjacent Unvisited Cells
// 0x0088 (0x0088 - 0x0000)
struct MazeCreator_C_Get_Adjacent_Unvisited_Cells final
{
public:
	int32                                         Cell_Index;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_370B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Adjacent_Cell_Indices;                             // 0x0008(0x0010)(Parm, OutParm)
	bool                                          Return_Value;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_370C[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Temp_Cells;                                        // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Get_Cell_X___Y_X;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Cell_X___Y_Y;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Cell_X___Y_X_1;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Cell_X___Y_Y_1;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_370D[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Cell_Index_Index;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Cell_Index_Index_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Cell_Index_Index_2;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_370E[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Cell_Index_Index_3;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_370F[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_3;             // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MazeCreator_C_Get_Adjacent_Unvisited_Cells) == 0x000008, "Wrong alignment on MazeCreator_C_Get_Adjacent_Unvisited_Cells");
static_assert(sizeof(MazeCreator_C_Get_Adjacent_Unvisited_Cells) == 0x000088, "Wrong size on MazeCreator_C_Get_Adjacent_Unvisited_Cells");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, Cell_Index) == 0x000000, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::Cell_Index' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, Adjacent_Cell_Indices) == 0x000008, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::Adjacent_Cell_Indices' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, Return_Value) == 0x000018, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::Return_Value' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, Temp_Cells) == 0x000020, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::Temp_Cells' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Get_Cell_X___Y_X) == 0x000030, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Get_Cell_X___Y_X' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Get_Cell_X___Y_Y) == 0x000034, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Get_Cell_X___Y_Y' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Get_Cell_X___Y_X_1) == 0x000038, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Get_Cell_X___Y_X_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Get_Cell_X___Y_Y_1) == 0x00003C, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Get_Cell_X___Y_Y_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000044, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000048, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Get_Cell_Index_Index) == 0x00004C, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Get_Cell_Index_Index' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Get_Cell_Index_Index_1) == 0x000050, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Get_Cell_Index_Index_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Get_Cell_Index_Index_2) == 0x00005C, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Get_Cell_Index_Index_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Get_Cell_Index_Index_3) == 0x000064, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Get_Cell_Index_Index_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Greater_IntInt_ReturnValue) == 0x000070, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Array_Add_ReturnValue_1) == 0x000074, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Array_Add_ReturnValue_2) == 0x000078, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Array_Add_ReturnValue_3) == 0x00007C, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Array_Contains_ReturnValue) == 0x000080, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Array_Contains_ReturnValue_1) == 0x000081, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_BooleanAND_ReturnValue) == 0x000082, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Array_Contains_ReturnValue_2) == 0x000083, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_BooleanAND_ReturnValue_1) == 0x000084, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Unvisited_Cells, CallFunc_Array_Contains_ReturnValue_3) == 0x000085, "Member 'MazeCreator_C_Get_Adjacent_Unvisited_Cells::CallFunc_Array_Contains_ReturnValue_3' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.Get Adjacent Visited Cells
// 0x0088 (0x0088 - 0x0000)
struct MazeCreator_C_Get_Adjacent_Visited_Cells final
{
public:
	int32                                         Cell_Index;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3710[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Adjacent_Cell_Indices;                             // 0x0008(0x0010)(Parm, OutParm)
	bool                                          Return_Value;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3711[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Temp_Cells;                                        // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Get_Cell_X___Y_X;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Cell_X___Y_Y;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Cell_X___Y_X_1;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Cell_X___Y_Y_1;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3712[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Cell_Index_Index;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Cell_Index_Index_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Cell_Index_Index_2;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3713[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Cell_Index_Index_3;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3714[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_3;             // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MazeCreator_C_Get_Adjacent_Visited_Cells) == 0x000008, "Wrong alignment on MazeCreator_C_Get_Adjacent_Visited_Cells");
static_assert(sizeof(MazeCreator_C_Get_Adjacent_Visited_Cells) == 0x000088, "Wrong size on MazeCreator_C_Get_Adjacent_Visited_Cells");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, Cell_Index) == 0x000000, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::Cell_Index' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, Adjacent_Cell_Indices) == 0x000008, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::Adjacent_Cell_Indices' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, Return_Value) == 0x000018, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::Return_Value' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, Temp_Cells) == 0x000020, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::Temp_Cells' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Get_Cell_X___Y_X) == 0x000030, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Get_Cell_X___Y_X' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Get_Cell_X___Y_Y) == 0x000034, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Get_Cell_X___Y_Y' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Get_Cell_X___Y_X_1) == 0x000038, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Get_Cell_X___Y_X_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Get_Cell_X___Y_Y_1) == 0x00003C, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Get_Cell_X___Y_Y_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000044, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000048, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Get_Cell_Index_Index) == 0x00004C, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Get_Cell_Index_Index' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Get_Cell_Index_Index_1) == 0x000050, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Get_Cell_Index_Index_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Get_Cell_Index_Index_2) == 0x00005C, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Get_Cell_Index_Index_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Get_Cell_Index_Index_3) == 0x000064, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Get_Cell_Index_Index_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Greater_IntInt_ReturnValue) == 0x000070, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Array_Add_ReturnValue_1) == 0x000074, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Array_Add_ReturnValue_2) == 0x000078, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Array_Add_ReturnValue_3) == 0x00007C, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Array_Contains_ReturnValue) == 0x000080, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Array_Contains_ReturnValue_1) == 0x000081, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_BooleanAND_ReturnValue) == 0x000082, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Array_Contains_ReturnValue_2) == 0x000083, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_BooleanAND_ReturnValue_1) == 0x000084, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Adjacent_Visited_Cells, CallFunc_Array_Contains_ReturnValue_3) == 0x000085, "Member 'MazeCreator_C_Get_Adjacent_Visited_Cells::CallFunc_Array_Contains_ReturnValue_3' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.Get Cell Index
// 0x0014 (0x0014 - 0x0000)
struct MazeCreator_C_Get_Cell_Index final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y;                                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MazeCreator_C_Get_Cell_Index) == 0x000004, "Wrong alignment on MazeCreator_C_Get_Cell_Index");
static_assert(sizeof(MazeCreator_C_Get_Cell_Index) == 0x000014, "Wrong size on MazeCreator_C_Get_Cell_Index");
static_assert(offsetof(MazeCreator_C_Get_Cell_Index, X) == 0x000000, "Member 'MazeCreator_C_Get_Cell_Index::X' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Cell_Index, Y) == 0x000004, "Member 'MazeCreator_C_Get_Cell_Index::Y' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Cell_Index, Param_Index) == 0x000008, "Member 'MazeCreator_C_Get_Cell_Index::Param_Index' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Cell_Index, CallFunc_Multiply_IntInt_ReturnValue) == 0x00000C, "Member 'MazeCreator_C_Get_Cell_Index::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Cell_Index, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'MazeCreator_C_Get_Cell_Index::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.Get Cell Location
// 0x00E8 (0x00E8 - 0x0000)
struct MazeCreator_C_Get_Cell_Location final
{
public:
	int32                                         Cell;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3715[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Cell_X___Y_X;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Cell_X___Y_Y;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MazeCreator_C_Get_Cell_Location) == 0x000008, "Wrong alignment on MazeCreator_C_Get_Cell_Location");
static_assert(sizeof(MazeCreator_C_Get_Cell_Location) == 0x0000E8, "Wrong size on MazeCreator_C_Get_Cell_Location");
static_assert(offsetof(MazeCreator_C_Get_Cell_Location, Cell) == 0x000000, "Member 'MazeCreator_C_Get_Cell_Location::Cell' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Cell_Location, Location) == 0x000008, "Member 'MazeCreator_C_Get_Cell_Location::Location' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Cell_Location, CallFunc_GetActorScale3D_ReturnValue) == 0x000020, "Member 'MazeCreator_C_Get_Cell_Location::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Cell_Location, CallFunc_Get_Cell_X___Y_X) == 0x000038, "Member 'MazeCreator_C_Get_Cell_Location::CallFunc_Get_Cell_X___Y_X' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Cell_Location, CallFunc_Get_Cell_X___Y_Y) == 0x00003C, "Member 'MazeCreator_C_Get_Cell_Location::CallFunc_Get_Cell_X___Y_Y' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Cell_Location, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'MazeCreator_C_Get_Cell_Location::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Cell_Location, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'MazeCreator_C_Get_Cell_Location::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Cell_Location, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'MazeCreator_C_Get_Cell_Location::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Cell_Location, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000078, "Member 'MazeCreator_C_Get_Cell_Location::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Cell_Location, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000080, "Member 'MazeCreator_C_Get_Cell_Location::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Cell_Location, CallFunc_MakeVector_ReturnValue_1) == 0x000088, "Member 'MazeCreator_C_Get_Cell_Location::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Cell_Location, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000A0, "Member 'MazeCreator_C_Get_Cell_Location::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Cell_Location, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B8, "Member 'MazeCreator_C_Get_Cell_Location::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Cell_Location, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000D0, "Member 'MazeCreator_C_Get_Cell_Location::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.Get Cell X & Y
// 0x0014 (0x0014 - 0x0000)
struct MazeCreator_C_Get_Cell_X___Y final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         X;                                                 // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y;                                                 // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MazeCreator_C_Get_Cell_X___Y) == 0x000004, "Wrong alignment on MazeCreator_C_Get_Cell_X___Y");
static_assert(sizeof(MazeCreator_C_Get_Cell_X___Y) == 0x000014, "Wrong size on MazeCreator_C_Get_Cell_X___Y");
static_assert(offsetof(MazeCreator_C_Get_Cell_X___Y, Param_Index) == 0x000000, "Member 'MazeCreator_C_Get_Cell_X___Y::Param_Index' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Cell_X___Y, X) == 0x000004, "Member 'MazeCreator_C_Get_Cell_X___Y::X' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Cell_X___Y, Y) == 0x000008, "Member 'MazeCreator_C_Get_Cell_X___Y::Y' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Cell_X___Y, CallFunc_Percent_IntInt_ReturnValue) == 0x00000C, "Member 'MazeCreator_C_Get_Cell_X___Y::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Cell_X___Y, CallFunc_Divide_IntInt_ReturnValue) == 0x000010, "Member 'MazeCreator_C_Get_Cell_X___Y::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.Get Dist. Between Edge Indices
// 0x0034 (0x0034 - 0x0000)
struct MazeCreator_C_Get_Dist__Between_Edge_Indices final
{
public:
	int32                                         A;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         B;                                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Distance_Between_Indices;                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Total_Outer_Edges_Return_Value;       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3716[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue_1;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MazeCreator_C_Get_Dist__Between_Edge_Indices) == 0x000004, "Wrong alignment on MazeCreator_C_Get_Dist__Between_Edge_Indices");
static_assert(sizeof(MazeCreator_C_Get_Dist__Between_Edge_Indices) == 0x000034, "Wrong size on MazeCreator_C_Get_Dist__Between_Edge_Indices");
static_assert(offsetof(MazeCreator_C_Get_Dist__Between_Edge_Indices, A) == 0x000000, "Member 'MazeCreator_C_Get_Dist__Between_Edge_Indices::A' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Dist__Between_Edge_Indices, B) == 0x000004, "Member 'MazeCreator_C_Get_Dist__Between_Edge_Indices::B' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Dist__Between_Edge_Indices, Distance_Between_Indices) == 0x000008, "Member 'MazeCreator_C_Get_Dist__Between_Edge_Indices::Distance_Between_Indices' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Dist__Between_Edge_Indices, CallFunc_Get_Total_Outer_Edges_Return_Value) == 0x00000C, "Member 'MazeCreator_C_Get_Dist__Between_Edge_Indices::CallFunc_Get_Total_Outer_Edges_Return_Value' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Dist__Between_Edge_Indices, CallFunc_Max_ReturnValue) == 0x000010, "Member 'MazeCreator_C_Get_Dist__Between_Edge_Indices::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Dist__Between_Edge_Indices, CallFunc_Divide_IntInt_ReturnValue) == 0x000014, "Member 'MazeCreator_C_Get_Dist__Between_Edge_Indices::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Dist__Between_Edge_Indices, CallFunc_Min_ReturnValue) == 0x000018, "Member 'MazeCreator_C_Get_Dist__Between_Edge_Indices::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Dist__Between_Edge_Indices, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'MazeCreator_C_Get_Dist__Between_Edge_Indices::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Dist__Between_Edge_Indices, CallFunc_Abs_Int_ReturnValue) == 0x000020, "Member 'MazeCreator_C_Get_Dist__Between_Edge_Indices::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Dist__Between_Edge_Indices, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000024, "Member 'MazeCreator_C_Get_Dist__Between_Edge_Indices::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Dist__Between_Edge_Indices, CallFunc_SelectInt_ReturnValue) == 0x000028, "Member 'MazeCreator_C_Get_Dist__Between_Edge_Indices::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Dist__Between_Edge_Indices, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'MazeCreator_C_Get_Dist__Between_Edge_Indices::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Dist__Between_Edge_Indices, CallFunc_Abs_Int_ReturnValue_1) == 0x000030, "Member 'MazeCreator_C_Get_Dist__Between_Edge_Indices::CallFunc_Abs_Int_ReturnValue_1' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.Get Indices to Create Room
// 0x0100 (0x0100 - 0x0000)
struct MazeCreator_C_Get_Indices_to_Create_Room final
{
public:
	int32                                         Room_Bottom_Corner;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Room_Width;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Room_Height;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3717[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Cell_Indices;                                      // 0x0010(0x0010)(Parm, OutParm)
	int32                                         Old_Cell;                                          // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Old_Width;                                         // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Old_Height;                                        // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_Old_Cell;                                     // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Cell_Y;                                            // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Cell_X;                                            // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Room_Height_;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Room_Width_;                                       // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Temp_Cells;                                        // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Get_Cell_X___Y_X;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Cell_X___Y_Y;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3718[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3719[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371A[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Cell_Index_Index;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371B[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_7;            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_8;            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371C[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_9;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_10;           // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_5;           // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371D[0x1];                                     // 0x00CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_11;           // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_6;           // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371E[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_7;           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371F[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Cell_Index_Index_1;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3720[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MazeCreator_C_Get_Indices_to_Create_Room) == 0x000008, "Wrong alignment on MazeCreator_C_Get_Indices_to_Create_Room");
static_assert(sizeof(MazeCreator_C_Get_Indices_to_Create_Room) == 0x000100, "Wrong size on MazeCreator_C_Get_Indices_to_Create_Room");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, Room_Bottom_Corner) == 0x000000, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::Room_Bottom_Corner' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, Room_Width) == 0x000004, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::Room_Width' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, Room_Height) == 0x000008, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::Room_Height' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, Cell_Indices) == 0x000010, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::Cell_Indices' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, Old_Cell) == 0x000020, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::Old_Cell' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, Old_Width) == 0x000024, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::Old_Width' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, Old_Height) == 0x000028, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::Old_Height' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, Temp_Old_Cell) == 0x00002C, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::Temp_Old_Cell' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, Cell_Y) == 0x000030, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::Cell_Y' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, Cell_X) == 0x000034, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::Cell_X' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, Room_Height_) == 0x000038, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::Room_Height_' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, Room_Width_) == 0x00003C, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::Room_Width_' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, Temp_Cells) == 0x000040, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::Temp_Cells' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Get_Cell_X___Y_X) == 0x000050, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Get_Cell_X___Y_X' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Get_Cell_X___Y_Y) == 0x000054, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Get_Cell_X___Y_Y' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, Temp_int_Variable) == 0x000058, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, Temp_int_Variable_1) == 0x00005C, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Percent_IntInt_ReturnValue) == 0x000060, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000064, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000068, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000069, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, Temp_int_Variable_2) == 0x000074, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Add_IntInt_ReturnValue_2) == 0x000078, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Add_IntInt_ReturnValue_3) == 0x00007C, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Add_IntInt_ReturnValue_4) == 0x000080, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Subtract_IntInt_ReturnValue) == 0x000084, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000088, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00008C, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000090, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_SelectInt_ReturnValue) == 0x000094, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000098, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Add_IntInt_ReturnValue_5) == 0x00009C, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000A0, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Get_Cell_Index_Index) == 0x0000A4, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Get_Cell_Index_Index' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x0000A8, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x0000AC, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0000B0, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x0000B4, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Subtract_IntInt_ReturnValue_7) == 0x0000B8, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Subtract_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Subtract_IntInt_ReturnValue_8) == 0x0000BC, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Subtract_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0000C0, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Subtract_IntInt_ReturnValue_9) == 0x0000C4, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Subtract_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Subtract_IntInt_ReturnValue_10) == 0x0000C8, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Subtract_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x0000CC, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_LessEqual_IntInt_ReturnValue_5) == 0x0000CD, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_LessEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_BooleanAND_ReturnValue) == 0x0000CE, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, Temp_int_Variable_3) == 0x0000D0, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Array_Add_ReturnValue) == 0x0000D4, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Subtract_IntInt_ReturnValue_11) == 0x0000D8, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Subtract_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_SelectInt_ReturnValue_1) == 0x0000DC, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_LessEqual_IntInt_ReturnValue_6) == 0x0000E0, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_LessEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Add_IntInt_ReturnValue_6) == 0x0000E4, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_LessEqual_IntInt_ReturnValue_7) == 0x0000E8, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_LessEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Get_Cell_Index_Index_1) == 0x0000EC, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Get_Cell_Index_Index_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_BooleanAND_ReturnValue_1) == 0x0000F0, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Array_Add_ReturnValue_1) == 0x0000F4, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Indices_to_Create_Room, CallFunc_Add_IntInt_ReturnValue_7) == 0x0000F8, "Member 'MazeCreator_C_Get_Indices_to_Create_Room::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.End Locations
// 0x0044 (0x0044 - 0x0000)
struct MazeCreator_C_End_Locations final
{
public:
	int32                                         Start_Index;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         End_Index;                                         // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_End;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_Start;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Dist__Between_Edge_Indices_Distance_Between_Indices; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Dist__Between_Edge_Indices_Distance_Between_Indices_1; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3721[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Total_Outer_Edges_Return_Value;       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3722[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Total_Outer_Edges_Return_Value_1;     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3723[0x1];                                     // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MazeCreator_C_End_Locations) == 0x000004, "Wrong alignment on MazeCreator_C_End_Locations");
static_assert(sizeof(MazeCreator_C_End_Locations) == 0x000044, "Wrong size on MazeCreator_C_End_Locations");
static_assert(offsetof(MazeCreator_C_End_Locations, Start_Index) == 0x000000, "Member 'MazeCreator_C_End_Locations::Start_Index' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_End_Locations, End_Index) == 0x000004, "Member 'MazeCreator_C_End_Locations::End_Index' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_End_Locations, Temp_End) == 0x000008, "Member 'MazeCreator_C_End_Locations::Temp_End' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_End_Locations, Temp_Start) == 0x00000C, "Member 'MazeCreator_C_End_Locations::Temp_Start' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_End_Locations, CallFunc_Get_Dist__Between_Edge_Indices_Distance_Between_Indices) == 0x000010, "Member 'MazeCreator_C_End_Locations::CallFunc_Get_Dist__Between_Edge_Indices_Distance_Between_Indices' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_End_Locations, CallFunc_Get_Dist__Between_Edge_Indices_Distance_Between_Indices_1) == 0x000014, "Member 'MazeCreator_C_End_Locations::CallFunc_Get_Dist__Between_Edge_Indices_Distance_Between_Indices_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_End_Locations, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000018, "Member 'MazeCreator_C_End_Locations::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_End_Locations, CallFunc_Get_Total_Outer_Edges_Return_Value) == 0x00001C, "Member 'MazeCreator_C_End_Locations::CallFunc_Get_Total_Outer_Edges_Return_Value' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_End_Locations, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'MazeCreator_C_End_Locations::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_End_Locations, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'MazeCreator_C_End_Locations::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_End_Locations, CallFunc_RandomIntegerInRangeFromStream_ReturnValue) == 0x000028, "Member 'MazeCreator_C_End_Locations::CallFunc_RandomIntegerInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_End_Locations, CallFunc_Get_Total_Outer_Edges_Return_Value_1) == 0x00002C, "Member 'MazeCreator_C_End_Locations::CallFunc_Get_Total_Outer_Edges_Return_Value_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_End_Locations, CallFunc_Divide_IntInt_ReturnValue) == 0x000030, "Member 'MazeCreator_C_End_Locations::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_End_Locations, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000034, "Member 'MazeCreator_C_End_Locations::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_End_Locations, CallFunc_Less_IntInt_ReturnValue) == 0x000035, "Member 'MazeCreator_C_End_Locations::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_End_Locations, CallFunc_BooleanAND_ReturnValue) == 0x000036, "Member 'MazeCreator_C_End_Locations::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_End_Locations, CallFunc_Multiply_IntInt_ReturnValue) == 0x000038, "Member 'MazeCreator_C_End_Locations::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_End_Locations, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00003C, "Member 'MazeCreator_C_End_Locations::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_End_Locations, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x00003D, "Member 'MazeCreator_C_End_Locations::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_End_Locations, CallFunc_BooleanAND_ReturnValue_1) == 0x00003E, "Member 'MazeCreator_C_End_Locations::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_End_Locations, CallFunc_BooleanAND_ReturnValue_2) == 0x00003F, "Member 'MazeCreator_C_End_Locations::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_End_Locations, CallFunc_BooleanOR_ReturnValue) == 0x000040, "Member 'MazeCreator_C_End_Locations::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_End_Locations, CallFunc_BooleanOR_ReturnValue_1) == 0x000041, "Member 'MazeCreator_C_End_Locations::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.Get Total Outer Edges
// 0x0008 (0x0008 - 0x0000)
struct MazeCreator_C_Get_Total_Outer_Edges final
{
public:
	int32                                         Return_Value;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_MathExpression_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MazeCreator_C_Get_Total_Outer_Edges) == 0x000004, "Wrong alignment on MazeCreator_C_Get_Total_Outer_Edges");
static_assert(sizeof(MazeCreator_C_Get_Total_Outer_Edges) == 0x000008, "Wrong size on MazeCreator_C_Get_Total_Outer_Edges");
static_assert(offsetof(MazeCreator_C_Get_Total_Outer_Edges, Return_Value) == 0x000000, "Member 'MazeCreator_C_Get_Total_Outer_Edges::Return_Value' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Get_Total_Outer_Edges, K2Node_MathExpression_ReturnValue) == 0x000004, "Member 'MazeCreator_C_Get_Total_Outer_Edges::K2Node_MathExpression_ReturnValue' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.Initialize Variables
// 0x01D0 (0x01D0 - 0x0000)
struct MazeCreator_C_Initialize_Variables final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3724[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3725[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3726[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BreakRandomStream_InitialSeed;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3727[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3728[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default;                             // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Random_Start_End_Locations_Start_Index; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Random_Start_End_Locations_End_Index; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3729[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x00A0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          CallFunc_AddComponent_ReturnValue;                 // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372A[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable_1;                            // 0x0110(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372B[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInstancedStaticMeshComponent*          CallFunc_AddComponent_ReturnValue_1;               // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372C[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Total_Outer_Edges_Return_Value;       // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372D[0x3];                                     // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue; // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakRandomStream_InitialSeed_1;          // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372E[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_RoomFrequency_13_8774FDBB41334A69E49DD8A411F6B4F4_ImplicitCast; // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MazeCreator_C_Initialize_Variables) == 0x000010, "Wrong alignment on MazeCreator_C_Initialize_Variables");
static_assert(sizeof(MazeCreator_C_Initialize_Variables) == 0x0001D0, "Wrong size on MazeCreator_C_Initialize_Variables");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, Temp_int_Array_Index_Variable) == 0x000000, "Member 'MazeCreator_C_Initialize_Variables::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, Temp_int_Variable) == 0x000004, "Member 'MazeCreator_C_Initialize_Variables::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'MazeCreator_C_Initialize_Variables::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'MazeCreator_C_Initialize_Variables::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, Temp_bool_Variable) == 0x000018, "Member 'MazeCreator_C_Initialize_Variables::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Array_Get_Item) == 0x000020, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, Temp_int_Variable_1) == 0x00002C, "Member 'MazeCreator_C_Initialize_Variables::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Add_IntInt_ReturnValue_2) == 0x000030, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000038, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_SetStaticMesh_ReturnValue) == 0x000041, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_BreakRandomStream_InitialSeed) == 0x000044, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_BreakRandomStream_InitialSeed' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, Temp_int_Variable_2) == 0x000048, "Member 'MazeCreator_C_Initialize_Variables::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000050, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_MakeVector2D_ReturnValue) == 0x000060, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000079, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Add_IntInt_ReturnValue_3) == 0x00007C, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, K2Node_Select_Default) == 0x000080, "Member 'MazeCreator_C_Initialize_Variables::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Array_Add_ReturnValue_1) == 0x000088, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Multiply_IntInt_ReturnValue) == 0x00008C, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Get_Random_Start_End_Locations_Start_Index) == 0x000090, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Get_Random_Start_End_Locations_Start_Index' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Get_Random_Start_End_Locations_End_Index) == 0x000094, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Get_Random_Start_End_Locations_End_Index' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Subtract_IntInt_ReturnValue) == 0x000098, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00009C, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, Temp_struct_Variable) == 0x0000A0, "Member 'MazeCreator_C_Initialize_Variables::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_AddComponent_ReturnValue) == 0x000100, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000108, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, Temp_struct_Variable_1) == 0x000110, "Member 'MazeCreator_C_Initialize_Variables::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, Temp_int_Loop_Counter_Variable_1) == 0x000170, "Member 'MazeCreator_C_Initialize_Variables::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_AddComponent_ReturnValue_1) == 0x000178, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Less_IntInt_ReturnValue_1) == 0x000180, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Add_IntInt_ReturnValue_4) == 0x000184, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_FClamp_ReturnValue) == 0x000188, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Max_ReturnValue) == 0x000190, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Get_Total_Outer_Edges_Return_Value) == 0x000194, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Get_Total_Outer_Edges_Return_Value' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Divide_IntInt_ReturnValue) == 0x000198, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Greater_IntInt_ReturnValue) == 0x00019C, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_SelectInt_ReturnValue) == 0x0001A0, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x0001A4, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0001A8, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_RandomIntegerInRangeFromStream_ReturnValue) == 0x0001AC, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_RandomIntegerInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_BreakRandomStream_InitialSeed_1) == 0x0001B0, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_BreakRandomStream_InitialSeed_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, CallFunc_FClamp_Value_ImplicitCast) == 0x0001B8, "Member 'MazeCreator_C_Initialize_Variables::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Initialize_Variables, K2Node_SetFieldsInStruct_RoomFrequency_13_8774FDBB41334A69E49DD8A411F6B4F4_ImplicitCast) == 0x0001C0, "Member 'MazeCreator_C_Initialize_Variables::K2Node_SetFieldsInStruct_RoomFrequency_13_8774FDBB41334A69E49DD8A411F6B4F4_ImplicitCast' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.Maze End_Begin Overlap__DelegateSignature
// 0x0100 (0x0100 - 0x0000)
struct MazeCreator_C_Maze_End_Begin_Overlap__DelegateSignature final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372F[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0018(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MazeCreator_C_Maze_End_Begin_Overlap__DelegateSignature) == 0x000008, "Wrong alignment on MazeCreator_C_Maze_End_Begin_Overlap__DelegateSignature");
static_assert(sizeof(MazeCreator_C_Maze_End_Begin_Overlap__DelegateSignature) == 0x000100, "Wrong size on MazeCreator_C_Maze_End_Begin_Overlap__DelegateSignature");
static_assert(offsetof(MazeCreator_C_Maze_End_Begin_Overlap__DelegateSignature, OtherActor) == 0x000000, "Member 'MazeCreator_C_Maze_End_Begin_Overlap__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Maze_End_Begin_Overlap__DelegateSignature, OtherComp) == 0x000008, "Member 'MazeCreator_C_Maze_End_Begin_Overlap__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Maze_End_Begin_Overlap__DelegateSignature, OtherBodyIndex) == 0x000010, "Member 'MazeCreator_C_Maze_End_Begin_Overlap__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Maze_End_Begin_Overlap__DelegateSignature, bFromSweep) == 0x000014, "Member 'MazeCreator_C_Maze_End_Begin_Overlap__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Maze_End_Begin_Overlap__DelegateSignature, SweepResult) == 0x000018, "Member 'MazeCreator_C_Maze_End_Begin_Overlap__DelegateSignature::SweepResult' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.Maze End_End Overlap__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct MazeCreator_C_Maze_End_End_Overlap__DelegateSignature final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MazeCreator_C_Maze_End_End_Overlap__DelegateSignature) == 0x000008, "Wrong alignment on MazeCreator_C_Maze_End_End_Overlap__DelegateSignature");
static_assert(sizeof(MazeCreator_C_Maze_End_End_Overlap__DelegateSignature) == 0x000018, "Wrong size on MazeCreator_C_Maze_End_End_Overlap__DelegateSignature");
static_assert(offsetof(MazeCreator_C_Maze_End_End_Overlap__DelegateSignature, OtherActor) == 0x000000, "Member 'MazeCreator_C_Maze_End_End_Overlap__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Maze_End_End_Overlap__DelegateSignature, OtherComp) == 0x000008, "Member 'MazeCreator_C_Maze_End_End_Overlap__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Maze_End_End_Overlap__DelegateSignature, OtherBodyIndex) == 0x000010, "Member 'MazeCreator_C_Maze_End_End_Overlap__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.Maze Start_Begin Overlap__DelegateSignature
// 0x0100 (0x0100 - 0x0000)
struct MazeCreator_C_Maze_Start_Begin_Overlap__DelegateSignature final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3730[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0018(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MazeCreator_C_Maze_Start_Begin_Overlap__DelegateSignature) == 0x000008, "Wrong alignment on MazeCreator_C_Maze_Start_Begin_Overlap__DelegateSignature");
static_assert(sizeof(MazeCreator_C_Maze_Start_Begin_Overlap__DelegateSignature) == 0x000100, "Wrong size on MazeCreator_C_Maze_Start_Begin_Overlap__DelegateSignature");
static_assert(offsetof(MazeCreator_C_Maze_Start_Begin_Overlap__DelegateSignature, OtherActor) == 0x000000, "Member 'MazeCreator_C_Maze_Start_Begin_Overlap__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Maze_Start_Begin_Overlap__DelegateSignature, OtherComp) == 0x000008, "Member 'MazeCreator_C_Maze_Start_Begin_Overlap__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Maze_Start_Begin_Overlap__DelegateSignature, OtherBodyIndex) == 0x000010, "Member 'MazeCreator_C_Maze_Start_Begin_Overlap__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Maze_Start_Begin_Overlap__DelegateSignature, bFromSweep) == 0x000014, "Member 'MazeCreator_C_Maze_Start_Begin_Overlap__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Maze_Start_Begin_Overlap__DelegateSignature, SweepResult) == 0x000018, "Member 'MazeCreator_C_Maze_Start_Begin_Overlap__DelegateSignature::SweepResult' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.Maze Start_End Overlap__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct MazeCreator_C_Maze_Start_End_Overlap__DelegateSignature final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MazeCreator_C_Maze_Start_End_Overlap__DelegateSignature) == 0x000008, "Wrong alignment on MazeCreator_C_Maze_Start_End_Overlap__DelegateSignature");
static_assert(sizeof(MazeCreator_C_Maze_Start_End_Overlap__DelegateSignature) == 0x000018, "Wrong size on MazeCreator_C_Maze_Start_End_Overlap__DelegateSignature");
static_assert(offsetof(MazeCreator_C_Maze_Start_End_Overlap__DelegateSignature, OtherActor) == 0x000000, "Member 'MazeCreator_C_Maze_Start_End_Overlap__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Maze_Start_End_Overlap__DelegateSignature, OtherComp) == 0x000008, "Member 'MazeCreator_C_Maze_Start_End_Overlap__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Maze_Start_End_Overlap__DelegateSignature, OtherBodyIndex) == 0x000010, "Member 'MazeCreator_C_Maze_Start_End_Overlap__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.OnMazeEndBeginOverlap
// 0x0108 (0x0108 - 0x0000)
struct MazeCreator_C_OnMazeEndBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3731[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MazeCreator_C_OnMazeEndBeginOverlap) == 0x000008, "Wrong alignment on MazeCreator_C_OnMazeEndBeginOverlap");
static_assert(sizeof(MazeCreator_C_OnMazeEndBeginOverlap) == 0x000108, "Wrong size on MazeCreator_C_OnMazeEndBeginOverlap");
static_assert(offsetof(MazeCreator_C_OnMazeEndBeginOverlap, OverlappedComponent) == 0x000000, "Member 'MazeCreator_C_OnMazeEndBeginOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_OnMazeEndBeginOverlap, OtherActor) == 0x000008, "Member 'MazeCreator_C_OnMazeEndBeginOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_OnMazeEndBeginOverlap, OtherComp) == 0x000010, "Member 'MazeCreator_C_OnMazeEndBeginOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_OnMazeEndBeginOverlap, OtherBodyIndex) == 0x000018, "Member 'MazeCreator_C_OnMazeEndBeginOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_OnMazeEndBeginOverlap, bFromSweep) == 0x00001C, "Member 'MazeCreator_C_OnMazeEndBeginOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_OnMazeEndBeginOverlap, SweepResult) == 0x000020, "Member 'MazeCreator_C_OnMazeEndBeginOverlap::SweepResult' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.OnMazeEndEndOverlap
// 0x0020 (0x0020 - 0x0000)
struct MazeCreator_C_OnMazeEndEndOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MazeCreator_C_OnMazeEndEndOverlap) == 0x000008, "Wrong alignment on MazeCreator_C_OnMazeEndEndOverlap");
static_assert(sizeof(MazeCreator_C_OnMazeEndEndOverlap) == 0x000020, "Wrong size on MazeCreator_C_OnMazeEndEndOverlap");
static_assert(offsetof(MazeCreator_C_OnMazeEndEndOverlap, OverlappedComponent) == 0x000000, "Member 'MazeCreator_C_OnMazeEndEndOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_OnMazeEndEndOverlap, OtherActor) == 0x000008, "Member 'MazeCreator_C_OnMazeEndEndOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_OnMazeEndEndOverlap, OtherComp) == 0x000010, "Member 'MazeCreator_C_OnMazeEndEndOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_OnMazeEndEndOverlap, OtherBodyIndex) == 0x000018, "Member 'MazeCreator_C_OnMazeEndEndOverlap::OtherBodyIndex' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.OnMazeStartBeginOverlap
// 0x0108 (0x0108 - 0x0000)
struct MazeCreator_C_OnMazeStartBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3732[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MazeCreator_C_OnMazeStartBeginOverlap) == 0x000008, "Wrong alignment on MazeCreator_C_OnMazeStartBeginOverlap");
static_assert(sizeof(MazeCreator_C_OnMazeStartBeginOverlap) == 0x000108, "Wrong size on MazeCreator_C_OnMazeStartBeginOverlap");
static_assert(offsetof(MazeCreator_C_OnMazeStartBeginOverlap, OverlappedComponent) == 0x000000, "Member 'MazeCreator_C_OnMazeStartBeginOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_OnMazeStartBeginOverlap, OtherActor) == 0x000008, "Member 'MazeCreator_C_OnMazeStartBeginOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_OnMazeStartBeginOverlap, OtherComp) == 0x000010, "Member 'MazeCreator_C_OnMazeStartBeginOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_OnMazeStartBeginOverlap, OtherBodyIndex) == 0x000018, "Member 'MazeCreator_C_OnMazeStartBeginOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_OnMazeStartBeginOverlap, bFromSweep) == 0x00001C, "Member 'MazeCreator_C_OnMazeStartBeginOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_OnMazeStartBeginOverlap, SweepResult) == 0x000020, "Member 'MazeCreator_C_OnMazeStartBeginOverlap::SweepResult' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.OnMazeStartEndOverlap
// 0x0020 (0x0020 - 0x0000)
struct MazeCreator_C_OnMazeStartEndOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MazeCreator_C_OnMazeStartEndOverlap) == 0x000008, "Wrong alignment on MazeCreator_C_OnMazeStartEndOverlap");
static_assert(sizeof(MazeCreator_C_OnMazeStartEndOverlap) == 0x000020, "Wrong size on MazeCreator_C_OnMazeStartEndOverlap");
static_assert(offsetof(MazeCreator_C_OnMazeStartEndOverlap, OverlappedComponent) == 0x000000, "Member 'MazeCreator_C_OnMazeStartEndOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_OnMazeStartEndOverlap, OtherActor) == 0x000008, "Member 'MazeCreator_C_OnMazeStartEndOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_OnMazeStartEndOverlap, OtherComp) == 0x000010, "Member 'MazeCreator_C_OnMazeStartEndOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_OnMazeStartEndOverlap, OtherBodyIndex) == 0x000018, "Member 'MazeCreator_C_OnMazeStartEndOverlap::OtherBodyIndex' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.Rectangle Edge is Vertical?
// 0x002C (0x002C - 0x0000)
struct MazeCreator_C_Rectangle_Edge_is_Vertical_ final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Width;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Height;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Vertical_;                                      // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3733[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_Relative_To_Side;                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_Index;                                        // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3734[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MazeCreator_C_Rectangle_Edge_is_Vertical_) == 0x000004, "Wrong alignment on MazeCreator_C_Rectangle_Edge_is_Vertical_");
static_assert(sizeof(MazeCreator_C_Rectangle_Edge_is_Vertical_) == 0x00002C, "Wrong size on MazeCreator_C_Rectangle_Edge_is_Vertical_");
static_assert(offsetof(MazeCreator_C_Rectangle_Edge_is_Vertical_, Param_Index) == 0x000000, "Member 'MazeCreator_C_Rectangle_Edge_is_Vertical_::Param_Index' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Rectangle_Edge_is_Vertical_, Width) == 0x000004, "Member 'MazeCreator_C_Rectangle_Edge_is_Vertical_::Width' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Rectangle_Edge_is_Vertical_, Height) == 0x000008, "Member 'MazeCreator_C_Rectangle_Edge_is_Vertical_::Height' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Rectangle_Edge_is_Vertical_, Is_Vertical_) == 0x00000C, "Member 'MazeCreator_C_Rectangle_Edge_is_Vertical_::Is_Vertical_' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Rectangle_Edge_is_Vertical_, Index_Relative_To_Side) == 0x000010, "Member 'MazeCreator_C_Rectangle_Edge_is_Vertical_::Index_Relative_To_Side' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Rectangle_Edge_is_Vertical_, Temp_Index) == 0x000014, "Member 'MazeCreator_C_Rectangle_Edge_is_Vertical_::Temp_Index' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Rectangle_Edge_is_Vertical_, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'MazeCreator_C_Rectangle_Edge_is_Vertical_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Rectangle_Edge_is_Vertical_, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'MazeCreator_C_Rectangle_Edge_is_Vertical_::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Rectangle_Edge_is_Vertical_, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'MazeCreator_C_Rectangle_Edge_is_Vertical_::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Rectangle_Edge_is_Vertical_, CallFunc_Less_IntInt_ReturnValue) == 0x000021, "Member 'MazeCreator_C_Rectangle_Edge_is_Vertical_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Rectangle_Edge_is_Vertical_, CallFunc_Less_IntInt_ReturnValue_1) == 0x000022, "Member 'MazeCreator_C_Rectangle_Edge_is_Vertical_::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Rectangle_Edge_is_Vertical_, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000024, "Member 'MazeCreator_C_Rectangle_Edge_is_Vertical_::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Rectangle_Edge_is_Vertical_, CallFunc_SelectInt_ReturnValue) == 0x000028, "Member 'MazeCreator_C_Rectangle_Edge_is_Vertical_::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.Remove Adjacent Orphaned Corners
// 0x00F8 (0x00F8 - 0x0000)
struct MazeCreator_C_Remove_Adjacent_Orphaned_Corners final
{
public:
	struct FVector2D                              Origin;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Has_Adjacent_Wall_;                                // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3735[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3736[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3737[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3738[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_MathExpression_ReturnValue;                 // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_MathExpression_ReturnValue_1;               // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_MathExpression_ReturnValue_2;               // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_MathExpression_ReturnValue_3;               // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_MathExpression_ReturnValue_4;               // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Corner_is_Inside_Maze__Return_Value;      // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3739[0x6];                                     // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_MathExpression_ReturnValue_5;               // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373A[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_MathExpression_ReturnValue_6;               // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373B[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_MathExpression_ReturnValue_7;               // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners) == 0x000008, "Wrong alignment on MazeCreator_C_Remove_Adjacent_Orphaned_Corners");
static_assert(sizeof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners) == 0x0000F8, "Wrong size on MazeCreator_C_Remove_Adjacent_Orphaned_Corners");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, Origin) == 0x000000, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::Origin' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, Has_Adjacent_Wall_) == 0x000010, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::Has_Adjacent_Wall_' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, Temp_bool_Variable) == 0x000011, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, Temp_int_Variable) == 0x000014, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000018, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, Temp_int_Variable_1) == 0x000024, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, Temp_int_Variable_2) == 0x000028, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000030, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, Temp_int_Variable_3) == 0x000034, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, K2Node_MathExpression_ReturnValue) == 0x000038, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, K2Node_MathExpression_ReturnValue_1) == 0x000048, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::K2Node_MathExpression_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, K2Node_MathExpression_ReturnValue_2) == 0x000058, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::K2Node_MathExpression_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, K2Node_MathExpression_ReturnValue_3) == 0x000068, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::K2Node_MathExpression_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, K2Node_Select_Default) == 0x000078, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, K2Node_MathExpression_ReturnValue_4) == 0x000088, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::K2Node_MathExpression_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, CallFunc_Array_RemoveItem_ReturnValue) == 0x000098, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, CallFunc_Corner_is_Inside_Maze__Return_Value) == 0x000099, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::CallFunc_Corner_is_Inside_Maze__Return_Value' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, K2Node_MathExpression_ReturnValue_5) == 0x0000A0, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::K2Node_MathExpression_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000B0, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, K2Node_MathExpression_ReturnValue_6) == 0x0000B8, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::K2Node_MathExpression_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, CallFunc_BooleanOR_ReturnValue) == 0x0000C8, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, K2Node_MathExpression_ReturnValue_7) == 0x0000D0, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::K2Node_MathExpression_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, K2Node_Select_Default_1) == 0x0000E0, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, CallFunc_Array_Contains_ReturnValue) == 0x0000F0, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, CallFunc_Array_Contains_ReturnValue_1) == 0x0000F1, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Adjacent_Orphaned_Corners, CallFunc_BooleanOR_ReturnValue_1) == 0x0000F2, "Member 'MazeCreator_C_Remove_Adjacent_Orphaned_Corners::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.Remove Corner Pieces in Range
// 0x00F8 (0x00F8 - 0x0000)
struct MazeCreator_C_Remove_Corner_Pieces_in_Range final
{
public:
	int32                                         Lower_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Range_Width;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Range_Height;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373C[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      Removed_Corners;                                   // 0x0010(0x0010)(Parm, OutParm)
	int32                                         Temp_Index;                                        // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_Height;                                       // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_Width;                                        // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373D[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      Temp_Corners;                                      // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Cell_X___Y_X;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Cell_X___Y_Y;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373E[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373F[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3740[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3741[0x2];                                     // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3742[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3743[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3744[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Corner_is_Inside_Maze__Return_Value;      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MazeCreator_C_Remove_Corner_Pieces_in_Range) == 0x000008, "Wrong alignment on MazeCreator_C_Remove_Corner_Pieces_in_Range");
static_assert(sizeof(MazeCreator_C_Remove_Corner_Pieces_in_Range) == 0x0000F8, "Wrong size on MazeCreator_C_Remove_Corner_Pieces_in_Range");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, Lower_Index) == 0x000000, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::Lower_Index' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, Range_Width) == 0x000004, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::Range_Width' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, Range_Height) == 0x000008, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::Range_Height' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, Removed_Corners) == 0x000010, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::Removed_Corners' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, Temp_Index) == 0x000020, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::Temp_Index' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, Temp_Height) == 0x000024, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::Temp_Height' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, Temp_Width) == 0x000028, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::Temp_Width' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, Temp_Corners) == 0x000030, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::Temp_Corners' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000044, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000048, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, Temp_int_Variable) == 0x00004C, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_Get_Cell_X___Y_X) == 0x000050, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_Get_Cell_X___Y_X' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_Get_Cell_X___Y_Y) == 0x000054, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_Get_Cell_X___Y_Y' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000058, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000060, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000068, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000074, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000078, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_MakeVector2D_ReturnValue) == 0x000080, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, Temp_int_Variable_1) == 0x000090, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_Add_IntInt_ReturnValue_2) == 0x000094, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000098, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000099, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_Add_IntInt_ReturnValue_3) == 0x00009C, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_BooleanOR_ReturnValue) == 0x0000A0, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000A8, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_BooleanOR_ReturnValue_1) == 0x0000B0, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000B8, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_BooleanOR_ReturnValue_2) == 0x0000C8, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0000D0, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000E0, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000F0, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_Corner_is_Inside_Maze__Return_Value) == 0x0000F1, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_Corner_is_Inside_Maze__Return_Value' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Corner_Pieces_in_Range, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000F2, "Member 'MazeCreator_C_Remove_Corner_Pieces_in_Range::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.Remove Old Maze
// 0x0003 (0x0003 - 0x0000)
struct MazeCreator_C_Remove_Old_Maze final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MazeCreator_C_Remove_Old_Maze) == 0x000001, "Wrong alignment on MazeCreator_C_Remove_Old_Maze");
static_assert(sizeof(MazeCreator_C_Remove_Old_Maze) == 0x000003, "Wrong size on MazeCreator_C_Remove_Old_Maze");
static_assert(offsetof(MazeCreator_C_Remove_Old_Maze, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'MazeCreator_C_Remove_Old_Maze::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Old_Maze, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'MazeCreator_C_Remove_Old_Maze::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Remove_Old_Maze, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'MazeCreator_C_Remove_Old_Maze::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function MazeCreator.MazeCreator_C.Set Current Cell
// 0x0098 (0x0098 - 0x0000)
struct MazeCreator_C_Set_Current_Cell final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3745[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_Vector;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Values_are_Same_;                                  // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3746[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Cell_X___Y_X;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Cell_X___Y_Y;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3747[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3748[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Cell_X___Y_X_1;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Cell_X___Y_Y_1;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3749[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_MathExpression_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue_1;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374A[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_MathExpression_ReturnValue_2;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue_3;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374B[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374C[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MazeCreator_C_Set_Current_Cell) == 0x000008, "Wrong alignment on MazeCreator_C_Set_Current_Cell");
static_assert(sizeof(MazeCreator_C_Set_Current_Cell) == 0x000098, "Wrong size on MazeCreator_C_Set_Current_Cell");
static_assert(offsetof(MazeCreator_C_Set_Current_Cell, Value) == 0x000000, "Member 'MazeCreator_C_Set_Current_Cell::Value' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Set_Current_Cell, Temp_Vector) == 0x000008, "Member 'MazeCreator_C_Set_Current_Cell::Temp_Vector' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Set_Current_Cell, Values_are_Same_) == 0x000018, "Member 'MazeCreator_C_Set_Current_Cell::Values_are_Same_' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Set_Current_Cell, CallFunc_Get_Cell_X___Y_X) == 0x00001C, "Member 'MazeCreator_C_Set_Current_Cell::CallFunc_Get_Cell_X___Y_X' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Set_Current_Cell, CallFunc_Get_Cell_X___Y_Y) == 0x000020, "Member 'MazeCreator_C_Set_Current_Cell::CallFunc_Get_Cell_X___Y_Y' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Set_Current_Cell, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'MazeCreator_C_Set_Current_Cell::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Set_Current_Cell, CallFunc_Array_RemoveItem_ReturnValue) == 0x000030, "Member 'MazeCreator_C_Set_Current_Cell::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Set_Current_Cell, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000031, "Member 'MazeCreator_C_Set_Current_Cell::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Set_Current_Cell, CallFunc_Get_Cell_X___Y_X_1) == 0x000034, "Member 'MazeCreator_C_Set_Current_Cell::CallFunc_Get_Cell_X___Y_X_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Set_Current_Cell, CallFunc_Get_Cell_X___Y_Y_1) == 0x000038, "Member 'MazeCreator_C_Set_Current_Cell::CallFunc_Get_Cell_X___Y_Y_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Set_Current_Cell, K2Node_MathExpression_ReturnValue) == 0x000040, "Member 'MazeCreator_C_Set_Current_Cell::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Set_Current_Cell, K2Node_MathExpression_ReturnValue_1) == 0x000048, "Member 'MazeCreator_C_Set_Current_Cell::K2Node_MathExpression_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Set_Current_Cell, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000050, "Member 'MazeCreator_C_Set_Current_Cell::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Set_Current_Cell, K2Node_MathExpression_ReturnValue_2) == 0x000058, "Member 'MazeCreator_C_Set_Current_Cell::K2Node_MathExpression_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Set_Current_Cell, CallFunc_SelectFloat_ReturnValue) == 0x000060, "Member 'MazeCreator_C_Set_Current_Cell::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Set_Current_Cell, K2Node_MathExpression_ReturnValue_3) == 0x000068, "Member 'MazeCreator_C_Set_Current_Cell::K2Node_MathExpression_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Set_Current_Cell, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000070, "Member 'MazeCreator_C_Set_Current_Cell::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Set_Current_Cell, CallFunc_SelectFloat_ReturnValue_1) == 0x000078, "Member 'MazeCreator_C_Set_Current_Cell::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Set_Current_Cell, CallFunc_MakeVector2D_ReturnValue) == 0x000080, "Member 'MazeCreator_C_Set_Current_Cell::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Set_Current_Cell, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000090, "Member 'MazeCreator_C_Set_Current_Cell::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MazeCreator_C_Set_Current_Cell, CallFunc_Array_Add_ReturnValue) == 0x000094, "Member 'MazeCreator_C_Set_Current_Cell::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

}

