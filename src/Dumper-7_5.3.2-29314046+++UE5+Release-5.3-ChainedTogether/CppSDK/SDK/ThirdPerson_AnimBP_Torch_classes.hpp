#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ThirdPerson_AnimBP_Torch

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ThirdPerson_AnimBP_Torch_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ThirdPerson_AnimBP_Torch.ThirdPerson_AnimBP_Torch_C
// 0x0830 (0x0B80 - 0x0350)
class UThirdPerson_AnimBP_Torch_C final : public UAnimInstance
{
public:
	uint8                                         Pad_368C[0x8];                                     // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ThirdPerson_AnimBP_Torch::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0358(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_368D[0x4];                                     // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0368(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0370(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0378(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0398(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x03C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x03E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0410(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0438(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0480(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x04A0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x04E8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0508(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0550(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0570(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x05B8(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0628(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0698(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x06B8(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x0780(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0800(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0828(0x00F0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0918(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0998(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x09C0(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x09E8(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0A30(0x00F0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0B20(0x0048)()
	bool                                          IsInAir_;                                          // 0x0B68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_368E[0x7];                                     // 0x0B69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Speed;                                             // 0x0B70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCrouching;                                       // 0x0B78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHoldingLight;                                    // 0x0B79(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void AnimNotify_LeftFootprint();
	void AnimNotify_RightFootprint();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ThirdPerson_AnimBP_Torch_AnimGraphNode_LayeredBoneBlend_9159507947E5E87D8CD8B6B2FD249537();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ThirdPerson_AnimBP_Torch_AnimGraphNode_TransitionResult_7E67500448A46227E1DA10A9F811640C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ThirdPerson_AnimBP_Torch_AnimGraphNode_TransitionResult_9F10329141D35A3710902AA5DE6145A3();
	void ExecuteUbergraph_ThirdPerson_AnimBP_Torch(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ThirdPerson_AnimBP_Torch_C">();
	}
	static class UThirdPerson_AnimBP_Torch_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UThirdPerson_AnimBP_Torch_C>();
	}
};
static_assert(alignof(UThirdPerson_AnimBP_Torch_C) == 0x000010, "Wrong alignment on UThirdPerson_AnimBP_Torch_C");
static_assert(sizeof(UThirdPerson_AnimBP_Torch_C) == 0x000B80, "Wrong size on UThirdPerson_AnimBP_Torch_C");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, UberGraphFrame) == 0x000350, "Member 'UThirdPerson_AnimBP_Torch_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, __AnimBlueprintMutables) == 0x000358, "Member 'UThirdPerson_AnimBP_Torch_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimBlueprintExtension_PropertyAccess) == 0x000368, "Member 'UThirdPerson_AnimBP_Torch_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimBlueprintExtension_Base) == 0x000370, "Member 'UThirdPerson_AnimBP_Torch_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_Root) == 0x000378, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_TransitionResult_3) == 0x000398, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_TransitionResult_2) == 0x0003C0, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_TransitionResult_1) == 0x0003E8, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_TransitionResult) == 0x000410, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_SequencePlayer_3) == 0x000438, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_StateResult_3) == 0x000480, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_SequencePlayer_2) == 0x0004A0, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_StateResult_2) == 0x0004E8, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_SequencePlayer_1) == 0x000508, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_StateResult_1) == 0x000550, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_BlendListByBool) == 0x000570, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0005B8, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_BlendSpacePlayer) == 0x000628, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_StateResult) == 0x000698, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_StateMachine) == 0x0006B8, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_SaveCachedPose_1) == 0x000780, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_UseCachedPose_2) == 0x000800, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000828, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_SaveCachedPose) == 0x000918, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_UseCachedPose_1) == 0x000998, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_UseCachedPose) == 0x0009C0, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_Slot) == 0x0009E8, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_LayeredBoneBlend) == 0x000A30, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, AnimGraphNode_SequencePlayer) == 0x000B20, "Member 'UThirdPerson_AnimBP_Torch_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, IsInAir_) == 0x000B68, "Member 'UThirdPerson_AnimBP_Torch_C::IsInAir_' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, Speed) == 0x000B70, "Member 'UThirdPerson_AnimBP_Torch_C::Speed' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, IsCrouching) == 0x000B78, "Member 'UThirdPerson_AnimBP_Torch_C::IsCrouching' has a wrong offset!");
static_assert(offsetof(UThirdPerson_AnimBP_Torch_C, IsHoldingLight) == 0x000B79, "Member 'UThirdPerson_AnimBP_Torch_C::IsHoldingLight' has a wrong offset!");

}

