#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Controls

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_Controls.BPI_Controls_C.LookRight
// 0x0008 (0x0008 - 0x0000)
struct BPI_Controls_C_LookRight final
{
public:
	double                                        Axis;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Controls_C_LookRight) == 0x000008, "Wrong alignment on BPI_Controls_C_LookRight");
static_assert(sizeof(BPI_Controls_C_LookRight) == 0x000008, "Wrong size on BPI_Controls_C_LookRight");
static_assert(offsetof(BPI_Controls_C_LookRight, Axis) == 0x000000, "Member 'BPI_Controls_C_LookRight::Axis' has a wrong offset!");

// Function BPI_Controls.BPI_Controls_C.LookUp
// 0x0008 (0x0008 - 0x0000)
struct BPI_Controls_C_LookUp final
{
public:
	double                                        Axis;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Controls_C_LookUp) == 0x000008, "Wrong alignment on BPI_Controls_C_LookUp");
static_assert(sizeof(BPI_Controls_C_LookUp) == 0x000008, "Wrong size on BPI_Controls_C_LookUp");
static_assert(offsetof(BPI_Controls_C_LookUp, Axis) == 0x000000, "Member 'BPI_Controls_C_LookUp::Axis' has a wrong offset!");

// Function BPI_Controls.BPI_Controls_C.MoveForward
// 0x0008 (0x0008 - 0x0000)
struct BPI_Controls_C_MoveForward final
{
public:
	double                                        Axis;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Controls_C_MoveForward) == 0x000008, "Wrong alignment on BPI_Controls_C_MoveForward");
static_assert(sizeof(BPI_Controls_C_MoveForward) == 0x000008, "Wrong size on BPI_Controls_C_MoveForward");
static_assert(offsetof(BPI_Controls_C_MoveForward, Axis) == 0x000000, "Member 'BPI_Controls_C_MoveForward::Axis' has a wrong offset!");

// Function BPI_Controls.BPI_Controls_C.MoveRight
// 0x0008 (0x0008 - 0x0000)
struct BPI_Controls_C_MoveRight final
{
public:
	double                                        Axis;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Controls_C_MoveRight) == 0x000008, "Wrong alignment on BPI_Controls_C_MoveRight");
static_assert(sizeof(BPI_Controls_C_MoveRight) == 0x000008, "Wrong size on BPI_Controls_C_MoveRight");
static_assert(offsetof(BPI_Controls_C_MoveRight, Axis) == 0x000000, "Member 'BPI_Controls_C_MoveRight::Axis' has a wrong offset!");

// Function BPI_Controls.BPI_Controls_C.Sprint
// 0x0001 (0x0001 - 0x0000)
struct BPI_Controls_C_Sprint final
{
public:
	bool                                          Param_Sprint;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Controls_C_Sprint) == 0x000001, "Wrong alignment on BPI_Controls_C_Sprint");
static_assert(sizeof(BPI_Controls_C_Sprint) == 0x000001, "Wrong size on BPI_Controls_C_Sprint");
static_assert(offsetof(BPI_Controls_C_Sprint, Param_Sprint) == 0x000000, "Member 'BPI_Controls_C_Sprint::Param_Sprint' has a wrong offset!");

}

