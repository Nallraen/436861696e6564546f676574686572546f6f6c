#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Gamestate

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_Gamestate.BPI_Gamestate_C
// 0x0000 (0x0028 - 0x0028)
class IBPI_Gamestate_C final : public IInterface
{
public:
	void AddRescuePoint(class ABP_RescuePoint_C* RescuePoint);
	bool EndCinematicPassed();
	void EveryoneIsFalling(bool* Falling);
	bool FindPlayerStart(struct FTransform* Transform);
	void GetChainMiddleLocation(const class FString& Attached01, const class FString& Attached02, struct FVector* RepLocation);
	void GetGameBegun(bool* HasBegun);
	void GetHighestRescuePoint(class ABP_RescuePoint_C** Return, bool* Found);
	void GetLavaDead(bool* Dead);
	void GetLaveMode(bool* Lava);
	void GetNearestRescueByLocation(const struct FVector& Location, class ABP_RescuePoint_C** Rescue, bool* Found);
	void GetPawnArray(TArray<class APawn*>* Array);
	void GetPlayersMiddle(struct FVector* Location);
	void GetTchat(TArray<struct FS_TchatElement>* Tchat);
	void GetTimer(int32* Timer);
	void IncrementSpawnedCharacter(int32* Result);
	void LavaDeath_SRV_();
	void NearestRescuePoint(bool Lava, bool* Found, class ABP_RescuePoint_C** RescuePoint);
	void SendToChatSRV(const class FString& Param_Name, const class FString& Message, const struct FLinearColor& Color);
	void ServerTravel(const class FString& Command);
	void SetTimer(int32 Timer);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPI_Gamestate_C">();
	}
	static class IBPI_Gamestate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_Gamestate_C>();
	}
};
static_assert(alignof(IBPI_Gamestate_C) == 0x000008, "Wrong alignment on IBPI_Gamestate_C");
static_assert(sizeof(IBPI_Gamestate_C) == 0x000028, "Wrong size on IBPI_Gamestate_C");

}

