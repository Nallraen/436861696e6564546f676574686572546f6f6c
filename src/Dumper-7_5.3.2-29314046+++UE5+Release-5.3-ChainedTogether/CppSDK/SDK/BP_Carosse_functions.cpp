#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Carosse

#include "Basic.hpp"

#include "BP_Carosse_classes.hpp"
#include "BP_Carosse_parameters.hpp"


namespace SDK
{

// Function BP_Carosse.BP_Carosse_C.ExecuteUbergraph_BP_Carosse
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Carosse_C::ExecuteUbergraph_BP_Carosse(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Carosse_C", "ExecuteUbergraph_BP_Carosse");

	Params::BP_Carosse_C_ExecuteUbergraph_BP_Carosse Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Carosse.BP_Carosse_C.HorseGrounded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Grounded                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Carosse_C::HorseGrounded(bool* Param_Grounded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Carosse_C", "HorseGrounded");

	Params::BP_Carosse_C_HorseGrounded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Grounded != nullptr)
		*Param_Grounded = Parms.Param_Grounded;
}


// Function BP_Carosse.BP_Carosse_C.OnDriverCarosseInvalid
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Carosse_C::OnDriverCarosseInvalid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Carosse_C", "OnDriverCarosseInvalid");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Carosse.BP_Carosse_C.OnDriverCarosseValid
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Carosse_C::OnDriverCarosseValid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Carosse_C", "OnDriverCarosseValid");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Carosse.BP_Carosse_C.PossessedOwner
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_Carosse_C::PossessedOwner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Carosse_C", "PossessedOwner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Carosse.BP_Carosse_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Carosse_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Carosse_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Carosse.BP_Carosse_C.ReceivePossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Carosse_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Carosse_C", "ReceivePossessed");

	Params::BP_Carosse_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Carosse.BP_Carosse_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Carosse_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Carosse_C", "ReceiveTick");

	Params::BP_Carosse_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Carosse.BP_Carosse_C.SwitchCarVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Carosse_C::SwitchCarVisibility(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Carosse_C", "SwitchCarVisibility");

	Params::BP_Carosse_C_SwitchCarVisibility Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Carosse.BP_Carosse_C.UpdateHorseLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Carosse_C::UpdateHorseLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Carosse_C", "UpdateHorseLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Carosse.BP_Carosse_C.UpdateSound
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Carosse_C::UpdateSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Carosse_C", "UpdateSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Carosse.BP_Carosse_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Carosse_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Carosse_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Carosse.BP_Carosse_C.WheelLeftRight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  NewRotation_Yaw                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Carosse_C::WheelLeftRight(double NewRotation_Yaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Carosse_C", "WheelLeftRight");

	Params::BP_Carosse_C_WheelLeftRight Parms{};

	Parms.NewRotation_Yaw = NewRotation_Yaw;

	UObject::ProcessEvent(Func, &Parms);
}

}

