#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GS_Game

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SteamCorePro_structs.hpp"
#include "S_PhysxChainLocation_structs.hpp"
#include "S_TchatElement_structs.hpp"
#include "E_ChoosenChar_structs.hpp"
#include "S_SteamIDAndSkin_structs.hpp"


namespace SDK::Params
{

// Function GS_Game.GS_Game_C.ActorToHideInLobby
// 0x0038 (0x0038 - 0x0000)
struct GS_Game_C_ActorToHideInLobby final
{
public:
	bool                                          bNewHidden;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33EF[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F0[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_ActorToHideInLobby) == 0x000008, "Wrong alignment on GS_Game_C_ActorToHideInLobby");
static_assert(sizeof(GS_Game_C_ActorToHideInLobby) == 0x000038, "Wrong size on GS_Game_C_ActorToHideInLobby");
static_assert(offsetof(GS_Game_C_ActorToHideInLobby, bNewHidden) == 0x000000, "Member 'GS_Game_C_ActorToHideInLobby::bNewHidden' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ActorToHideInLobby, Temp_int_Array_Index_Variable) == 0x000004, "Member 'GS_Game_C_ActorToHideInLobby::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ActorToHideInLobby, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'GS_Game_C_ActorToHideInLobby::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ActorToHideInLobby, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'GS_Game_C_ActorToHideInLobby::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ActorToHideInLobby, CallFunc_GetAllActorsWithTag_OutActors) == 0x000010, "Member 'GS_Game_C_ActorToHideInLobby::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ActorToHideInLobby, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'GS_Game_C_ActorToHideInLobby::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ActorToHideInLobby, CallFunc_Array_Get_Item) == 0x000028, "Member 'GS_Game_C_ActorToHideInLobby::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ActorToHideInLobby, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'GS_Game_C_ActorToHideInLobby::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.AddChatElemAll
// 0x0030 (0x0030 - 0x0000)
struct GS_Game_C_AddChatElemAll final
{
public:
	struct FS_TchatElement                        NewElem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_AddChatElemAll) == 0x000008, "Wrong alignment on GS_Game_C_AddChatElemAll");
static_assert(sizeof(GS_Game_C_AddChatElemAll) == 0x000030, "Wrong size on GS_Game_C_AddChatElemAll");
static_assert(offsetof(GS_Game_C_AddChatElemAll, NewElem) == 0x000000, "Member 'GS_Game_C_AddChatElemAll::NewElem' has a wrong offset!");

// Function GS_Game.GS_Game_C.AddFirstSafeLocation
// 0x0020 (0x0020 - 0x0000)
struct GS_Game_C_AddFirstSafeLocation final
{
public:
	TArray<class ABP_RescuePoint_C*>              CallFunc_GetAllActorsOfClassWithTag_OutActors;     // 0x0000(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F1[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RescuePoint_C*                      CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_AddFirstSafeLocation) == 0x000008, "Wrong alignment on GS_Game_C_AddFirstSafeLocation");
static_assert(sizeof(GS_Game_C_AddFirstSafeLocation) == 0x000020, "Wrong size on GS_Game_C_AddFirstSafeLocation");
static_assert(offsetof(GS_Game_C_AddFirstSafeLocation, CallFunc_GetAllActorsOfClassWithTag_OutActors) == 0x000000, "Member 'GS_Game_C_AddFirstSafeLocation::CallFunc_GetAllActorsOfClassWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddFirstSafeLocation, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000010, "Member 'GS_Game_C_AddFirstSafeLocation::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddFirstSafeLocation, CallFunc_Array_Get_Item) == 0x000018, "Member 'GS_Game_C_AddFirstSafeLocation::CallFunc_Array_Get_Item' has a wrong offset!");

// Function GS_Game.GS_Game_C.AddLocalMP_Players
// 0x0090 (0x0090 - 0x0000)
struct GS_Game_C_AddLocalMP_Players final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerController_C> K2Node_DynamicCast_AsBPI_Player_Controller;        // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F2[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_CreatePlayer_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_CreatePlayer_ReturnValue_1;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_CreatePlayer_ReturnValue_2;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_CreatePlayer_ReturnValue_3;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_CreatePlayer_ReturnValue_4;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_CreatePlayer_ReturnValue_5;               // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_CreatePlayer_ReturnValue_6;               // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_ChoosenChar                                 CallFunc_Array_Get_Item;                           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F3[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameInstance_C>   K2Node_DynamicCast_AsBPI_Game_Instance;            // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F4[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayersInSession_PlayersInSession;     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLocalMultiplayer_ReturnValue;          // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_AddLocalMP_Players) == 0x000008, "Wrong alignment on GS_Game_C_AddLocalMP_Players");
static_assert(sizeof(GS_Game_C_AddLocalMP_Players) == 0x000090, "Wrong size on GS_Game_C_AddLocalMP_Players");
static_assert(offsetof(GS_Game_C_AddLocalMP_Players, Temp_int_Array_Index_Variable) == 0x000000, "Member 'GS_Game_C_AddLocalMP_Players::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddLocalMP_Players, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'GS_Game_C_AddLocalMP_Players::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddLocalMP_Players, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'GS_Game_C_AddLocalMP_Players::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddLocalMP_Players, K2Node_DynamicCast_AsBPI_Player_Controller) == 0x000010, "Member 'GS_Game_C_AddLocalMP_Players::K2Node_DynamicCast_AsBPI_Player_Controller' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddLocalMP_Players, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GS_Game_C_AddLocalMP_Players::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddLocalMP_Players, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'GS_Game_C_AddLocalMP_Players::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddLocalMP_Players, CallFunc_CreatePlayer_ReturnValue) == 0x000028, "Member 'GS_Game_C_AddLocalMP_Players::CallFunc_CreatePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddLocalMP_Players, CallFunc_CreatePlayer_ReturnValue_1) == 0x000030, "Member 'GS_Game_C_AddLocalMP_Players::CallFunc_CreatePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddLocalMP_Players, CallFunc_CreatePlayer_ReturnValue_2) == 0x000038, "Member 'GS_Game_C_AddLocalMP_Players::CallFunc_CreatePlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddLocalMP_Players, CallFunc_CreatePlayer_ReturnValue_3) == 0x000040, "Member 'GS_Game_C_AddLocalMP_Players::CallFunc_CreatePlayer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddLocalMP_Players, CallFunc_CreatePlayer_ReturnValue_4) == 0x000048, "Member 'GS_Game_C_AddLocalMP_Players::CallFunc_CreatePlayer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddLocalMP_Players, CallFunc_CreatePlayer_ReturnValue_5) == 0x000050, "Member 'GS_Game_C_AddLocalMP_Players::CallFunc_CreatePlayer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddLocalMP_Players, CallFunc_CreatePlayer_ReturnValue_6) == 0x000058, "Member 'GS_Game_C_AddLocalMP_Players::CallFunc_CreatePlayer_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddLocalMP_Players, CallFunc_GetGameInstance_ReturnValue) == 0x000060, "Member 'GS_Game_C_AddLocalMP_Players::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddLocalMP_Players, CallFunc_Array_Get_Item) == 0x000068, "Member 'GS_Game_C_AddLocalMP_Players::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddLocalMP_Players, K2Node_DynamicCast_AsBPI_Game_Instance) == 0x000070, "Member 'GS_Game_C_AddLocalMP_Players::K2Node_DynamicCast_AsBPI_Game_Instance' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddLocalMP_Players, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'GS_Game_C_AddLocalMP_Players::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddLocalMP_Players, CallFunc_GetPlayersInSession_PlayersInSession) == 0x000084, "Member 'GS_Game_C_AddLocalMP_Players::CallFunc_GetPlayersInSession_PlayersInSession' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddLocalMP_Players, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'GS_Game_C_AddLocalMP_Players::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddLocalMP_Players, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'GS_Game_C_AddLocalMP_Players::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddLocalMP_Players, K2Node_SwitchInteger_CmpSuccess) == 0x00008D, "Member 'GS_Game_C_AddLocalMP_Players::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AddLocalMP_Players, CallFunc_GetLocalMultiplayer_ReturnValue) == 0x00008E, "Member 'GS_Game_C_AddLocalMP_Players::CallFunc_GetLocalMultiplayer_ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.AddRescuePoint
// 0x0008 (0x0008 - 0x0000)
struct GS_Game_C_AddRescuePoint final
{
public:
	class ABP_RescuePoint_C*                      RescuePoint;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_AddRescuePoint) == 0x000008, "Wrong alignment on GS_Game_C_AddRescuePoint");
static_assert(sizeof(GS_Game_C_AddRescuePoint) == 0x000008, "Wrong size on GS_Game_C_AddRescuePoint");
static_assert(offsetof(GS_Game_C_AddRescuePoint, RescuePoint) == 0x000000, "Member 'GS_Game_C_AddRescuePoint::RescuePoint' has a wrong offset!");

// Function GS_Game.GS_Game_C.AssignGamepad
// 0x0030 (0x0030 - 0x0000)
struct GS_Game_C_AssignGamepad final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GamepadIndex;                                      // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWM_InputManager*                       CallFunc_Get_WM_InputManager_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWM_HID_Joystick*                       CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F5[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_AssignGamepad) == 0x000008, "Wrong alignment on GS_Game_C_AssignGamepad");
static_assert(sizeof(GS_Game_C_AssignGamepad) == 0x000030, "Wrong size on GS_Game_C_AssignGamepad");
static_assert(offsetof(GS_Game_C_AssignGamepad, PlayerIndex) == 0x000000, "Member 'GS_Game_C_AssignGamepad::PlayerIndex' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AssignGamepad, GamepadIndex) == 0x000004, "Member 'GS_Game_C_AssignGamepad::GamepadIndex' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AssignGamepad, CallFunc_Get_WM_InputManager_ReturnValue) == 0x000008, "Member 'GS_Game_C_AssignGamepad::CallFunc_Get_WM_InputManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AssignGamepad, CallFunc_Map_Find_Value) == 0x000010, "Member 'GS_Game_C_AssignGamepad::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AssignGamepad, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'GS_Game_C_AssignGamepad::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AssignGamepad, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'GS_Game_C_AssignGamepad::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.AttachToFirstCharacter
// 0x0030 (0x0030 - 0x0000)
struct GS_Game_C_AttachToFirstCharacter final
{
public:
	class APawn*                                  Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F6[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_AttachToFirstCharacter) == 0x000008, "Wrong alignment on GS_Game_C_AttachToFirstCharacter");
static_assert(sizeof(GS_Game_C_AttachToFirstCharacter) == 0x000030, "Wrong size on GS_Game_C_AttachToFirstCharacter");
static_assert(offsetof(GS_Game_C_AttachToFirstCharacter, Character) == 0x000000, "Member 'GS_Game_C_AttachToFirstCharacter::Character' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToFirstCharacter, K2Node_DynamicCast_AsBPI_Character) == 0x000008, "Member 'GS_Game_C_AttachToFirstCharacter::K2Node_DynamicCast_AsBPI_Character' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToFirstCharacter, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GS_Game_C_AttachToFirstCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToFirstCharacter, CallFunc_Array_Get_Item) == 0x000020, "Member 'GS_Game_C_AttachToFirstCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToFirstCharacter, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'GS_Game_C_AttachToFirstCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.AttachToLastCharacter
// 0x0030 (0x0030 - 0x0000)
struct GS_Game_C_AttachToLastCharacter final
{
public:
	class APawn*                                  Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F7[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_AttachToLastCharacter) == 0x000008, "Wrong alignment on GS_Game_C_AttachToLastCharacter");
static_assert(sizeof(GS_Game_C_AttachToLastCharacter) == 0x000030, "Wrong size on GS_Game_C_AttachToLastCharacter");
static_assert(offsetof(GS_Game_C_AttachToLastCharacter, Character) == 0x000000, "Member 'GS_Game_C_AttachToLastCharacter::Character' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToLastCharacter, K2Node_DynamicCast_AsBPI_Character) == 0x000008, "Member 'GS_Game_C_AttachToLastCharacter::K2Node_DynamicCast_AsBPI_Character' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToLastCharacter, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GS_Game_C_AttachToLastCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToLastCharacter, CallFunc_Array_LastIndex_ReturnValue) == 0x00001C, "Member 'GS_Game_C_AttachToLastCharacter::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToLastCharacter, CallFunc_Array_Get_Item) == 0x000020, "Member 'GS_Game_C_AttachToLastCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToLastCharacter, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'GS_Game_C_AttachToLastCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.AttachToNextCharacter
// 0x0038 (0x0038 - 0x0000)
struct GS_Game_C_AttachToNextCharacter final
{
public:
	class APawn*                                  Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F8[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_AttachToNextCharacter) == 0x000008, "Wrong alignment on GS_Game_C_AttachToNextCharacter");
static_assert(sizeof(GS_Game_C_AttachToNextCharacter) == 0x000038, "Wrong size on GS_Game_C_AttachToNextCharacter");
static_assert(offsetof(GS_Game_C_AttachToNextCharacter, Character) == 0x000000, "Member 'GS_Game_C_AttachToNextCharacter::Character' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToNextCharacter, Param_Index) == 0x000008, "Member 'GS_Game_C_AttachToNextCharacter::Param_Index' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToNextCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'GS_Game_C_AttachToNextCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToNextCharacter, K2Node_DynamicCast_AsBPI_Character) == 0x000010, "Member 'GS_Game_C_AttachToNextCharacter::K2Node_DynamicCast_AsBPI_Character' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToNextCharacter, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GS_Game_C_AttachToNextCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToNextCharacter, CallFunc_Array_Get_Item) == 0x000028, "Member 'GS_Game_C_AttachToNextCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToNextCharacter, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'GS_Game_C_AttachToNextCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.AttachToPreviousCharacter
// 0x0050 (0x0050 - 0x0000)
struct GS_Game_C_AttachToPreviousCharacter final
{
public:
	class APawn*                                  Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F9[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33FA[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_AttachToPreviousCharacter) == 0x000008, "Wrong alignment on GS_Game_C_AttachToPreviousCharacter");
static_assert(sizeof(GS_Game_C_AttachToPreviousCharacter) == 0x000050, "Wrong size on GS_Game_C_AttachToPreviousCharacter");
static_assert(offsetof(GS_Game_C_AttachToPreviousCharacter, Character) == 0x000000, "Member 'GS_Game_C_AttachToPreviousCharacter::Character' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToPreviousCharacter, Param_Index) == 0x000008, "Member 'GS_Game_C_AttachToPreviousCharacter::Param_Index' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToPreviousCharacter, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'GS_Game_C_AttachToPreviousCharacter::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToPreviousCharacter, K2Node_DynamicCast_AsBPI_Character) == 0x000010, "Member 'GS_Game_C_AttachToPreviousCharacter::K2Node_DynamicCast_AsBPI_Character' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToPreviousCharacter, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GS_Game_C_AttachToPreviousCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToPreviousCharacter, CallFunc_Array_Get_Item) == 0x000028, "Member 'GS_Game_C_AttachToPreviousCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToPreviousCharacter, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'GS_Game_C_AttachToPreviousCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToPreviousCharacter, K2Node_DynamicCast_AsBPI_Character_1) == 0x000038, "Member 'GS_Game_C_AttachToPreviousCharacter::K2Node_DynamicCast_AsBPI_Character_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AttachToPreviousCharacter, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'GS_Game_C_AttachToPreviousCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function GS_Game.GS_Game_C.AutoAttachment
// 0x00E0 (0x00E0 - 0x0000)
struct GS_Game_C_AutoAttachment final
{
public:
	bool                                          OpenedChainLocal;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33FB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerController*>              PCs;                                               // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         LocalIndex;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33FC[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  LocalCharacter;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33FD[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33FE[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomGI_C*                            K2Node_DynamicCast_AsCustom_GI;                    // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33FF[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3400[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerController*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0088(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3401[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_Array_Get_Item_2;                         // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character;                // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3402[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3403[0x2];                                     // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3404[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_AutoAttachment) == 0x000008, "Wrong alignment on GS_Game_C_AutoAttachment");
static_assert(sizeof(GS_Game_C_AutoAttachment) == 0x0000E0, "Wrong size on GS_Game_C_AutoAttachment");
static_assert(offsetof(GS_Game_C_AutoAttachment, OpenedChainLocal) == 0x000000, "Member 'GS_Game_C_AutoAttachment::OpenedChainLocal' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, PCs) == 0x000008, "Member 'GS_Game_C_AutoAttachment::PCs' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, LocalIndex) == 0x000018, "Member 'GS_Game_C_AutoAttachment::LocalIndex' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, LocalCharacter) == 0x000020, "Member 'GS_Game_C_AutoAttachment::LocalCharacter' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, Temp_int_Array_Index_Variable) == 0x000028, "Member 'GS_Game_C_AutoAttachment::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'GS_Game_C_AutoAttachment::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'GS_Game_C_AutoAttachment::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'GS_Game_C_AutoAttachment::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'GS_Game_C_AutoAttachment::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'GS_Game_C_AutoAttachment::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'GS_Game_C_AutoAttachment::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, Temp_int_Loop_Counter_Variable_2) == 0x000044, "Member 'GS_Game_C_AutoAttachment::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, CallFunc_Add_IntInt_ReturnValue_2) == 0x000048, "Member 'GS_Game_C_AutoAttachment::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'GS_Game_C_AutoAttachment::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, Temp_int_Array_Index_Variable_2) == 0x000050, "Member 'GS_Game_C_AutoAttachment::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, CallFunc_HasAuthority_ReturnValue) == 0x000054, "Member 'GS_Game_C_AutoAttachment::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, CallFunc_GetGameInstance_ReturnValue) == 0x000058, "Member 'GS_Game_C_AutoAttachment::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, K2Node_DynamicCast_AsCustom_GI) == 0x000060, "Member 'GS_Game_C_AutoAttachment::K2Node_DynamicCast_AsCustom_GI' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'GS_Game_C_AutoAttachment::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, CallFunc_Array_Get_Item) == 0x000070, "Member 'GS_Game_C_AutoAttachment::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, CallFunc_K2_GetPawn_ReturnValue) == 0x000078, "Member 'GS_Game_C_AutoAttachment::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'GS_Game_C_AutoAttachment::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, CallFunc_GetAllActorsOfClass_OutActors) == 0x000088, "Member 'GS_Game_C_AutoAttachment::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'GS_Game_C_AutoAttachment::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'GS_Game_C_AutoAttachment::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, CallFunc_Array_Get_Item_2) == 0x0000A8, "Member 'GS_Game_C_AutoAttachment::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, K2Node_DynamicCast_AsBPI_Character) == 0x0000B0, "Member 'GS_Game_C_AutoAttachment::K2Node_DynamicCast_AsBPI_Character' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'GS_Game_C_AutoAttachment::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, CallFunc_Array_Length_ReturnValue_2) == 0x0000C4, "Member 'GS_Game_C_AutoAttachment::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, CallFunc_Array_Length_ReturnValue_3) == 0x0000C8, "Member 'GS_Game_C_AutoAttachment::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000CC, "Member 'GS_Game_C_AutoAttachment::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000CD, "Member 'GS_Game_C_AutoAttachment::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, CallFunc_Array_Add_ReturnValue) == 0x0000D0, "Member 'GS_Game_C_AutoAttachment::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000D4, "Member 'GS_Game_C_AutoAttachment::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, CallFunc_Array_LastIndex_ReturnValue) == 0x0000D8, "Member 'GS_Game_C_AutoAttachment::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_AutoAttachment, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000DC, "Member 'GS_Game_C_AutoAttachment::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function GS_Game.GS_Game_C.BackupProgress
// 0x0020 (0x0020 - 0x0000)
struct GS_Game_C_BackupProgress final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3405[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomGI_C*                            K2Node_DynamicCast_AsCustom_GI;                    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_BackupProgress) == 0x000008, "Wrong alignment on GS_Game_C_BackupProgress");
static_assert(sizeof(GS_Game_C_BackupProgress) == 0x000020, "Wrong size on GS_Game_C_BackupProgress");
static_assert(offsetof(GS_Game_C_BackupProgress, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'GS_Game_C_BackupProgress::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_BackupProgress, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'GS_Game_C_BackupProgress::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_BackupProgress, K2Node_DynamicCast_AsCustom_GI) == 0x000010, "Member 'GS_Game_C_BackupProgress::K2Node_DynamicCast_AsCustom_GI' has a wrong offset!");
static_assert(offsetof(GS_Game_C_BackupProgress, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GS_Game_C_BackupProgress::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GS_Game_C_BackupProgress, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'GS_Game_C_BackupProgress::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function GS_Game.GS_Game_C.CheckIfEveryoneHasLoadedLevels
// 0x0038 (0x0038 - 0x0000)
struct GS_Game_C_CheckIfEveryoneHasLoadedLevels final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3406[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3407[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3408[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APS_Game_C*                             K2Node_DynamicCast_AsPS_Game;                      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_CheckIfEveryoneHasLoadedLevels) == 0x000008, "Wrong alignment on GS_Game_C_CheckIfEveryoneHasLoadedLevels");
static_assert(sizeof(GS_Game_C_CheckIfEveryoneHasLoadedLevels) == 0x000038, "Wrong size on GS_Game_C_CheckIfEveryoneHasLoadedLevels");
static_assert(offsetof(GS_Game_C_CheckIfEveryoneHasLoadedLevels, ReturnValue) == 0x000000, "Member 'GS_Game_C_CheckIfEveryoneHasLoadedLevels::ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_CheckIfEveryoneHasLoadedLevels, Temp_int_Array_Index_Variable) == 0x000004, "Member 'GS_Game_C_CheckIfEveryoneHasLoadedLevels::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_CheckIfEveryoneHasLoadedLevels, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'GS_Game_C_CheckIfEveryoneHasLoadedLevels::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_CheckIfEveryoneHasLoadedLevels, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'GS_Game_C_CheckIfEveryoneHasLoadedLevels::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_CheckIfEveryoneHasLoadedLevels, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'GS_Game_C_CheckIfEveryoneHasLoadedLevels::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_CheckIfEveryoneHasLoadedLevels, CallFunc_Array_Get_Item) == 0x000018, "Member 'GS_Game_C_CheckIfEveryoneHasLoadedLevels::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_CheckIfEveryoneHasLoadedLevels, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'GS_Game_C_CheckIfEveryoneHasLoadedLevels::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_CheckIfEveryoneHasLoadedLevels, K2Node_DynamicCast_AsPS_Game) == 0x000028, "Member 'GS_Game_C_CheckIfEveryoneHasLoadedLevels::K2Node_DynamicCast_AsPS_Game' has a wrong offset!");
static_assert(offsetof(GS_Game_C_CheckIfEveryoneHasLoadedLevels, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'GS_Game_C_CheckIfEveryoneHasLoadedLevels::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GS_Game.GS_Game_C.CountCustomPS
// 0x0050 (0x0050 - 0x0000)
struct GS_Game_C_CountCustomPS final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ps;                                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3409[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerState*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0020(0x0010)(ReferenceParm)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_340A[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APS_Game_C*                             K2Node_DynamicCast_AsPS_Game;                      // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_CountCustomPS) == 0x000008, "Wrong alignment on GS_Game_C_CountCustomPS");
static_assert(sizeof(GS_Game_C_CountCustomPS) == 0x000050, "Wrong size on GS_Game_C_CountCustomPS");
static_assert(offsetof(GS_Game_C_CountCustomPS, Count) == 0x000000, "Member 'GS_Game_C_CountCustomPS::Count' has a wrong offset!");
static_assert(offsetof(GS_Game_C_CountCustomPS, Ps) == 0x000004, "Member 'GS_Game_C_CountCustomPS::Ps' has a wrong offset!");
static_assert(offsetof(GS_Game_C_CountCustomPS, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'GS_Game_C_CountCustomPS::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_CountCustomPS, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'GS_Game_C_CountCustomPS::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_CountCustomPS, Temp_int_Array_Index_Variable) == 0x000010, "Member 'GS_Game_C_CountCustomPS::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_CountCustomPS, Temp_int_Variable) == 0x000014, "Member 'GS_Game_C_CountCustomPS::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_CountCustomPS, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'GS_Game_C_CountCustomPS::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_CountCustomPS, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member 'GS_Game_C_CountCustomPS::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_CountCustomPS, CallFunc_Array_Get_Item) == 0x000030, "Member 'GS_Game_C_CountCustomPS::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_CountCustomPS, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'GS_Game_C_CountCustomPS::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_CountCustomPS, K2Node_DynamicCast_AsPS_Game) == 0x000040, "Member 'GS_Game_C_CountCustomPS::K2Node_DynamicCast_AsPS_Game' has a wrong offset!");
static_assert(offsetof(GS_Game_C_CountCustomPS, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'GS_Game_C_CountCustomPS::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GS_Game_C_CountCustomPS, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'GS_Game_C_CountCustomPS::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.CountSpawnedCharacters
// 0x0020 (0x0020 - 0x0000)
struct GS_Game_C_CountSpawnedCharacters final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_340B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_CountSpawnedCharacters) == 0x000008, "Wrong alignment on GS_Game_C_CountSpawnedCharacters");
static_assert(sizeof(GS_Game_C_CountSpawnedCharacters) == 0x000020, "Wrong size on GS_Game_C_CountSpawnedCharacters");
static_assert(offsetof(GS_Game_C_CountSpawnedCharacters, ReturnValue) == 0x000000, "Member 'GS_Game_C_CountSpawnedCharacters::ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_CountSpawnedCharacters, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000008, "Member 'GS_Game_C_CountSpawnedCharacters::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_CountSpawnedCharacters, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'GS_Game_C_CountSpawnedCharacters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.EndCinematicPassed
// 0x0001 (0x0001 - 0x0000)
struct GS_Game_C_EndCinematicPassed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_EndCinematicPassed) == 0x000001, "Wrong alignment on GS_Game_C_EndCinematicPassed");
static_assert(sizeof(GS_Game_C_EndCinematicPassed) == 0x000001, "Wrong size on GS_Game_C_EndCinematicPassed");
static_assert(offsetof(GS_Game_C_EndCinematicPassed, ReturnValue) == 0x000000, "Member 'GS_Game_C_EndCinematicPassed::ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.EveryoneFall?
// 0x0038 (0x0038 - 0x0000)
struct GS_Game_C_EveryoneFall_ final
{
public:
	bool                                          Fall;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFall;                                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_340C[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACharacter*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_340D[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_EveryoneFall_) == 0x000008, "Wrong alignment on GS_Game_C_EveryoneFall_");
static_assert(sizeof(GS_Game_C_EveryoneFall_) == 0x000038, "Wrong size on GS_Game_C_EveryoneFall_");
static_assert(offsetof(GS_Game_C_EveryoneFall_, Fall) == 0x000000, "Member 'GS_Game_C_EveryoneFall_::Fall' has a wrong offset!");
static_assert(offsetof(GS_Game_C_EveryoneFall_, bFall) == 0x000001, "Member 'GS_Game_C_EveryoneFall_::bFall' has a wrong offset!");
static_assert(offsetof(GS_Game_C_EveryoneFall_, Temp_int_Array_Index_Variable) == 0x000004, "Member 'GS_Game_C_EveryoneFall_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_EveryoneFall_, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'GS_Game_C_EveryoneFall_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_EveryoneFall_, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'GS_Game_C_EveryoneFall_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_EveryoneFall_, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'GS_Game_C_EveryoneFall_::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_EveryoneFall_, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'GS_Game_C_EveryoneFall_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_EveryoneFall_, CallFunc_Array_Get_Item) == 0x000028, "Member 'GS_Game_C_EveryoneFall_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_EveryoneFall_, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'GS_Game_C_EveryoneFall_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_EveryoneFall_, CallFunc_IsFalling_ReturnValue) == 0x000031, "Member 'GS_Game_C_EveryoneFall_::CallFunc_IsFalling_ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.EveryoneIsFalling
// 0x0002 (0x0002 - 0x0000)
struct GS_Game_C_EveryoneIsFalling final
{
public:
	bool                                          Falling;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fall;                                              // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_EveryoneIsFalling) == 0x000001, "Wrong alignment on GS_Game_C_EveryoneIsFalling");
static_assert(sizeof(GS_Game_C_EveryoneIsFalling) == 0x000002, "Wrong size on GS_Game_C_EveryoneIsFalling");
static_assert(offsetof(GS_Game_C_EveryoneIsFalling, Falling) == 0x000000, "Member 'GS_Game_C_EveryoneIsFalling::Falling' has a wrong offset!");
static_assert(offsetof(GS_Game_C_EveryoneIsFalling, Fall) == 0x000001, "Member 'GS_Game_C_EveryoneIsFalling::Fall' has a wrong offset!");

// Function GS_Game.GS_Game_C.ExecuteUbergraph_GS_Game
// 0x05F0 (0x05F0 - 0x0000)
struct GS_Game_C_ExecuteUbergraph_GS_Game final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_340E[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_340F[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3410[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Command;                        // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_Command;                              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3411[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3412[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABP_RescuePoint_C*                      K2Node_Event_RescuePoint;                          // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3413[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_TchatElement                        K2Node_CustomEvent_NewElem;                        // 0x0080(0x0030)(HasGetValueTypeHash)
	class FString                                 K2Node_Event_Name;                                 // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_Message;                              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_Color;                                // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3414[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_TchatElement                        K2Node_MakeStruct_S_TchatElement;                  // 0x00E8(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_WorldLoader_C*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0128(0x0010)(ReferenceParm)
	class APC_Game_C*                             K2Node_DynamicCast_AsPC_Game;                      // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3415[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WorldLoader_C*                      CallFunc_Array_Get_Item;                           // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountCustomPS_Count;                      // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSpawnWithoutLobby_ReturnValue;         // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3416[0x3];                                     // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3417[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerController*>              CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0160(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSpawnWithoutLobby_ReturnValue_1;       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLocalMultiplayer_ReturnValue;          // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3418[0x6];                                     // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RescuePoint_C*                      K2Node_CustomEvent_RescuePoint;                    // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ExitingCar;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3419[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Timer;                                // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_5;               // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341A[0x3];                                     // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341B[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerController*>              CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x01A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341C[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACameraActor*>                   CallFunc_GetAllActorsOfClassWithTag_OutActors;     // 0x01B8(0x0010)(ReferenceParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACameraActor*                           CallFunc_Array_Get_Item_1;                         // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class APC_Game_C*>                     CallFunc_GetAllActorsOfClass_OutActors_3;          // 0x01E8(0x0010)(ReferenceParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APC_Game_C*                             CallFunc_Array_Get_Item_2;                         // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstance_C>   K2Node_DynamicCast_AsBPI_Game_Instance;            // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341D[0x3];                                     // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayersInSession_PlayersInSession;     // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfEveryoneHasLoadedLevels_ReturnValue; // 0x0226(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_6;               // 0x0227(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341E[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstance_C>   K2Node_DynamicCast_AsBPI_Game_Instance_1;          // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341F[0x7];                                     // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0250(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetPlayersInSession_PlayersInSession_1;   // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3420[0x4];                                     // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_3;                         // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character;                // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3421[0x2];                                     // 0x0282(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3422[0x7];                                     // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftClassPtr<class UClass>>           K2Node_MakeArray_Array;                            // 0x02A0(0x0010)(ReferenceParm)
	class FString                                 K2Node_CustomEvent_Value;                          // 0x02B0(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_6;        // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSteamSessionSearchSetting             CallFunc_MakeSearchString_ReturnValue;             // 0x02C8(0x0020)()
	TMap<class FString, struct FSteamSessionSearchSetting> K2Node_MakeMap_Map;                                // 0x02E8(0x0050)()
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0338(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3423[0x6];                                     // 0x035A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomGI_C*                            K2Node_DynamicCast_AsCustom_GI;                    // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3424[0x2];                                     // 0x0372(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0374(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_7;               // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3425[0x3];                                     // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3426[0x4];                                     // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_4;            // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstance_C>   K2Node_DynamicCast_AsBPI_Game_Instance_2;          // 0x03A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3427[0x7];                                     // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameInstanceWithSave_C> K2Node_DynamicCast_AsBPI_Game_Instance_with_Save;  // 0x03B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInstructionsAlreadyShown_Shown;        // 0x03C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3428[0x6];                                     // 0x03CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULavaEnd_W_C*                           CallFunc_Create_ReturnValue;                       // 0x03D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3429[0x7];                                     // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item_4;                         // 0x03E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342A[0x3];                                     // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasEveryPC_AValidPawn_ReturnValue;        // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342B[0x7];                                     // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342C[0x7];                                     // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_5;            // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomGI_C*                            K2Node_DynamicCast_AsCustom_GI_1;                  // 0x0438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342D[0x3];                                     // 0x0441(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumPlayers_ReturnValue;                // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0448(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342E[0x7];                                     // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_6;            // 0x0460(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomGI_C*                            K2Node_DynamicCast_AsCustom_GI_2;                  // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342F[0x6];                                     // 0x0472(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RescuePoint_C*                      CallFunc_GetNearestRescueByLocation_Rescue;        // 0x0478(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNearestRescueByLocation_found;         // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3430[0x2];                                     // 0x0482(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBiomeByName_Found;                     // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3431[0x6];                                     // 0x048A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABiomeText_BP_C*                        CallFunc_GetBiomeByName_Biome;                     // 0x0490(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3432[0x6];                                     // 0x049A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_SoloMultiSwitcher_C*>        CallFunc_GetAllActorsOfClass_OutActors_4;          // 0x04A0(0x0010)(ReferenceParm)
	bool                                          CallFunc_HasAuthority_ReturnValue_8;               // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3433[0x7];                                     // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoloMultiSwitcher_C*                CallFunc_Array_Get_Item_5;                         // 0x04B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftClassPtr<class UClass>>           K2Node_MakeArray_Array_1;                          // 0x04C0(0x0010)(ReferenceParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_7;            // 0x04D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomGI_C*                            K2Node_DynamicCast_AsCustom_GI_3;                  // 0x04D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_9;               // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3434[0x6];                                     // 0x04E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USteamCoreProUpdateSession*             CallFunc_UpdateSteamCoreProSession_ReturnValue;    // 0x04E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_10;              // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3435[0x6];                                     // 0x04F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Lobby_C*                             CallFunc_Create_ReturnValue_1;                     // 0x04F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_11;              // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3436[0x7];                                     // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Teleport_C*                          CallFunc_Create_ReturnValue_2;                     // 0x0508(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3437[0x3];                                     // 0x0511(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_Array_Get_Item_6;                         // 0x0518(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3438[0x4];                                     // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerController_C> K2Node_DynamicCast_AsBPI_Player_Controller;        // 0x0528(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0539(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3439[0x6];                                     // 0x053A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_8;            // 0x0540(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstance_C>   K2Node_DynamicCast_AsBPI_Game_Instance_3;          // 0x0548(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343A[0x3];                                     // 0x0559(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayersInSession_PlayersInSession_2;   // 0x055C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountSpawnedCharacters_ReturnValue;       // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343B[0x4];                                     // 0x0564(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0568(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343C[0x7];                                     // 0x0579(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0580(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0590(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x05A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x05B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumPlayers_ReturnValue_1;              // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343D[0x4];                                     // 0x05C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_LoadingScreen_C*                     CallFunc_Create_ReturnValue_3;                     // 0x05C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343E[0x7];                                     // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APawn*>                          CallFunc_MakePawnsArray_Array;                     // 0x05D8(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x05E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_12;              // 0x05EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_ExecuteUbergraph_GS_Game) == 0x000008, "Wrong alignment on GS_Game_C_ExecuteUbergraph_GS_Game");
static_assert(sizeof(GS_Game_C_ExecuteUbergraph_GS_Game) == 0x0005F0, "Wrong size on GS_Game_C_ExecuteUbergraph_GS_Game");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, EntryPoint) == 0x000000, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::EntryPoint' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, Temp_int_Array_Index_Variable) == 0x000010, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_HasAuthority_ReturnValue_1) == 0x000014, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, Temp_bool_IsClosed_Variable) == 0x000015, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_HasAuthority_ReturnValue_2) == 0x000016, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_HasAuthority_ReturnValue_3) == 0x000017, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_HasAuthority_ReturnValue_4) == 0x000018, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, Temp_bool_IsClosed_Variable_1) == 0x000020, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, Temp_bool_Has_Been_Initd_Variable) == 0x000021, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_CustomEvent_Command) == 0x000028, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_CustomEvent_Command' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_Event_Command) == 0x000038, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_Event_Command' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_CreateDelegate_OutputDelegate) == 0x000054, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000068, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_Event_RescuePoint) == 0x000070, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_Event_RescuePoint' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Array_AddUnique_ReturnValue) == 0x000078, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_CustomEvent_NewElem) == 0x000080, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_CustomEvent_NewElem' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_Event_Name) == 0x0000B0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_Event_Name' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_Event_Message) == 0x0000C0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_Event_Message' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_Event_Color) == 0x0000D0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_Event_Color' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Array_Add_ReturnValue) == 0x0000E0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_MakeStruct_S_TchatElement) == 0x0000E8, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_MakeStruct_S_TchatElement' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Add_IntInt_ReturnValue_1) == 0x000118, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_Event_DeltaSeconds) == 0x00011C, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetPlayerController_ReturnValue_1) == 0x000120, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetAllActorsOfClass_OutActors) == 0x000128, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_AsPC_Game) == 0x000138, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_AsPC_Game' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Array_Get_Item) == 0x000148, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_CountCustomPS_Count) == 0x000150, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_CountCustomPS_Count' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetSpawnWithoutLobby_ReturnValue) == 0x000154, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetSpawnWithoutLobby_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, Temp_int_Array_Index_Variable_2) == 0x000158, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000160, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, Temp_int_Loop_Counter_Variable_1) == 0x000170, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Add_IntInt_ReturnValue_2) == 0x000174, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetSpawnWithoutLobby_ReturnValue_1) == 0x000178, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetSpawnWithoutLobby_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetLocalMultiplayer_ReturnValue) == 0x000179, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetLocalMultiplayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_CustomEvent_RescuePoint) == 0x000180, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_CustomEvent_RescuePoint' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_CustomEvent_ExitingCar) == 0x000188, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_CustomEvent_ExitingCar' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_Event_Timer) == 0x00018C, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_Event_Timer' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, Temp_int_Loop_Counter_Variable_2) == 0x000190, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_HasAuthority_ReturnValue_5) == 0x000194, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_HasAuthority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Add_IntInt_ReturnValue_3) == 0x000198, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x0001A0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Array_Length_ReturnValue) == 0x0001B0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetAllActorsOfClassWithTag_OutActors) == 0x0001B8, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetAllActorsOfClassWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetPlayerController_ReturnValue_2) == 0x0001C8, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Array_Get_Item_1) == 0x0001D0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetPlayerController_ReturnValue_3) == 0x0001D8, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetPlayerController_ReturnValue_4) == 0x0001E0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetAllActorsOfClass_OutActors_3) == 0x0001E8, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetAllActorsOfClass_OutActors_3' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetGameInstance_ReturnValue) == 0x0001F8, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Array_Get_Item_2) == 0x000200, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_AsBPI_Game_Instance) == 0x000208, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_AsBPI_Game_Instance' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_bSuccess_1) == 0x000218, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetPlayersInSession_PlayersInSession) == 0x00021C, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetPlayersInSession_PlayersInSession' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Array_Length_ReturnValue_1) == 0x000220, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Less_IntInt_ReturnValue) == 0x000224, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000225, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_CheckIfEveryoneHasLoadedLevels_ReturnValue) == 0x000226, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_CheckIfEveryoneHasLoadedLevels_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_HasAuthority_ReturnValue_6) == 0x000227, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_HasAuthority_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, Temp_bool_Has_Been_Initd_Variable_1) == 0x000228, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetGameInstance_ReturnValue_1) == 0x000230, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_AsBPI_Game_Instance_1) == 0x000238, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_AsBPI_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_bSuccess_2) == 0x000248, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000250, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetPlayersInSession_PlayersInSession_1) == 0x000260, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetPlayersInSession_PlayersInSession_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Array_Get_Item_3) == 0x000268, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_AsBPI_Character) == 0x000270, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_AsBPI_Character' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_bSuccess_3) == 0x000280, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000281, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Array_Length_ReturnValue_2) == 0x000284, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Less_IntInt_ReturnValue_1) == 0x000288, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetPlayerController_ReturnValue_5) == 0x000290, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_SpawnSound2D_ReturnValue) == 0x000298, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_MakeArray_Array) == 0x0002A0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_CustomEvent_Value) == 0x0002B0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetPlayerController_ReturnValue_6) == 0x0002C0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetPlayerController_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_MakeSearchString_ReturnValue) == 0x0002C8, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_MakeSearchString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_MakeMap_Map) == 0x0002E8, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetPlayerName_ReturnValue) == 0x000338, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000348, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, Temp_bool_IsClosed_Variable_2) == 0x000358, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000359, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetGameInstance_ReturnValue_2) == 0x000360, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_AsCustom_GI) == 0x000368, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_AsCustom_GI' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_bSuccess_4) == 0x000370, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, Temp_bool_Has_Been_Initd_Variable_2) == 0x000371, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_CreateDelegate_OutputDelegate_1) == 0x000374, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_HasAuthority_ReturnValue_7) == 0x000384, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_HasAuthority_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, Temp_int_Array_Index_Variable_3) == 0x000388, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetGameInstance_ReturnValue_3) == 0x000390, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetGameInstance_ReturnValue_4) == 0x000398, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetGameInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_AsBPI_Game_Instance_2) == 0x0003A0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_AsBPI_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_bSuccess_5) == 0x0003B0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_AsBPI_Game_Instance_with_Save) == 0x0003B8, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_AsBPI_Game_Instance_with_Save' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_bSuccess_6) == 0x0003C8, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetInstructionsAlreadyShown_Shown) == 0x0003C9, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetInstructionsAlreadyShown_Shown' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Create_ReturnValue) == 0x0003D0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x0003D8, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Array_Get_Item_4) == 0x0003E0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Array_Length_ReturnValue_3) == 0x0003E8, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Less_IntInt_ReturnValue_2) == 0x0003EC, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, Temp_int_Loop_Counter_Variable_3) == 0x0003F0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Add_IntInt_ReturnValue_4) == 0x0003F4, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_HasEveryPC_AValidPawn_ReturnValue) == 0x0003F8, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_HasEveryPC_AValidPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetPlayerPawn_ReturnValue) == 0x000400, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_IsValid_ReturnValue_1) == 0x000408, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000410, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000418, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetGameInstance_ReturnValue_5) == 0x000430, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetGameInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_AsCustom_GI_1) == 0x000438, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_AsCustom_GI_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_bSuccess_7) == 0x000440, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetNumPlayers_ReturnValue) == 0x000444, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetNumPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000448, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Array_IsEmpty_ReturnValue) == 0x000458, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetGameInstance_ReturnValue_6) == 0x000460, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetGameInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_AsCustom_GI_2) == 0x000468, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_AsCustom_GI_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_bSuccess_8) == 0x000470, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_SwitchEnum_CmpSuccess) == 0x000471, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetNearestRescueByLocation_Rescue) == 0x000478, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetNearestRescueByLocation_Rescue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetNearestRescueByLocation_found) == 0x000480, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetNearestRescueByLocation_found' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000481, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Subtract_IntInt_ReturnValue) == 0x000484, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Contains_ReturnValue) == 0x000488, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetBiomeByName_Found) == 0x000489, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetBiomeByName_Found' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetBiomeByName_Biome) == 0x000490, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetBiomeByName_Biome' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000498, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_IsValid_ReturnValue_2) == 0x000499, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetAllActorsOfClass_OutActors_4) == 0x0004A0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetAllActorsOfClass_OutActors_4' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_HasAuthority_ReturnValue_8) == 0x0004B0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_HasAuthority_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Array_Get_Item_5) == 0x0004B8, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_MakeArray_Array_1) == 0x0004C0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetGameInstance_ReturnValue_7) == 0x0004D0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetGameInstance_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_AsCustom_GI_3) == 0x0004D8, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_AsCustom_GI_3' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_bSuccess_9) == 0x0004E0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_HasAuthority_ReturnValue_9) == 0x0004E1, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_HasAuthority_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_UpdateSteamCoreProSession_ReturnValue) == 0x0004E8, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_UpdateSteamCoreProSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_HasAuthority_ReturnValue_10) == 0x0004F0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_HasAuthority_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_IsValid_ReturnValue_3) == 0x0004F1, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Create_ReturnValue_1) == 0x0004F8, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_HasAuthority_ReturnValue_11) == 0x000500, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_HasAuthority_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Create_ReturnValue_2) == 0x000508, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, Temp_bool_IsClosed_Variable_3) == 0x000510, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, Temp_int_Variable) == 0x000514, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Array_Get_Item_6) == 0x000518, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Array_Length_ReturnValue_4) == 0x000520, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_AsBPI_Player_Controller) == 0x000528, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_AsBPI_Player_Controller' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_bSuccess_10) == 0x000538, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Less_IntInt_ReturnValue_3) == 0x000539, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetGameInstance_ReturnValue_8) == 0x000540, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetGameInstance_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_AsBPI_Game_Instance_3) == 0x000548, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_AsBPI_Game_Instance_3' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, K2Node_DynamicCast_bSuccess_11) == 0x000558, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetPlayersInSession_PlayersInSession_2) == 0x00055C, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetPlayersInSession_PlayersInSession_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_CountSpawnedCharacters_ReturnValue) == 0x000560, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_CountSpawnedCharacters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Conv_IntToString_ReturnValue) == 0x000568, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000578, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Concat_StrStr_ReturnValue) == 0x000580, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000590, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0005A0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0005B0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_GetNumPlayers_ReturnValue_1) == 0x0005C0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_GetNumPlayers_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_Create_ReturnValue_3) == 0x0005C8, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0005D0, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_MakePawnsArray_Array) == 0x0005D8, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_MakePawnsArray_Array' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_IsServer_ReturnValue) == 0x0005E8, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, Temp_bool_Has_Been_Initd_Variable_3) == 0x0005E9, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(GS_Game_C_ExecuteUbergraph_GS_Game, CallFunc_HasAuthority_ReturnValue_12) == 0x0005EA, "Member 'GS_Game_C_ExecuteUbergraph_GS_Game::CallFunc_HasAuthority_ReturnValue_12' has a wrong offset!");

// Function GS_Game.GS_Game_C.FindPlayerStart
// 0x0110 (0x0110 - 0x0000)
struct GS_Game_C_FindPlayerStart final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343F[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3440[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_CustomPlayerStart_C*>        CallFunc_GetAllActorsOfClass_OutActors;            // 0x0070(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3441[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CustomPlayerStart_C*                CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3442[0xF];                                     // 0x0091(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetPlayerStartFromIndex_Transform;        // 0x00A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayerStartFromIndex_ReturnValue;      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_FindPlayerStart) == 0x000010, "Wrong alignment on GS_Game_C_FindPlayerStart");
static_assert(sizeof(GS_Game_C_FindPlayerStart) == 0x000110, "Wrong size on GS_Game_C_FindPlayerStart");
static_assert(offsetof(GS_Game_C_FindPlayerStart, Transform) == 0x000000, "Member 'GS_Game_C_FindPlayerStart::Transform' has a wrong offset!");
static_assert(offsetof(GS_Game_C_FindPlayerStart, ReturnValue) == 0x000060, "Member 'GS_Game_C_FindPlayerStart::ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_FindPlayerStart, Temp_int_Variable) == 0x000064, "Member 'GS_Game_C_FindPlayerStart::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_FindPlayerStart, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'GS_Game_C_FindPlayerStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_FindPlayerStart, CallFunc_GetAllActorsOfClass_OutActors) == 0x000070, "Member 'GS_Game_C_FindPlayerStart::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_FindPlayerStart, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'GS_Game_C_FindPlayerStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_FindPlayerStart, CallFunc_Array_Get_Item) == 0x000088, "Member 'GS_Game_C_FindPlayerStart::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_FindPlayerStart, CallFunc_Greater_IntInt_ReturnValue) == 0x000090, "Member 'GS_Game_C_FindPlayerStart::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_FindPlayerStart, CallFunc_GetPlayerStartFromIndex_Transform) == 0x0000A0, "Member 'GS_Game_C_FindPlayerStart::CallFunc_GetPlayerStartFromIndex_Transform' has a wrong offset!");
static_assert(offsetof(GS_Game_C_FindPlayerStart, CallFunc_GetPlayerStartFromIndex_ReturnValue) == 0x000100, "Member 'GS_Game_C_FindPlayerStart::CallFunc_GetPlayerStartFromIndex_ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.Get Nearest Rescue Point(Server)
// 0x0128 (0x0128 - 0x0000)
struct GS_Game_C_Get_Nearest_Rescue_Point_Server_ final
{
public:
	bool                                          Lava;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3443[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RescuePoint_C*                      Out;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Lava_C*                             Lava_Ref;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          LavaLocal;                                         // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3444[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RescuePoint_C*                      RescuePoint;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        MinDistance;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3445[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Lava_C*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0078(0x0010)(ReferenceParm)
	class ABP_Lava_C*                             CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3446[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGS_Game_C*                             K2Node_DynamicCast_AsGS_Game;                      // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3447[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RescuePoint_C*                      CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3448[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_Get_Nearest_Rescue_Point_Server_) == 0x000008, "Wrong alignment on GS_Game_C_Get_Nearest_Rescue_Point_Server_");
static_assert(sizeof(GS_Game_C_Get_Nearest_Rescue_Point_Server_) == 0x000128, "Wrong size on GS_Game_C_Get_Nearest_Rescue_Point_Server_");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, Lava) == 0x000000, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::Lava' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, ReturnValue) == 0x000001, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, Out) == 0x000008, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::Out' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, Lava_Ref) == 0x000010, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::Lava_Ref' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, LavaLocal) == 0x000018, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::LavaLocal' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, Found) == 0x000019, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::Found' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, RescuePoint) == 0x000020, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::RescuePoint' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, MinDistance) == 0x000028, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::MinDistance' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, Temp_int_Array_Index_Variable) == 0x000030, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_HasAuthority_ReturnValue) == 0x00003C, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_BreakVector_X) == 0x000058, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_BreakVector_Y) == 0x000060, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_BreakVector_Z) == 0x000068, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000070, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_GetAllActorsOfClass_OutActors) == 0x000078, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_Array_Get_Item) == 0x000088, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_GetPlayerPawn_ReturnValue) == 0x000090, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000098, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x0000B0, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_GetGameState_ReturnValue) == 0x0000B8, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, K2Node_DynamicCast_AsGS_Game) == 0x0000C8, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::K2Node_DynamicCast_AsGS_Game' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_Array_Length_ReturnValue) == 0x0000D4, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_Less_IntInt_ReturnValue) == 0x0000E0, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000E8, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_Vector_Distance_ReturnValue) == 0x000100, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_BreakVector_X_1) == 0x000108, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_BreakVector_Y_1) == 0x000110, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_BreakVector_Z_1) == 0x000118, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000120, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Get_Nearest_Rescue_Point_Server_, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000121, "Member 'GS_Game_C_Get_Nearest_Rescue_Point_Server_::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.GetBiomeByName
// 0x0070 (0x0070 - 0x0000)
struct GS_Game_C_GetBiomeByName final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3449[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABiomeText_BP_C*                        Biome;                                             // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344A[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABiomeText_BP_C*>                CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344B[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABiomeText_BP_C*                        CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344C[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_GetBiomeByName) == 0x000008, "Wrong alignment on GS_Game_C_GetBiomeByName");
static_assert(sizeof(GS_Game_C_GetBiomeByName) == 0x000070, "Wrong size on GS_Game_C_GetBiomeByName");
static_assert(offsetof(GS_Game_C_GetBiomeByName, InString) == 0x000000, "Member 'GS_Game_C_GetBiomeByName::InString' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetBiomeByName, Found) == 0x000010, "Member 'GS_Game_C_GetBiomeByName::Found' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetBiomeByName, Biome) == 0x000018, "Member 'GS_Game_C_GetBiomeByName::Biome' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetBiomeByName, Temp_int_Array_Index_Variable) == 0x000020, "Member 'GS_Game_C_GetBiomeByName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetBiomeByName, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'GS_Game_C_GetBiomeByName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetBiomeByName, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'GS_Game_C_GetBiomeByName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetBiomeByName, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'GS_Game_C_GetBiomeByName::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetBiomeByName, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'GS_Game_C_GetBiomeByName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetBiomeByName, CallFunc_Array_Get_Item) == 0x000048, "Member 'GS_Game_C_GetBiomeByName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetBiomeByName, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'GS_Game_C_GetBiomeByName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetBiomeByName, CallFunc_Conv_TextToString_ReturnValue) == 0x000058, "Member 'GS_Game_C_GetBiomeByName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetBiomeByName, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000068, "Member 'GS_Game_C_GetBiomeByName::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.GetChainMiddleLocation
// 0x0088 (0x0088 - 0x0000)
struct GS_Game_C_GetChainMiddleLocation final
{
public:
	class FString                                 Attached01;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Attached02;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                RepLocation;                                       // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_PhysxChainLocation                  CallFunc_Array_Get_Item;                           // 0x0048(0x0038)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_3;          // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_GetChainMiddleLocation) == 0x000008, "Wrong alignment on GS_Game_C_GetChainMiddleLocation");
static_assert(sizeof(GS_Game_C_GetChainMiddleLocation) == 0x000088, "Wrong size on GS_Game_C_GetChainMiddleLocation");
static_assert(offsetof(GS_Game_C_GetChainMiddleLocation, Attached01) == 0x000000, "Member 'GS_Game_C_GetChainMiddleLocation::Attached01' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetChainMiddleLocation, Attached02) == 0x000010, "Member 'GS_Game_C_GetChainMiddleLocation::Attached02' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetChainMiddleLocation, RepLocation) == 0x000020, "Member 'GS_Game_C_GetChainMiddleLocation::RepLocation' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetChainMiddleLocation, Temp_int_Array_Index_Variable) == 0x000038, "Member 'GS_Game_C_GetChainMiddleLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetChainMiddleLocation, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'GS_Game_C_GetChainMiddleLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetChainMiddleLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'GS_Game_C_GetChainMiddleLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetChainMiddleLocation, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'GS_Game_C_GetChainMiddleLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetChainMiddleLocation, CallFunc_Array_Get_Item) == 0x000048, "Member 'GS_Game_C_GetChainMiddleLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetChainMiddleLocation, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'GS_Game_C_GetChainMiddleLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetChainMiddleLocation, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000081, "Member 'GS_Game_C_GetChainMiddleLocation::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetChainMiddleLocation, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000082, "Member 'GS_Game_C_GetChainMiddleLocation::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetChainMiddleLocation, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x000083, "Member 'GS_Game_C_GetChainMiddleLocation::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetChainMiddleLocation, CallFunc_BooleanOR_ReturnValue) == 0x000084, "Member 'GS_Game_C_GetChainMiddleLocation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetChainMiddleLocation, CallFunc_EqualEqual_StrStr_ReturnValue_3) == 0x000085, "Member 'GS_Game_C_GetChainMiddleLocation::CallFunc_EqualEqual_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetChainMiddleLocation, CallFunc_BooleanOR_ReturnValue_1) == 0x000086, "Member 'GS_Game_C_GetChainMiddleLocation::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetChainMiddleLocation, CallFunc_BooleanAND_ReturnValue) == 0x000087, "Member 'GS_Game_C_GetChainMiddleLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.GetGameBegun
// 0x0001 (0x0001 - 0x0000)
struct GS_Game_C_GetGameBegun final
{
public:
	bool                                          HasBegun;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_GetGameBegun) == 0x000001, "Wrong alignment on GS_Game_C_GetGameBegun");
static_assert(sizeof(GS_Game_C_GetGameBegun) == 0x000001, "Wrong size on GS_Game_C_GetGameBegun");
static_assert(offsetof(GS_Game_C_GetGameBegun, HasBegun) == 0x000000, "Member 'GS_Game_C_GetGameBegun::HasBegun' has a wrong offset!");

// Function GS_Game.GS_Game_C.GetHighestRescuePoint
// 0x0078 (0x0078 - 0x0000)
struct GS_Game_C_GetHighestRescuePoint final
{
public:
	class ABP_RescuePoint_C*                      Return;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344D[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RescuePoint_C*                      HighestRescuePoint;                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        MaxHeight;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344E[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RescuePoint_C*                      CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344F[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_GetHighestRescuePoint) == 0x000008, "Wrong alignment on GS_Game_C_GetHighestRescuePoint");
static_assert(sizeof(GS_Game_C_GetHighestRescuePoint) == 0x000078, "Wrong size on GS_Game_C_GetHighestRescuePoint");
static_assert(offsetof(GS_Game_C_GetHighestRescuePoint, Return) == 0x000000, "Member 'GS_Game_C_GetHighestRescuePoint::Return' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetHighestRescuePoint, Found) == 0x000008, "Member 'GS_Game_C_GetHighestRescuePoint::Found' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetHighestRescuePoint, HighestRescuePoint) == 0x000010, "Member 'GS_Game_C_GetHighestRescuePoint::HighestRescuePoint' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetHighestRescuePoint, MaxHeight) == 0x000018, "Member 'GS_Game_C_GetHighestRescuePoint::MaxHeight' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetHighestRescuePoint, Temp_int_Array_Index_Variable) == 0x000020, "Member 'GS_Game_C_GetHighestRescuePoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetHighestRescuePoint, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'GS_Game_C_GetHighestRescuePoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetHighestRescuePoint, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'GS_Game_C_GetHighestRescuePoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetHighestRescuePoint, CallFunc_Array_IsEmpty_ReturnValue) == 0x00002C, "Member 'GS_Game_C_GetHighestRescuePoint::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetHighestRescuePoint, CallFunc_Array_Get_Item) == 0x000030, "Member 'GS_Game_C_GetHighestRescuePoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetHighestRescuePoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'GS_Game_C_GetHighestRescuePoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetHighestRescuePoint, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'GS_Game_C_GetHighestRescuePoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetHighestRescuePoint, CallFunc_BreakVector_X) == 0x000058, "Member 'GS_Game_C_GetHighestRescuePoint::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetHighestRescuePoint, CallFunc_BreakVector_Y) == 0x000060, "Member 'GS_Game_C_GetHighestRescuePoint::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetHighestRescuePoint, CallFunc_BreakVector_Z) == 0x000068, "Member 'GS_Game_C_GetHighestRescuePoint::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetHighestRescuePoint, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'GS_Game_C_GetHighestRescuePoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetHighestRescuePoint, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000071, "Member 'GS_Game_C_GetHighestRescuePoint::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.GetLavaDead
// 0x0001 (0x0001 - 0x0000)
struct GS_Game_C_GetLavaDead final
{
public:
	bool                                          Dead;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_GetLavaDead) == 0x000001, "Wrong alignment on GS_Game_C_GetLavaDead");
static_assert(sizeof(GS_Game_C_GetLavaDead) == 0x000001, "Wrong size on GS_Game_C_GetLavaDead");
static_assert(offsetof(GS_Game_C_GetLavaDead, Dead) == 0x000000, "Member 'GS_Game_C_GetLavaDead::Dead' has a wrong offset!");

// Function GS_Game.GS_Game_C.GetLaveMode
// 0x0002 (0x0002 - 0x0000)
struct GS_Game_C_GetLaveMode final
{
public:
	bool                                          Lava;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_GetLaveMode) == 0x000001, "Wrong alignment on GS_Game_C_GetLaveMode");
static_assert(sizeof(GS_Game_C_GetLaveMode) == 0x000002, "Wrong size on GS_Game_C_GetLaveMode");
static_assert(offsetof(GS_Game_C_GetLaveMode, Lava) == 0x000000, "Member 'GS_Game_C_GetLaveMode::Lava' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetLaveMode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'GS_Game_C_GetLaveMode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.GetNearestRescueByLocation
// 0x0090 (0x0090 - 0x0000)
struct GS_Game_C_GetNearestRescueByLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RescuePoint_C*                      Rescue;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Foundlocal;                                        // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3450[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RescuePoint_C*                      Rescuelocal;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        MinDistance;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3451[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_RescuePoint_C*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0048(0x0010)(ReferenceParm)
	class ABP_RescuePoint_C*                      CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3452[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_GetNearestRescueByLocation) == 0x000008, "Wrong alignment on GS_Game_C_GetNearestRescueByLocation");
static_assert(sizeof(GS_Game_C_GetNearestRescueByLocation) == 0x000090, "Wrong size on GS_Game_C_GetNearestRescueByLocation");
static_assert(offsetof(GS_Game_C_GetNearestRescueByLocation, Location) == 0x000000, "Member 'GS_Game_C_GetNearestRescueByLocation::Location' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetNearestRescueByLocation, Rescue) == 0x000018, "Member 'GS_Game_C_GetNearestRescueByLocation::Rescue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetNearestRescueByLocation, Found) == 0x000020, "Member 'GS_Game_C_GetNearestRescueByLocation::Found' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetNearestRescueByLocation, Foundlocal) == 0x000021, "Member 'GS_Game_C_GetNearestRescueByLocation::Foundlocal' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetNearestRescueByLocation, Rescuelocal) == 0x000028, "Member 'GS_Game_C_GetNearestRescueByLocation::Rescuelocal' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetNearestRescueByLocation, MinDistance) == 0x000030, "Member 'GS_Game_C_GetNearestRescueByLocation::MinDistance' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetNearestRescueByLocation, Temp_int_Array_Index_Variable) == 0x000038, "Member 'GS_Game_C_GetNearestRescueByLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetNearestRescueByLocation, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'GS_Game_C_GetNearestRescueByLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetNearestRescueByLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'GS_Game_C_GetNearestRescueByLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetNearestRescueByLocation, CallFunc_GetAllActorsOfClass_OutActors) == 0x000048, "Member 'GS_Game_C_GetNearestRescueByLocation::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetNearestRescueByLocation, CallFunc_Array_Get_Item) == 0x000058, "Member 'GS_Game_C_GetNearestRescueByLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetNearestRescueByLocation, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'GS_Game_C_GetNearestRescueByLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetNearestRescueByLocation, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'GS_Game_C_GetNearestRescueByLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetNearestRescueByLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'GS_Game_C_GetNearestRescueByLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetNearestRescueByLocation, CallFunc_Vector_Distance_ReturnValue) == 0x000080, "Member 'GS_Game_C_GetNearestRescueByLocation::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetNearestRescueByLocation, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000088, "Member 'GS_Game_C_GetNearestRescueByLocation::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.GetPawnArray
// 0x0010 (0x0010 - 0x0000)
struct GS_Game_C_GetPawnArray final
{
public:
	TArray<class APawn*>                          Array;                                             // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GS_Game_C_GetPawnArray) == 0x000008, "Wrong alignment on GS_Game_C_GetPawnArray");
static_assert(sizeof(GS_Game_C_GetPawnArray) == 0x000010, "Wrong size on GS_Game_C_GetPawnArray");
static_assert(offsetof(GS_Game_C_GetPawnArray, Array) == 0x000000, "Member 'GS_Game_C_GetPawnArray::Array' has a wrong offset!");

// Function GS_Game.GS_Game_C.GetPlayersMiddle
// 0x0028 (0x0028 - 0x0000)
struct GS_Game_C_GetPlayersMiddle final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Locations;                                         // 0x0018(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(GS_Game_C_GetPlayersMiddle) == 0x000008, "Wrong alignment on GS_Game_C_GetPlayersMiddle");
static_assert(sizeof(GS_Game_C_GetPlayersMiddle) == 0x000028, "Wrong size on GS_Game_C_GetPlayersMiddle");
static_assert(offsetof(GS_Game_C_GetPlayersMiddle, Location) == 0x000000, "Member 'GS_Game_C_GetPlayersMiddle::Location' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetPlayersMiddle, Locations) == 0x000018, "Member 'GS_Game_C_GetPlayersMiddle::Locations' has a wrong offset!");

// Function GS_Game.GS_Game_C.GetSkinByID
// 0x0038 (0x0038 - 0x0000)
struct GS_Game_C_GetSkinByID final
{
public:
	struct FSteamID                               SteamID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ChoosenChar                                 Character;                                         // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3453[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3454[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_SteamIDAndSkin                      CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Equal_ReturnValue;                        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_GetSkinByID) == 0x000008, "Wrong alignment on GS_Game_C_GetSkinByID");
static_assert(sizeof(GS_Game_C_GetSkinByID) == 0x000038, "Wrong size on GS_Game_C_GetSkinByID");
static_assert(offsetof(GS_Game_C_GetSkinByID, SteamID) == 0x000000, "Member 'GS_Game_C_GetSkinByID::SteamID' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetSkinByID, Return) == 0x000008, "Member 'GS_Game_C_GetSkinByID::Return' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetSkinByID, Character) == 0x000009, "Member 'GS_Game_C_GetSkinByID::Character' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetSkinByID, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'GS_Game_C_GetSkinByID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetSkinByID, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'GS_Game_C_GetSkinByID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetSkinByID, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'GS_Game_C_GetSkinByID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetSkinByID, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'GS_Game_C_GetSkinByID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetSkinByID, CallFunc_Array_Get_Item) == 0x000020, "Member 'GS_Game_C_GetSkinByID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetSkinByID, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'GS_Game_C_GetSkinByID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_GetSkinByID, CallFunc_Equal_ReturnValue) == 0x000031, "Member 'GS_Game_C_GetSkinByID::CallFunc_Equal_ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.GetTchat
// 0x0010 (0x0010 - 0x0000)
struct GS_Game_C_GetTchat final
{
public:
	TArray<struct FS_TchatElement>                Param_Tchat;                                       // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GS_Game_C_GetTchat) == 0x000008, "Wrong alignment on GS_Game_C_GetTchat");
static_assert(sizeof(GS_Game_C_GetTchat) == 0x000010, "Wrong size on GS_Game_C_GetTchat");
static_assert(offsetof(GS_Game_C_GetTchat, Param_Tchat) == 0x000000, "Member 'GS_Game_C_GetTchat::Param_Tchat' has a wrong offset!");

// Function GS_Game.GS_Game_C.GetTimer
// 0x0004 (0x0004 - 0x0000)
struct GS_Game_C_GetTimer final
{
public:
	int32                                         Param_Timer;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_GetTimer) == 0x000004, "Wrong alignment on GS_Game_C_GetTimer");
static_assert(sizeof(GS_Game_C_GetTimer) == 0x000004, "Wrong size on GS_Game_C_GetTimer");
static_assert(offsetof(GS_Game_C_GetTimer, Param_Timer) == 0x000000, "Member 'GS_Game_C_GetTimer::Param_Timer' has a wrong offset!");

// Function GS_Game.GS_Game_C.HasEveryPC_AValidPawn
// 0x0048 (0x0048 - 0x0000)
struct GS_Game_C_HasEveryPC_AValidPawn final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3455[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerController*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3456[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3457[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_HasEveryPC_AValidPawn) == 0x000008, "Wrong alignment on GS_Game_C_HasEveryPC_AValidPawn");
static_assert(sizeof(GS_Game_C_HasEveryPC_AValidPawn) == 0x000048, "Wrong size on GS_Game_C_HasEveryPC_AValidPawn");
static_assert(offsetof(GS_Game_C_HasEveryPC_AValidPawn, ReturnValue) == 0x000000, "Member 'GS_Game_C_HasEveryPC_AValidPawn::ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_HasEveryPC_AValidPawn, Temp_int_Array_Index_Variable) == 0x000004, "Member 'GS_Game_C_HasEveryPC_AValidPawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_HasEveryPC_AValidPawn, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'GS_Game_C_HasEveryPC_AValidPawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_HasEveryPC_AValidPawn, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'GS_Game_C_HasEveryPC_AValidPawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_HasEveryPC_AValidPawn, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'GS_Game_C_HasEveryPC_AValidPawn::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_HasEveryPC_AValidPawn, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'GS_Game_C_HasEveryPC_AValidPawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_HasEveryPC_AValidPawn, CallFunc_Array_Get_Item) == 0x000028, "Member 'GS_Game_C_HasEveryPC_AValidPawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_HasEveryPC_AValidPawn, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'GS_Game_C_HasEveryPC_AValidPawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_HasEveryPC_AValidPawn, CallFunc_K2_GetPawn_ReturnValue) == 0x000038, "Member 'GS_Game_C_HasEveryPC_AValidPawn::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_HasEveryPC_AValidPawn, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'GS_Game_C_HasEveryPC_AValidPawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.IncrementSpawnedCharacter
// 0x000C (0x000C - 0x0000)
struct GS_Game_C_IncrementSpawnedCharacter final
{
public:
	int32                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_IncrementSpawnedCharacter) == 0x000004, "Wrong alignment on GS_Game_C_IncrementSpawnedCharacter");
static_assert(sizeof(GS_Game_C_IncrementSpawnedCharacter) == 0x00000C, "Wrong size on GS_Game_C_IncrementSpawnedCharacter");
static_assert(offsetof(GS_Game_C_IncrementSpawnedCharacter, Result) == 0x000000, "Member 'GS_Game_C_IncrementSpawnedCharacter::Result' has a wrong offset!");
static_assert(offsetof(GS_Game_C_IncrementSpawnedCharacter, Temp_int_Variable) == 0x000004, "Member 'GS_Game_C_IncrementSpawnedCharacter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_IncrementSpawnedCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'GS_Game_C_IncrementSpawnedCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.MakeLobbyCharsVariable
// 0x0018 (0x0018 - 0x0000)
struct GS_Game_C_MakeLobbyCharsVariable final
{
public:
	TArray<class ABP_LbManager_C*>                CallFunc_GetAllActorsOfClass_OutActors;            // 0x0000(0x0010)(ReferenceParm)
	class ABP_LbManager_C*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_MakeLobbyCharsVariable) == 0x000008, "Wrong alignment on GS_Game_C_MakeLobbyCharsVariable");
static_assert(sizeof(GS_Game_C_MakeLobbyCharsVariable) == 0x000018, "Wrong size on GS_Game_C_MakeLobbyCharsVariable");
static_assert(offsetof(GS_Game_C_MakeLobbyCharsVariable, CallFunc_GetAllActorsOfClass_OutActors) == 0x000000, "Member 'GS_Game_C_MakeLobbyCharsVariable::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_MakeLobbyCharsVariable, CallFunc_Array_Get_Item) == 0x000010, "Member 'GS_Game_C_MakeLobbyCharsVariable::CallFunc_Array_Get_Item' has a wrong offset!");

// Function GS_Game.GS_Game_C.MakePawnArray
// 0x0060 (0x0060 - 0x0000)
struct GS_Game_C_MakePawnArray final
{
public:
	TArray<class AActor*>                         Actors;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class APawn*>                          PawnsOut;                                          // 0x0010(0x0010)(Parm, OutParm)
	TArray<class APawn*>                          Pawns;                                             // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3458[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3459[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_MakePawnArray) == 0x000008, "Wrong alignment on GS_Game_C_MakePawnArray");
static_assert(sizeof(GS_Game_C_MakePawnArray) == 0x000060, "Wrong size on GS_Game_C_MakePawnArray");
static_assert(offsetof(GS_Game_C_MakePawnArray, Actors) == 0x000000, "Member 'GS_Game_C_MakePawnArray::Actors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_MakePawnArray, PawnsOut) == 0x000010, "Member 'GS_Game_C_MakePawnArray::PawnsOut' has a wrong offset!");
static_assert(offsetof(GS_Game_C_MakePawnArray, Pawns) == 0x000020, "Member 'GS_Game_C_MakePawnArray::Pawns' has a wrong offset!");
static_assert(offsetof(GS_Game_C_MakePawnArray, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'GS_Game_C_MakePawnArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_MakePawnArray, Temp_int_Array_Index_Variable) == 0x000034, "Member 'GS_Game_C_MakePawnArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_MakePawnArray, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'GS_Game_C_MakePawnArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_MakePawnArray, CallFunc_Array_Get_Item) == 0x000040, "Member 'GS_Game_C_MakePawnArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_MakePawnArray, K2Node_DynamicCast_AsPawn) == 0x000048, "Member 'GS_Game_C_MakePawnArray::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(GS_Game_C_MakePawnArray, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'GS_Game_C_MakePawnArray::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GS_Game_C_MakePawnArray, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'GS_Game_C_MakePawnArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_MakePawnArray, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'GS_Game_C_MakePawnArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_MakePawnArray, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'GS_Game_C_MakePawnArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.MakePawnsArray
// 0x0050 (0x0050 - 0x0000)
struct GS_Game_C_MakePawnsArray final
{
public:
	TArray<class APawn*>                          Array;                                             // 0x0000(0x0010)(Parm, OutParm)
	TArray<class APawn*>                          PawnsArrayLocal;                                   // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345A[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_ReturnValue;                      // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_MakePawnsArray) == 0x000008, "Wrong alignment on GS_Game_C_MakePawnsArray");
static_assert(sizeof(GS_Game_C_MakePawnsArray) == 0x000050, "Wrong size on GS_Game_C_MakePawnsArray");
static_assert(offsetof(GS_Game_C_MakePawnsArray, Array) == 0x000000, "Member 'GS_Game_C_MakePawnsArray::Array' has a wrong offset!");
static_assert(offsetof(GS_Game_C_MakePawnsArray, PawnsArrayLocal) == 0x000010, "Member 'GS_Game_C_MakePawnsArray::PawnsArrayLocal' has a wrong offset!");
static_assert(offsetof(GS_Game_C_MakePawnsArray, Temp_int_Array_Index_Variable) == 0x000020, "Member 'GS_Game_C_MakePawnsArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_MakePawnsArray, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'GS_Game_C_MakePawnsArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_MakePawnsArray, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'GS_Game_C_MakePawnsArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_MakePawnsArray, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'GS_Game_C_MakePawnsArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_MakePawnsArray, CallFunc_Array_Get_Item) == 0x000030, "Member 'GS_Game_C_MakePawnsArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_MakePawnsArray, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'GS_Game_C_MakePawnsArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_MakePawnsArray, CallFunc_GetPawn_ReturnValue) == 0x000040, "Member 'GS_Game_C_MakePawnsArray::CallFunc_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_MakePawnsArray, CallFunc_Array_Add_ReturnValue) == 0x000048, "Member 'GS_Game_C_MakePawnsArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.MakeSessionJoinable
// 0x0010 (0x0010 - 0x0000)
struct GS_Game_C_MakeSessionJoinable final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_MakeSessionJoinable) == 0x000008, "Wrong alignment on GS_Game_C_MakeSessionJoinable");
static_assert(sizeof(GS_Game_C_MakeSessionJoinable) == 0x000010, "Wrong size on GS_Game_C_MakeSessionJoinable");
static_assert(offsetof(GS_Game_C_MakeSessionJoinable, Value) == 0x000000, "Member 'GS_Game_C_MakeSessionJoinable::Value' has a wrong offset!");

// Function GS_Game.GS_Game_C.NearestRescuePoint
// 0x0020 (0x0020 - 0x0000)
struct GS_Game_C_NearestRescuePoint final
{
public:
	bool                                          Lava;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345B[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RescuePoint_C*                      RescuePoint;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Nearest_Rescue_Point_Server__ReturnValue; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RescuePoint_C*                      CallFunc_Get_Nearest_Rescue_Point_Server__Out;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_NearestRescuePoint) == 0x000008, "Wrong alignment on GS_Game_C_NearestRescuePoint");
static_assert(sizeof(GS_Game_C_NearestRescuePoint) == 0x000020, "Wrong size on GS_Game_C_NearestRescuePoint");
static_assert(offsetof(GS_Game_C_NearestRescuePoint, Lava) == 0x000000, "Member 'GS_Game_C_NearestRescuePoint::Lava' has a wrong offset!");
static_assert(offsetof(GS_Game_C_NearestRescuePoint, Found) == 0x000001, "Member 'GS_Game_C_NearestRescuePoint::Found' has a wrong offset!");
static_assert(offsetof(GS_Game_C_NearestRescuePoint, RescuePoint) == 0x000008, "Member 'GS_Game_C_NearestRescuePoint::RescuePoint' has a wrong offset!");
static_assert(offsetof(GS_Game_C_NearestRescuePoint, CallFunc_Get_Nearest_Rescue_Point_Server__ReturnValue) == 0x000010, "Member 'GS_Game_C_NearestRescuePoint::CallFunc_Get_Nearest_Rescue_Point_Server__ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_NearestRescuePoint, CallFunc_Get_Nearest_Rescue_Point_Server__Out) == 0x000018, "Member 'GS_Game_C_NearestRescuePoint::CallFunc_Get_Nearest_Rescue_Point_Server__Out' has a wrong offset!");

// Function GS_Game.GS_Game_C.On Chat Message Received
// 0x0028 (0x0028 - 0x0000)
struct GS_Game_C_On_Chat_Message_Received final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerController_C> K2Node_DynamicCast_AsBPI_Player_Controller;        // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_On_Chat_Message_Received) == 0x000008, "Wrong alignment on GS_Game_C_On_Chat_Message_Received");
static_assert(sizeof(GS_Game_C_On_Chat_Message_Received) == 0x000028, "Wrong size on GS_Game_C_On_Chat_Message_Received");
static_assert(offsetof(GS_Game_C_On_Chat_Message_Received, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'GS_Game_C_On_Chat_Message_Received::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_On_Chat_Message_Received, CallFunc_SpawnSound2D_ReturnValue) == 0x000008, "Member 'GS_Game_C_On_Chat_Message_Received::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_On_Chat_Message_Received, K2Node_DynamicCast_AsBPI_Player_Controller) == 0x000010, "Member 'GS_Game_C_On_Chat_Message_Received::K2Node_DynamicCast_AsBPI_Player_Controller' has a wrong offset!");
static_assert(offsetof(GS_Game_C_On_Chat_Message_Received, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GS_Game_C_On_Chat_Message_Received::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GS_Game.GS_Game_C.OnRep_GameBegun
// 0x00A0 (0x00A0 - 0x0000)
struct GS_Game_C_OnRep_GameBegun final
{
public:
	TArray<class FString>                         ArrayLocal;                                        // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345D[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345E[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APostProcessVolume*>             CallFunc_GetAllActorsOfClassWithTag_OutActors;     // 0x0030(0x0010)(ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345F[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APostProcessVolume*                     CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3460[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APS_Game_C*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0058(0x0010)(ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3461[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APS_Game_C*                             CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3462[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_WorldLoader_C*>              CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0088(0x0010)(ReferenceParm)
	class ABP_WorldLoader_C*                      CallFunc_Array_Get_Item_2;                         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_OnRep_GameBegun) == 0x000008, "Wrong alignment on GS_Game_C_OnRep_GameBegun");
static_assert(sizeof(GS_Game_C_OnRep_GameBegun) == 0x0000A0, "Wrong size on GS_Game_C_OnRep_GameBegun");
static_assert(offsetof(GS_Game_C_OnRep_GameBegun, ArrayLocal) == 0x000000, "Member 'GS_Game_C_OnRep_GameBegun::ArrayLocal' has a wrong offset!");
static_assert(offsetof(GS_Game_C_OnRep_GameBegun, Temp_int_Array_Index_Variable) == 0x000010, "Member 'GS_Game_C_OnRep_GameBegun::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_OnRep_GameBegun, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000018, "Member 'GS_Game_C_OnRep_GameBegun::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_OnRep_GameBegun, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000028, "Member 'GS_Game_C_OnRep_GameBegun::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_OnRep_GameBegun, CallFunc_HasAuthority_ReturnValue) == 0x000029, "Member 'GS_Game_C_OnRep_GameBegun::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_OnRep_GameBegun, CallFunc_GetAllActorsOfClassWithTag_OutActors) == 0x000030, "Member 'GS_Game_C_OnRep_GameBegun::CallFunc_GetAllActorsOfClassWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_OnRep_GameBegun, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'GS_Game_C_OnRep_GameBegun::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GS_Game_C_OnRep_GameBegun, CallFunc_Array_Get_Item) == 0x000048, "Member 'GS_Game_C_OnRep_GameBegun::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_OnRep_GameBegun, CallFunc_Array_IsEmpty_ReturnValue) == 0x000050, "Member 'GS_Game_C_OnRep_GameBegun::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_OnRep_GameBegun, CallFunc_GetAllActorsOfClass_OutActors) == 0x000058, "Member 'GS_Game_C_OnRep_GameBegun::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_OnRep_GameBegun, K2Node_SwitchEnum_CmpSuccess_1) == 0x000068, "Member 'GS_Game_C_OnRep_GameBegun::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_OnRep_GameBegun, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'GS_Game_C_OnRep_GameBegun::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_OnRep_GameBegun, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'GS_Game_C_OnRep_GameBegun::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_OnRep_GameBegun, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'GS_Game_C_OnRep_GameBegun::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_OnRep_GameBegun, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'GS_Game_C_OnRep_GameBegun::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_OnRep_GameBegun, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'GS_Game_C_OnRep_GameBegun::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_OnRep_GameBegun, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000088, "Member 'GS_Game_C_OnRep_GameBegun::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_OnRep_GameBegun, CallFunc_Array_Get_Item_2) == 0x000098, "Member 'GS_Game_C_OnRep_GameBegun::CallFunc_Array_Get_Item_2' has a wrong offset!");

// Function GS_Game.GS_Game_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct GS_Game_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_ReceiveTick) == 0x000004, "Wrong alignment on GS_Game_C_ReceiveTick");
static_assert(sizeof(GS_Game_C_ReceiveTick) == 0x000004, "Wrong size on GS_Game_C_ReceiveTick");
static_assert(offsetof(GS_Game_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'GS_Game_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function GS_Game.GS_Game_C.RefreshLobbyChars
// 0x0068 (0x0068 - 0x0000)
struct GS_Game_C_RefreshLobbyChars final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3463[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3464[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_LobbyCharacter_C> K2Node_DynamicCast_AsBPI_Lobby_Character;          // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3465[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_LobbyCharacter_C> K2Node_DynamicCast_AsBPI_Lobby_Character_1;        // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3466[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_RefreshLobbyChars) == 0x000008, "Wrong alignment on GS_Game_C_RefreshLobbyChars");
static_assert(sizeof(GS_Game_C_RefreshLobbyChars) == 0x000068, "Wrong size on GS_Game_C_RefreshLobbyChars");
static_assert(offsetof(GS_Game_C_RefreshLobbyChars, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'GS_Game_C_RefreshLobbyChars::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_RefreshLobbyChars, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'GS_Game_C_RefreshLobbyChars::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_RefreshLobbyChars, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'GS_Game_C_RefreshLobbyChars::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_RefreshLobbyChars, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'GS_Game_C_RefreshLobbyChars::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_RefreshLobbyChars, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'GS_Game_C_RefreshLobbyChars::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_RefreshLobbyChars, CallFunc_Array_Get_Item) == 0x000018, "Member 'GS_Game_C_RefreshLobbyChars::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_RefreshLobbyChars, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'GS_Game_C_RefreshLobbyChars::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_RefreshLobbyChars, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'GS_Game_C_RefreshLobbyChars::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_RefreshLobbyChars, K2Node_DynamicCast_AsBPI_Lobby_Character) == 0x000030, "Member 'GS_Game_C_RefreshLobbyChars::K2Node_DynamicCast_AsBPI_Lobby_Character' has a wrong offset!");
static_assert(offsetof(GS_Game_C_RefreshLobbyChars, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'GS_Game_C_RefreshLobbyChars::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GS_Game_C_RefreshLobbyChars, K2Node_DynamicCast_AsBPI_Lobby_Character_1) == 0x000048, "Member 'GS_Game_C_RefreshLobbyChars::K2Node_DynamicCast_AsBPI_Lobby_Character_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_RefreshLobbyChars, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'GS_Game_C_RefreshLobbyChars::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_RefreshLobbyChars, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'GS_Game_C_RefreshLobbyChars::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_RefreshLobbyChars, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'GS_Game_C_RefreshLobbyChars::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function GS_Game.GS_Game_C.Rescue
// 0x00A0 (0x00A0 - 0x0000)
struct GS_Game_C_Rescue final
{
public:
	class ABP_RescuePoint_C*                      RescueActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ExitingCar;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ExitingCarLocal;                                   // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3467[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RescuePoint_C*                      RescueActorRef;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       CallFunc_GetStartComponentByIndex_Output;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3468[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0038(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3469[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_346A[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerController*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_346B[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_346C[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerController_C> K2Node_DynamicCast_AsBPI_Player_Controller;        // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_Rescue) == 0x000008, "Wrong alignment on GS_Game_C_Rescue");
static_assert(sizeof(GS_Game_C_Rescue) == 0x0000A0, "Wrong size on GS_Game_C_Rescue");
static_assert(offsetof(GS_Game_C_Rescue, RescueActor) == 0x000000, "Member 'GS_Game_C_Rescue::RescueActor' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Rescue, ExitingCar) == 0x000008, "Member 'GS_Game_C_Rescue::ExitingCar' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Rescue, ExitingCarLocal) == 0x000009, "Member 'GS_Game_C_Rescue::ExitingCarLocal' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Rescue, RescueActorRef) == 0x000010, "Member 'GS_Game_C_Rescue::RescueActorRef' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Rescue, Temp_int_Array_Index_Variable) == 0x000018, "Member 'GS_Game_C_Rescue::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Rescue, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'GS_Game_C_Rescue::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Rescue, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'GS_Game_C_Rescue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Rescue, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'GS_Game_C_Rescue::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Rescue, CallFunc_GetStartComponentByIndex_Output) == 0x000028, "Member 'GS_Game_C_Rescue::CallFunc_GetStartComponentByIndex_Output' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Rescue, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'GS_Game_C_Rescue::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Rescue, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000038, "Member 'GS_Game_C_Rescue::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Rescue, CallFunc_Array_Get_Item) == 0x000048, "Member 'GS_Game_C_Rescue::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Rescue, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'GS_Game_C_Rescue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Rescue, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'GS_Game_C_Rescue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Rescue, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'GS_Game_C_Rescue::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Rescue, CallFunc_GetAllActorsOfClass_OutActors) == 0x000060, "Member 'GS_Game_C_Rescue::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Rescue, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'GS_Game_C_Rescue::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Rescue, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'GS_Game_C_Rescue::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Rescue, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'GS_Game_C_Rescue::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Rescue, K2Node_DynamicCast_AsBPI_Player_Controller) == 0x000088, "Member 'GS_Game_C_Rescue::K2Node_DynamicCast_AsBPI_Player_Controller' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Rescue, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'GS_Game_C_Rescue::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GS_Game.GS_Game_C.RescueEvent
// 0x0010 (0x0010 - 0x0000)
struct GS_Game_C_RescueEvent final
{
public:
	class ABP_RescuePoint_C*                      RescuePoint;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ExitingCar;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_RescueEvent) == 0x000008, "Wrong alignment on GS_Game_C_RescueEvent");
static_assert(sizeof(GS_Game_C_RescueEvent) == 0x000010, "Wrong size on GS_Game_C_RescueEvent");
static_assert(offsetof(GS_Game_C_RescueEvent, RescuePoint) == 0x000000, "Member 'GS_Game_C_RescueEvent::RescuePoint' has a wrong offset!");
static_assert(offsetof(GS_Game_C_RescueEvent, ExitingCar) == 0x000008, "Member 'GS_Game_C_RescueEvent::ExitingCar' has a wrong offset!");

// Function GS_Game.GS_Game_C.SendToChatSRV
// 0x0030 (0x0030 - 0x0000)
struct GS_Game_C_SendToChatSRV final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Message;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_SendToChatSRV) == 0x000008, "Wrong alignment on GS_Game_C_SendToChatSRV");
static_assert(sizeof(GS_Game_C_SendToChatSRV) == 0x000030, "Wrong size on GS_Game_C_SendToChatSRV");
static_assert(offsetof(GS_Game_C_SendToChatSRV, Param_Name) == 0x000000, "Member 'GS_Game_C_SendToChatSRV::Param_Name' has a wrong offset!");
static_assert(offsetof(GS_Game_C_SendToChatSRV, Message) == 0x000010, "Member 'GS_Game_C_SendToChatSRV::Message' has a wrong offset!");
static_assert(offsetof(GS_Game_C_SendToChatSRV, Color) == 0x000020, "Member 'GS_Game_C_SendToChatSRV::Color' has a wrong offset!");

// Function GS_Game.GS_Game_C.ServerTravel
// 0x0010 (0x0010 - 0x0000)
struct GS_Game_C_ServerTravel final
{
public:
	class FString                                 Command;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_ServerTravel) == 0x000008, "Wrong alignment on GS_Game_C_ServerTravel");
static_assert(sizeof(GS_Game_C_ServerTravel) == 0x000010, "Wrong size on GS_Game_C_ServerTravel");
static_assert(offsetof(GS_Game_C_ServerTravel, Command) == 0x000000, "Member 'GS_Game_C_ServerTravel::Command' has a wrong offset!");

// Function GS_Game.GS_Game_C.ServerTravelAll
// 0x0010 (0x0010 - 0x0000)
struct GS_Game_C_ServerTravelAll final
{
public:
	class FString                                 Command;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_ServerTravelAll) == 0x000008, "Wrong alignment on GS_Game_C_ServerTravelAll");
static_assert(sizeof(GS_Game_C_ServerTravelAll) == 0x000010, "Wrong size on GS_Game_C_ServerTravelAll");
static_assert(offsetof(GS_Game_C_ServerTravelAll, Command) == 0x000000, "Member 'GS_Game_C_ServerTravelAll::Command' has a wrong offset!");

// Function GS_Game.GS_Game_C.SetTimer
// 0x0004 (0x0004 - 0x0000)
struct GS_Game_C_SetTimer final
{
public:
	int32                                         Param_Timer;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_SetTimer) == 0x000004, "Wrong alignment on GS_Game_C_SetTimer");
static_assert(sizeof(GS_Game_C_SetTimer) == 0x000004, "Wrong size on GS_Game_C_SetTimer");
static_assert(offsetof(GS_Game_C_SetTimer, Param_Timer) == 0x000000, "Member 'GS_Game_C_SetTimer::Param_Timer' has a wrong offset!");

// Function GS_Game.GS_Game_C.Update Game Mode
// 0x0088 (0x0088 - 0x0000)
struct GS_Game_C_Update_Game_Mode final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_346D[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_346E[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_346F[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACheckpoint_BP_C*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x0028(0x0010)(ReferenceParm)
	TArray<class ABP_Lava_C*>                     CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0038(0x0010)(ReferenceParm)
	class ACheckpoint_BP_C*                       CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Lava_C*                             CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomGI_C*                            K2Node_DynamicCast_AsCustom_GI;                    // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_Update_Game_Mode) == 0x000008, "Wrong alignment on GS_Game_C_Update_Game_Mode");
static_assert(sizeof(GS_Game_C_Update_Game_Mode) == 0x000088, "Wrong size on GS_Game_C_Update_Game_Mode");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, Temp_int_Array_Index_Variable) == 0x000000, "Member 'GS_Game_C_Update_Game_Mode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'GS_Game_C_Update_Game_Mode::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, K2Node_SwitchEnum_CmpSuccess_1) == 0x000005, "Member 'GS_Game_C_Update_Game_Mode::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'GS_Game_C_Update_Game_Mode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'GS_Game_C_Update_Game_Mode::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'GS_Game_C_Update_Game_Mode::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'GS_Game_C_Update_Game_Mode::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'GS_Game_C_Update_Game_Mode::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00001C, "Member 'GS_Game_C_Update_Game_Mode::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000020, "Member 'GS_Game_C_Update_Game_Mode::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, CallFunc_HasAuthority_ReturnValue) == 0x000021, "Member 'GS_Game_C_Update_Game_Mode::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, CallFunc_GetAllActorsOfClass_OutActors) == 0x000028, "Member 'GS_Game_C_Update_Game_Mode::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000038, "Member 'GS_Game_C_Update_Game_Mode::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, CallFunc_Array_Get_Item) == 0x000048, "Member 'GS_Game_C_Update_Game_Mode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'GS_Game_C_Update_Game_Mode::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'GS_Game_C_Update_Game_Mode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'GS_Game_C_Update_Game_Mode::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000060, "Member 'GS_Game_C_Update_Game_Mode::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000064, "Member 'GS_Game_C_Update_Game_Mode::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, CallFunc_Max_ReturnValue) == 0x000068, "Member 'GS_Game_C_Update_Game_Mode::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, CallFunc_Max_ReturnValue_1) == 0x00006C, "Member 'GS_Game_C_Update_Game_Mode::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, CallFunc_GetGameInstance_ReturnValue) == 0x000070, "Member 'GS_Game_C_Update_Game_Mode::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, K2Node_DynamicCast_AsCustom_GI) == 0x000078, "Member 'GS_Game_C_Update_Game_Mode::K2Node_DynamicCast_AsCustom_GI' has a wrong offset!");
static_assert(offsetof(GS_Game_C_Update_Game_Mode, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'GS_Game_C_Update_Game_Mode::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GS_Game.GS_Game_C.UpdateAntisaveBox
// 0x0020 (0x0020 - 0x0000)
struct GS_Game_C_UpdateAntisaveBox final
{
public:
	TArray<class AAntiSaveBox_C*>                 CallFunc_GetAllActorsOfClass_OutActors;            // 0x0000(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3470[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAntiSaveBox_C*                         CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_UpdateAntisaveBox) == 0x000008, "Wrong alignment on GS_Game_C_UpdateAntisaveBox");
static_assert(sizeof(GS_Game_C_UpdateAntisaveBox) == 0x000020, "Wrong size on GS_Game_C_UpdateAntisaveBox");
static_assert(offsetof(GS_Game_C_UpdateAntisaveBox, CallFunc_GetAllActorsOfClass_OutActors) == 0x000000, "Member 'GS_Game_C_UpdateAntisaveBox::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_UpdateAntisaveBox, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'GS_Game_C_UpdateAntisaveBox::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_UpdateAntisaveBox, CallFunc_Array_Get_Item) == 0x000018, "Member 'GS_Game_C_UpdateAntisaveBox::CallFunc_Array_Get_Item' has a wrong offset!");

// Function GS_Game.GS_Game_C.UpdateChainLocations
// 0x0010 (0x0010 - 0x0000)
struct GS_Game_C_UpdateChainLocations final
{
public:
	TArray<struct FS_PhysxChainLocation>          LocalArray;                                        // 0x0000(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(GS_Game_C_UpdateChainLocations) == 0x000008, "Wrong alignment on GS_Game_C_UpdateChainLocations");
static_assert(sizeof(GS_Game_C_UpdateChainLocations) == 0x000010, "Wrong size on GS_Game_C_UpdateChainLocations");
static_assert(offsetof(GS_Game_C_UpdateChainLocations, LocalArray) == 0x000000, "Member 'GS_Game_C_UpdateChainLocations::LocalArray' has a wrong offset!");

// Function GS_Game.GS_Game_C.UpdateSelectedSkins
// 0x0068 (0x0068 - 0x0000)
struct GS_Game_C_UpdateSelectedSkins final
{
public:
	TArray<struct FS_SteamIDAndSkin>              Skins;                                             // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3471[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APS_Game_C*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3472[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APS_Game_C*                             CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3473[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSteamID                               CallFunc_GetSteamIdFromPlayerState_ReturnValue;    // 0x0048(0x0008)(NoDestructor)
	struct FS_SteamIDAndSkin                      K2Node_MakeStruct_S_SteamIDAndSkin;                // 0x0050(0x0010)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GS_Game_C_UpdateSelectedSkins) == 0x000008, "Wrong alignment on GS_Game_C_UpdateSelectedSkins");
static_assert(sizeof(GS_Game_C_UpdateSelectedSkins) == 0x000068, "Wrong size on GS_Game_C_UpdateSelectedSkins");
static_assert(offsetof(GS_Game_C_UpdateSelectedSkins, Skins) == 0x000000, "Member 'GS_Game_C_UpdateSelectedSkins::Skins' has a wrong offset!");
static_assert(offsetof(GS_Game_C_UpdateSelectedSkins, Temp_int_Array_Index_Variable) == 0x000010, "Member 'GS_Game_C_UpdateSelectedSkins::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_UpdateSelectedSkins, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'GS_Game_C_UpdateSelectedSkins::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GS_Game_C_UpdateSelectedSkins, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'GS_Game_C_UpdateSelectedSkins::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_UpdateSelectedSkins, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member 'GS_Game_C_UpdateSelectedSkins::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GS_Game_C_UpdateSelectedSkins, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'GS_Game_C_UpdateSelectedSkins::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_UpdateSelectedSkins, CallFunc_Array_Get_Item) == 0x000038, "Member 'GS_Game_C_UpdateSelectedSkins::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GS_Game_C_UpdateSelectedSkins, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'GS_Game_C_UpdateSelectedSkins::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_UpdateSelectedSkins, CallFunc_GetSteamIdFromPlayerState_ReturnValue) == 0x000048, "Member 'GS_Game_C_UpdateSelectedSkins::CallFunc_GetSteamIdFromPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GS_Game_C_UpdateSelectedSkins, K2Node_MakeStruct_S_SteamIDAndSkin) == 0x000050, "Member 'GS_Game_C_UpdateSelectedSkins::K2Node_MakeStruct_S_SteamIDAndSkin' has a wrong offset!");
static_assert(offsetof(GS_Game_C_UpdateSelectedSkins, CallFunc_Array_AddUnique_ReturnValue) == 0x000060, "Member 'GS_Game_C_UpdateSelectedSkins::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

}

