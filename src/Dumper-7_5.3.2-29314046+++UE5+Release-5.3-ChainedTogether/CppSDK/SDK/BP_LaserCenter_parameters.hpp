#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LaserCenter

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_LaserCenter.BP_LaserCenter_C.CheckLasersOn
// 0x0030 (0x0030 - 0x0000)
struct BP_LaserCenter_C_CheckLasersOn final
{
public:
	bool                                          On;                                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B3B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B3C[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_LaserLauncher_C*                    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaserCenter_C_CheckLasersOn) == 0x000008, "Wrong alignment on BP_LaserCenter_C_CheckLasersOn");
static_assert(sizeof(BP_LaserCenter_C_CheckLasersOn) == 0x000030, "Wrong size on BP_LaserCenter_C_CheckLasersOn");
static_assert(offsetof(BP_LaserCenter_C_CheckLasersOn, On) == 0x000000, "Member 'BP_LaserCenter_C_CheckLasersOn::On' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_CheckLasersOn, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_LaserCenter_C_CheckLasersOn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_CheckLasersOn, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_LaserCenter_C_CheckLasersOn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_CheckLasersOn, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_LaserCenter_C_CheckLasersOn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_CheckLasersOn, Temp_int_Variable) == 0x000010, "Member 'BP_LaserCenter_C_CheckLasersOn::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_CheckLasersOn, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_LaserCenter_C_CheckLasersOn::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_CheckLasersOn, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_LaserCenter_C_CheckLasersOn::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_CheckLasersOn, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_LaserCenter_C_CheckLasersOn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_CheckLasersOn, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_LaserCenter_C_CheckLasersOn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_CheckLasersOn, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_LaserCenter_C_CheckLasersOn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LaserCenter.BP_LaserCenter_C.ExecuteUbergraph_BP_LaserCenter
// 0x0030 (0x0030 - 0x0000)
struct BP_LaserCenter_C_ExecuteUbergraph_BP_LaserCenter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B3D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckLasersOn_On;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaserCenter_C_ExecuteUbergraph_BP_LaserCenter) == 0x000008, "Wrong alignment on BP_LaserCenter_C_ExecuteUbergraph_BP_LaserCenter");
static_assert(sizeof(BP_LaserCenter_C_ExecuteUbergraph_BP_LaserCenter) == 0x000030, "Wrong size on BP_LaserCenter_C_ExecuteUbergraph_BP_LaserCenter");
static_assert(offsetof(BP_LaserCenter_C_ExecuteUbergraph_BP_LaserCenter, EntryPoint) == 0x000000, "Member 'BP_LaserCenter_C_ExecuteUbergraph_BP_LaserCenter::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_ExecuteUbergraph_BP_LaserCenter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_LaserCenter_C_ExecuteUbergraph_BP_LaserCenter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_ExecuteUbergraph_BP_LaserCenter, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000020, "Member 'BP_LaserCenter_C_ExecuteUbergraph_BP_LaserCenter::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_ExecuteUbergraph_BP_LaserCenter, CallFunc_CheckLasersOn_On) == 0x000028, "Member 'BP_LaserCenter_C_ExecuteUbergraph_BP_LaserCenter::CallFunc_CheckLasersOn_On' has a wrong offset!");

// Function BP_LaserCenter.BP_LaserCenter_C.OnRep_Unlock
// 0x0040 (0x0040 - 0x0000)
struct BP_LaserCenter_C_OnRep_Unlock final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B3E[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B3F[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaserCenter_C_OnRep_Unlock) == 0x000008, "Wrong alignment on BP_LaserCenter_C_OnRep_Unlock");
static_assert(sizeof(BP_LaserCenter_C_OnRep_Unlock) == 0x000040, "Wrong size on BP_LaserCenter_C_OnRep_Unlock");
static_assert(offsetof(BP_LaserCenter_C_OnRep_Unlock, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_LaserCenter_C_OnRep_Unlock::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_OnRep_Unlock, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_LaserCenter_C_OnRep_Unlock::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_OnRep_Unlock, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_LaserCenter_C_OnRep_Unlock::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_OnRep_Unlock, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'BP_LaserCenter_C_OnRep_Unlock::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_OnRep_Unlock, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'BP_LaserCenter_C_OnRep_Unlock::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_OnRep_Unlock, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_LaserCenter_C_OnRep_Unlock::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_OnRep_Unlock, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_LaserCenter_C_OnRep_Unlock::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_OnRep_Unlock, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_LaserCenter_C_OnRep_Unlock::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_OnRep_Unlock, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_LaserCenter_C_OnRep_Unlock::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_OnRep_Unlock, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'BP_LaserCenter_C_OnRep_Unlock::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_OnRep_Unlock, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_LaserCenter_C_OnRep_Unlock::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_LaserCenter_C_OnRep_Unlock, CallFunc_Less_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_LaserCenter_C_OnRep_Unlock::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

}

