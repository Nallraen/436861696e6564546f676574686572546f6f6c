#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Thunder

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Thunder.BP_Thunder_C.BndEvt__BP_Thunder_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_Thunder_C_BndEvt__BP_Thunder_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AFF[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Thunder_C_BndEvt__BP_Thunder_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Thunder_C_BndEvt__BP_Thunder_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Thunder_C_BndEvt__BP_Thunder_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_Thunder_C_BndEvt__BP_Thunder_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Thunder_C_BndEvt__BP_Thunder_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Thunder_C_BndEvt__BP_Thunder_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_BndEvt__BP_Thunder_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Thunder_C_BndEvt__BP_Thunder_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_BndEvt__BP_Thunder_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Thunder_C_BndEvt__BP_Thunder_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_BndEvt__BP_Thunder_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Thunder_C_BndEvt__BP_Thunder_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_BndEvt__BP_Thunder_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Thunder_C_BndEvt__BP_Thunder_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_BndEvt__BP_Thunder_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Thunder_C_BndEvt__BP_Thunder_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Thunder.BP_Thunder_C.DestroyWallAll
// 0x0008 (0x0008 - 0x0000)
struct BP_Thunder_C_DestroyWallAll final
{
public:
	class UObject*                                Param_Target;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Thunder_C_DestroyWallAll) == 0x000008, "Wrong alignment on BP_Thunder_C_DestroyWallAll");
static_assert(sizeof(BP_Thunder_C_DestroyWallAll) == 0x000008, "Wrong size on BP_Thunder_C_DestroyWallAll");
static_assert(offsetof(BP_Thunder_C_DestroyWallAll, Param_Target) == 0x000000, "Member 'BP_Thunder_C_DestroyWallAll::Param_Target' has a wrong offset!");

// Function BP_Thunder.BP_Thunder_C.ExecuteUbergraph_BP_Thunder
// 0x0698 (0x0698 - 0x0000)
struct BP_Thunder_C_ExecuteUbergraph_BP_Thunder final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B00[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0008(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B01[0x6];                                     // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00F8(0x0010)(ConstParm, ReferenceParm)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B02[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B03[0x3];                                     // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0198(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0280(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B04[0x7];                                     // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x037A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B05[0x1];                                     // 0x037B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B06[0x4];                                     // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B07[0x4];                                     // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B08[0x7];                                     // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x0458(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x0541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B09[0x6];                                     // 0x0542(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Target;                         // 0x0548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Destructible_C>   K2Node_DynamicCast_AsBPI_Destructible;             // 0x0550(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B0A[0x7];                                     // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0568(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0580(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0588(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0590(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_2;     // 0x05A8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_2;        // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B0B[0x3];                                     // 0x0691(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast;         // 0x0694(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder) == 0x000008, "Wrong alignment on BP_Thunder_C_ExecuteUbergraph_BP_Thunder");
static_assert(sizeof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder) == 0x000698, "Wrong size on BP_Thunder_C_ExecuteUbergraph_BP_Thunder");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, EntryPoint) == 0x000000, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000008, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000F0, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_HasAuthority_ReturnValue) == 0x0000F1, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, Temp_object_Variable) == 0x0000F8, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, Temp_bool_Has_Been_Initd_Variable) == 0x000108, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_HasAuthority_ReturnValue_1) == 0x000109, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_HasAuthority_ReturnValue_2) == 0x00010A, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_HasAuthority_ReturnValue_3) == 0x00010B, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000110, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_GetForwardVector_ReturnValue) == 0x000118, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000130, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000148, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_Add_VectorVector_ReturnValue) == 0x000160, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000178, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, K2Node_ComponentBoundEvent_OtherActor) == 0x000180, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, K2Node_ComponentBoundEvent_OtherComp) == 0x000188, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000190, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, K2Node_ComponentBoundEvent_bFromSweep) == 0x000194, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, K2Node_ComponentBoundEvent_SweepResult) == 0x000198, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_SphereTraceSingle_OutHit) == 0x000280, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_SphereTraceSingle_ReturnValue) == 0x000368, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, K2Node_DynamicCast_AsPawn) == 0x000370, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, K2Node_DynamicCast_bSuccess) == 0x000378, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_BreakHitResult_bBlockingHit) == 0x000379, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_BreakHitResult_bInitialOverlap) == 0x00037A, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_BreakHitResult_Time) == 0x00037C, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_BreakHitResult_Distance) == 0x000380, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_BreakHitResult_Location) == 0x000388, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_BreakHitResult_ImpactPoint) == 0x0003A0, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_BreakHitResult_Normal) == 0x0003B8, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_BreakHitResult_ImpactNormal) == 0x0003D0, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_BreakHitResult_PhysMat) == 0x0003E8, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_BreakHitResult_HitActor) == 0x0003F0, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_BreakHitResult_HitComponent) == 0x0003F8, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_BreakHitResult_HitBoneName) == 0x000400, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_BreakHitResult_BoneName) == 0x000408, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_BreakHitResult_HitItem) == 0x000410, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_BreakHitResult_ElementIndex) == 0x000414, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_BreakHitResult_FaceIndex) == 0x000418, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_BreakHitResult_TraceStart) == 0x000420, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_BreakHitResult_TraceEnd) == 0x000438, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, Temp_bool_IsClosed_Variable) == 0x000450, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x000458, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x000540, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_HasAuthority_ReturnValue_4) == 0x000541, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, K2Node_CustomEvent_Target) == 0x000548, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, K2Node_DynamicCast_AsBPI_Destructible) == 0x000550, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::K2Node_DynamicCast_AsBPI_Destructible' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, K2Node_DynamicCast_bSuccess_1) == 0x000560, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000568, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000580, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_GetPlayerController_ReturnValue) == 0x000588, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_VLerp_ReturnValue) == 0x000590, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_K2_SetActorLocation_SweepHitResult_2) == 0x0005A8, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_K2_SetActorLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_K2_SetActorLocation_ReturnValue_2) == 0x000690, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_K2_SetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_ExecuteUbergraph_BP_Thunder, CallFunc_SetPlayRate_NewRate_ImplicitCast) == 0x000694, "Member 'BP_Thunder_C_ExecuteUbergraph_BP_Thunder::CallFunc_SetPlayRate_NewRate_ImplicitCast' has a wrong offset!");

// Function BP_Thunder.BP_Thunder_C.IsActivated
// 0x0001 (0x0001 - 0x0000)
struct BP_Thunder_C_IsActivated final
{
public:
	bool                                          Activated;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Thunder_C_IsActivated) == 0x000001, "Wrong alignment on BP_Thunder_C_IsActivated");
static_assert(sizeof(BP_Thunder_C_IsActivated) == 0x000001, "Wrong size on BP_Thunder_C_IsActivated");
static_assert(offsetof(BP_Thunder_C_IsActivated, Activated) == 0x000000, "Member 'BP_Thunder_C_IsActivated::Activated' has a wrong offset!");

// Function BP_Thunder.BP_Thunder_C.UserConstructionScript
// 0x0030 (0x0030 - 0x0000)
struct BP_Thunder_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Thunder_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Thunder_C_UserConstructionScript");
static_assert(sizeof(BP_Thunder_C_UserConstructionScript) == 0x000030, "Wrong size on BP_Thunder_C_UserConstructionScript");
static_assert(offsetof(BP_Thunder_C_UserConstructionScript, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_Thunder_C_UserConstructionScript::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Thunder_C_UserConstructionScript, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_Thunder_C_UserConstructionScript::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

}

