#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PCM_Game

#include "Basic.hpp"

#include "PCM_Game_classes.hpp"
#include "PCM_Game_parameters.hpp"


namespace SDK
{

// Function PCM_Game.PCM_Game_C.AddVolume
// (BlueprintCallable, BlueprintEvent)

void APCM_Game_C::AddVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PCM_Game_C", "AddVolume");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PCM_Game.PCM_Game_C.AddWaterPP
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APostProcessVolume*               PP                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APCM_Game_C::AddWaterPP(class APostProcessVolume* PP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PCM_Game_C", "AddWaterPP");

	Params::PCM_Game_C_AddWaterPP Parms{};

	Parms.PP = PP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PCM_Game.PCM_Game_C.CustomEvent
// (BlueprintCallable, BlueprintEvent)

void APCM_Game_C::CustomEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PCM_Game_C", "CustomEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PCM_Game.PCM_Game_C.ExecuteUbergraph_PCM_Game
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APCM_Game_C::ExecuteUbergraph_PCM_Game(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PCM_Game_C", "ExecuteUbergraph_PCM_Game");

	Params::PCM_Game_C_ExecuteUbergraph_PCM_Game Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PCM_Game.PCM_Game_C.InWater
// (BlueprintCallable, BlueprintEvent)

void APCM_Game_C::InWater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PCM_Game_C", "InWater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PCM_Game.PCM_Game_C.Make Lava PP Ref
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APCM_Game_C::Make_Lava_PP_Ref()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PCM_Game_C", "Make Lava PP Ref");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PCM_Game.PCM_Game_C.MakeLavaRef
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APCM_Game_C::MakeLavaRef()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PCM_Game_C", "MakeLavaRef");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PCM_Game.PCM_Game_C.OutWater
// (BlueprintCallable, BlueprintEvent)

void APCM_Game_C::OutWater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PCM_Game_C", "OutWater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PCM_Game.PCM_Game_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void APCM_Game_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PCM_Game_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PCM_Game.PCM_Game_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APCM_Game_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PCM_Game_C", "ReceiveTick");

	Params::PCM_Game_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PCM_Game.PCM_Game_C.RemoveVolume
// (BlueprintCallable, BlueprintEvent)

void APCM_Game_C::RemoveVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PCM_Game_C", "RemoveVolume");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PCM_Game.PCM_Game_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void APCM_Game_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PCM_Game_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PCM_Game.PCM_Game_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void APCM_Game_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PCM_Game_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PCM_Game.PCM_Game_C.Update
// (BlueprintCallable, BlueprintEvent)

void APCM_Game_C::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PCM_Game_C", "Update");

	UObject::ProcessEvent(Func, nullptr);
}

}

