#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DoorChoice

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DoorChoice.BP_DoorChoice_C
// 0x00E8 (0x0380 - 0x0298)
class ABP_DoorChoice_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Cylinder1;                                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cylinder;                                          // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box1;                                              // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Door04;                                         // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Door05;                                         // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_beam;                                           // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_beam1;                                          // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Door02;                                         // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Door01;                                         // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Door03;                                         // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget1;                                           // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_beam2;                                          // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Door1;                                             // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Door;                                              // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget2;                                           // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_577D8FD240605EAF97AF81AB9631DA85; // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_577D8FD240605EAF97AF81AB9631DA85; // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38CF[0x3];                                     // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_NewTrack_0_68D74B3F499225682D6F06BD5DD7C962; // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline__Direction_68D74B3F499225682D6F06BD5DD7C962; // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38D0[0x3];                                     // 0x033D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline;                                          // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 Answer;                                            // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          RightDoor;                                         // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_38D1[0x7];                                     // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RightDoorText;                                     // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 LeftDoorText;                                      // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void BndEvt__BP_DoorChoice_Box1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_DoorChoice_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ExecuteUbergraph_BP_DoorChoice(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline__FinishedFunc();
	void Timeline__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DoorChoice_C">();
	}
	static class ABP_DoorChoice_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DoorChoice_C>();
	}
};
static_assert(alignof(ABP_DoorChoice_C) == 0x000008, "Wrong alignment on ABP_DoorChoice_C");
static_assert(sizeof(ABP_DoorChoice_C) == 0x000380, "Wrong size on ABP_DoorChoice_C");
static_assert(offsetof(ABP_DoorChoice_C, UberGraphFrame) == 0x000298, "Member 'ABP_DoorChoice_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, Cylinder1) == 0x0002A0, "Member 'ABP_DoorChoice_C::Cylinder1' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, Cylinder) == 0x0002A8, "Member 'ABP_DoorChoice_C::Cylinder' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, Box1) == 0x0002B0, "Member 'ABP_DoorChoice_C::Box1' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, Box) == 0x0002B8, "Member 'ABP_DoorChoice_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, SM_Door04) == 0x0002C0, "Member 'ABP_DoorChoice_C::SM_Door04' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, SM_Door05) == 0x0002C8, "Member 'ABP_DoorChoice_C::SM_Door05' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, SM_beam) == 0x0002D0, "Member 'ABP_DoorChoice_C::SM_beam' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, SM_beam1) == 0x0002D8, "Member 'ABP_DoorChoice_C::SM_beam1' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, SM_Door02) == 0x0002E0, "Member 'ABP_DoorChoice_C::SM_Door02' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, SM_Door01) == 0x0002E8, "Member 'ABP_DoorChoice_C::SM_Door01' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, SM_Door03) == 0x0002F0, "Member 'ABP_DoorChoice_C::SM_Door03' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, Widget1) == 0x0002F8, "Member 'ABP_DoorChoice_C::Widget1' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, SM_beam2) == 0x000300, "Member 'ABP_DoorChoice_C::SM_beam2' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, Door1) == 0x000308, "Member 'ABP_DoorChoice_C::Door1' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, Door) == 0x000310, "Member 'ABP_DoorChoice_C::Door' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, Widget2) == 0x000318, "Member 'ABP_DoorChoice_C::Widget2' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, DefaultSceneRoot) == 0x000320, "Member 'ABP_DoorChoice_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, Timeline_0_NewTrack_0_577D8FD240605EAF97AF81AB9631DA85) == 0x000328, "Member 'ABP_DoorChoice_C::Timeline_0_NewTrack_0_577D8FD240605EAF97AF81AB9631DA85' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, Timeline_0__Direction_577D8FD240605EAF97AF81AB9631DA85) == 0x00032C, "Member 'ABP_DoorChoice_C::Timeline_0__Direction_577D8FD240605EAF97AF81AB9631DA85' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, Timeline_0) == 0x000330, "Member 'ABP_DoorChoice_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, Timeline_NewTrack_0_68D74B3F499225682D6F06BD5DD7C962) == 0x000338, "Member 'ABP_DoorChoice_C::Timeline_NewTrack_0_68D74B3F499225682D6F06BD5DD7C962' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, Timeline__Direction_68D74B3F499225682D6F06BD5DD7C962) == 0x00033C, "Member 'ABP_DoorChoice_C::Timeline__Direction_68D74B3F499225682D6F06BD5DD7C962' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, Timeline) == 0x000340, "Member 'ABP_DoorChoice_C::Timeline' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, Answer) == 0x000348, "Member 'ABP_DoorChoice_C::Answer' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, RightDoor) == 0x000358, "Member 'ABP_DoorChoice_C::RightDoor' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, RightDoorText) == 0x000360, "Member 'ABP_DoorChoice_C::RightDoorText' has a wrong offset!");
static_assert(offsetof(ABP_DoorChoice_C, LeftDoorText) == 0x000370, "Member 'ABP_DoorChoice_C::LeftDoorText' has a wrong offset!");

}

