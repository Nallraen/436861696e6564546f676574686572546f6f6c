#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_MovingBouncer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_MovingObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_MovingBouncer.BPC_MovingBouncer_C
// 0x0040 (0x0490 - 0x0450)
class ABPC_MovingBouncer_C final : public ABP_MovingObject_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BPC_MovingBouncer_C;                // 0x0450(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight;                                        // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cylinder;                                          // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         AnimateTL_NewTrack_0_2089342D45E3CEE3313886837695E056; // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            AnimateTL__Direction_2089342D45E3CEE3313886837695E056; // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9E[0x3];                                     // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     AnimateTL;                                         // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CylinderScale;                                     // 0x0478(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Animate();
	void AnimateTL__FinishedFunc();
	void AnimateTL__UpdateFunc();
	void BndEvt__BPC_MovingBouncer_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BounceAll(class UObject* Target);
	void ExecuteUbergraph_BPC_MovingBouncer(int32 EntryPoint);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_MovingBouncer_C">();
	}
	static class ABPC_MovingBouncer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPC_MovingBouncer_C>();
	}
};
static_assert(alignof(ABPC_MovingBouncer_C) == 0x000010, "Wrong alignment on ABPC_MovingBouncer_C");
static_assert(sizeof(ABPC_MovingBouncer_C) == 0x000490, "Wrong size on ABPC_MovingBouncer_C");
static_assert(offsetof(ABPC_MovingBouncer_C, UberGraphFrame_BPC_MovingBouncer_C) == 0x000450, "Member 'ABPC_MovingBouncer_C::UberGraphFrame_BPC_MovingBouncer_C' has a wrong offset!");
static_assert(offsetof(ABPC_MovingBouncer_C, PointLight) == 0x000458, "Member 'ABPC_MovingBouncer_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABPC_MovingBouncer_C, Cylinder) == 0x000460, "Member 'ABPC_MovingBouncer_C::Cylinder' has a wrong offset!");
static_assert(offsetof(ABPC_MovingBouncer_C, AnimateTL_NewTrack_0_2089342D45E3CEE3313886837695E056) == 0x000468, "Member 'ABPC_MovingBouncer_C::AnimateTL_NewTrack_0_2089342D45E3CEE3313886837695E056' has a wrong offset!");
static_assert(offsetof(ABPC_MovingBouncer_C, AnimateTL__Direction_2089342D45E3CEE3313886837695E056) == 0x00046C, "Member 'ABPC_MovingBouncer_C::AnimateTL__Direction_2089342D45E3CEE3313886837695E056' has a wrong offset!");
static_assert(offsetof(ABPC_MovingBouncer_C, AnimateTL) == 0x000470, "Member 'ABPC_MovingBouncer_C::AnimateTL' has a wrong offset!");
static_assert(offsetof(ABPC_MovingBouncer_C, CylinderScale) == 0x000478, "Member 'ABPC_MovingBouncer_C::CylinderScale' has a wrong offset!");

}

