#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_AsianFan

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPC_AsianFan.BPC_AsianFan_C.ExecuteUbergraph_BPC_AsianFan
// 0x0110 (0x0110 - 0x0000)
struct BPC_AsianFan_C_ExecuteUbergraph_BPC_AsianFan final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1292[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1293[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0028(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPC_AsianFan_C_ExecuteUbergraph_BPC_AsianFan) == 0x000008, "Wrong alignment on BPC_AsianFan_C_ExecuteUbergraph_BPC_AsianFan");
static_assert(sizeof(BPC_AsianFan_C_ExecuteUbergraph_BPC_AsianFan) == 0x000110, "Wrong size on BPC_AsianFan_C_ExecuteUbergraph_BPC_AsianFan");
static_assert(offsetof(BPC_AsianFan_C_ExecuteUbergraph_BPC_AsianFan, EntryPoint) == 0x000000, "Member 'BPC_AsianFan_C_ExecuteUbergraph_BPC_AsianFan::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPC_AsianFan_C_ExecuteUbergraph_BPC_AsianFan, CallFunc_RLerp_ReturnValue) == 0x000008, "Member 'BPC_AsianFan_C_ExecuteUbergraph_BPC_AsianFan::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_AsianFan_C_ExecuteUbergraph_BPC_AsianFan, Temp_bool_Variable) == 0x000020, "Member 'BPC_AsianFan_C_ExecuteUbergraph_BPC_AsianFan::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPC_AsianFan_C_ExecuteUbergraph_BPC_AsianFan, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BPC_AsianFan_C_ExecuteUbergraph_BPC_AsianFan::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_AsianFan_C_ExecuteUbergraph_BPC_AsianFan, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000028, "Member 'BPC_AsianFan_C_ExecuteUbergraph_BPC_AsianFan::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

}

