#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Decaler_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Decaler_BP.Decaler_BP_C.BndEvt__Decaler_BP_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct Decaler_BP_C_BndEvt__Decaler_BP_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3937[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Decaler_BP_C_BndEvt__Decaler_BP_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Decaler_BP_C_BndEvt__Decaler_BP_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Decaler_BP_C_BndEvt__Decaler_BP_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on Decaler_BP_C_BndEvt__Decaler_BP_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Decaler_BP_C_BndEvt__Decaler_BP_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Decaler_BP_C_BndEvt__Decaler_BP_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_BndEvt__Decaler_BP_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Decaler_BP_C_BndEvt__Decaler_BP_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_BndEvt__Decaler_BP_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Decaler_BP_C_BndEvt__Decaler_BP_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_BndEvt__Decaler_BP_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Decaler_BP_C_BndEvt__Decaler_BP_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_BndEvt__Decaler_BP_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Decaler_BP_C_BndEvt__Decaler_BP_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_BndEvt__Decaler_BP_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Decaler_BP_C_BndEvt__Decaler_BP_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function Decaler_BP.Decaler_BP_C.ExecuteUbergraph_Decaler_BP
// 0x0308 (0x0308 - 0x0000)
struct Decaler_BP_C_ExecuteUbergraph_Decaler_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3938[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3939[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393A[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393B[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0058(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393C[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393D[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x01B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Character_C*>                CallFunc_GetAllActorsOfClass_OutActors;            // 0x02B8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        CallFunc_Array_Get_Item;                           // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393E[0x4];                                     // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character;                // 0x02F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP) == 0x000008, "Wrong alignment on Decaler_BP_C_ExecuteUbergraph_Decaler_BP");
static_assert(sizeof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP) == 0x000308, "Wrong size on Decaler_BP_C_ExecuteUbergraph_Decaler_BP");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, EntryPoint) == 0x000000, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000008, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, Temp_bool_Has_Been_Initd_Variable) == 0x000020, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, Temp_bool_IsClosed_Variable) == 0x000030, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000038, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, K2Node_ComponentBoundEvent_OtherActor) == 0x000040, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, K2Node_ComponentBoundEvent_OtherComp) == 0x000048, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000050, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, K2Node_ComponentBoundEvent_bFromSweep) == 0x000054, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, K2Node_ComponentBoundEvent_SweepResult) == 0x000058, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, CallFunc_HasAuthority_ReturnValue) == 0x000140, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, K2Node_DynamicCast_AsPawn) == 0x000148, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, K2Node_DynamicCast_bSuccess) == 0x000150, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, CallFunc_BreakVector_X) == 0x000158, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, CallFunc_BreakVector_Y) == 0x000160, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, CallFunc_BreakVector_Z) == 0x000168, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, CallFunc_BreakVector_X_1) == 0x000170, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, CallFunc_BreakVector_Y_1) == 0x000178, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, CallFunc_BreakVector_Z_1) == 0x000180, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, CallFunc_MakeVector_ReturnValue) == 0x000188, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, CallFunc_VLerp_ReturnValue) == 0x0001A0, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0001B8, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, CallFunc_GetForwardVector_ReturnValue) == 0x0002A0, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, CallFunc_GetAllActorsOfClass_OutActors) == 0x0002B8, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0002C8, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, CallFunc_Array_Get_Item) == 0x0002E0, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, CallFunc_Array_Length_ReturnValue) == 0x0002E8, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, K2Node_DynamicCast_AsBPI_Character) == 0x0002F0, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::K2Node_DynamicCast_AsBPI_Character' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, K2Node_DynamicCast_bSuccess_1) == 0x000300, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Decaler_BP_C_ExecuteUbergraph_Decaler_BP, CallFunc_Less_IntInt_ReturnValue) == 0x000301, "Member 'Decaler_BP_C_ExecuteUbergraph_Decaler_BP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

