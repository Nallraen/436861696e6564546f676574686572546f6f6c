#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Road_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ConnectionNum_structs.hpp"
#include "Road_Data_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Road_BP.Road_BP_C
// 0x04E8 (0x0780 - 0x0298)
class ARoad_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USplineComponent*                       Spline;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          GenPerSpline;                                      // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hide_Road;                                         // 0x02A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowSplinePointNumbers;                            // 0x02AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hide_Side_Meshes_Only;                             // 0x02AB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Splines_Only;                                      // 0x02AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Update_Spline;                                     // 0x02AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LoopTrack;                                         // 0x02AE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Add_Collision;                                     // 0x02AF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Automatic_Placement;                           // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD8[0x7];                                     // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Road_Width_for_placement;                          // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spline_Lenght;                                     // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spline_Linear_Lenght;                              // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Road_Width_multiplier;                             // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfSplinePoints;                              // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD9[0x4];                                     // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            BridgeSupport;                                     // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Add_Bridge_Support;                                // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Spacing_Method_For_Bridge_Support;             // 0x02E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemoveFirstSupport;                                // 0x02EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemoveLastSupport;                                 // 0x02EB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Global_CurrentLoopIndex;                           // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Draw_Right_Sidewalk;                               // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Draw_Left_Sidewalk;                                // 0x02F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Draw_Middle_Sidewalk;                              // 0x02F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BDA[0x5];                                     // 0x02F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Right_Sidewalk_Mesh;                               // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Left_Sidewalk_Mesh;                                // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Make_Straight_Support;                             // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BDB[0x7];                                     // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CurrentTrackPoint;                                 // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class UStaticMesh*                            Middle_Sidewalk_Mesh;                              // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Right_Side_Guard_Mesh;                             // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            LeftSideGuardMesh;                                 // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Right_Side_Guard_Fence_Mesh;                       // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Left_Side_Guard_Fence_Mesh;                        // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Static_Mesh_Component;                         // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Add_Right_Sidewalk;                                // 0x0349(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Add_Left_Sidewalk;                                 // 0x034A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Add_Middle_Sidewalk;                               // 0x034B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Add_Right_Side_Guard;                              // 0x034C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BDC[0x3];                                     // 0x034D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ALandscapeProxy*                        Landscape_;                                        // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Lower_Terrain;                                 // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Raise_Terrain;                                 // 0x0359(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Do_Complex_Line_Traycing;                          // 0x035A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreventHighValue;                                  // 0x035B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BDD[0x4];                                     // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Road_Width_For_Landscape;                          // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Road_Side_Falloff;                                 // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Trace_Lenght;                                      // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Num_Of_Iteration;                                  // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Number_of_Subdivisions_to_be_added;                // 0x037C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Layer_To_Apply;                                    // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Add_Left_Side_Guard;                               // 0x0384(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Add_Right_Side_Guard_Fence;                        // 0x0385(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Add_Left_Side_Guard_Fence;                         // 0x0386(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Spacing__Method;                               // 0x0387(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Flip_Left_Side_Guard_;                             // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Flip_Left_Sidewalk;                                // 0x0389(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Flip_Left_Side_Guard_Fence;                        // 0x038A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Remove_First_Side_Guard;                           // 0x038B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Remove_Last_Side_Guard;                            // 0x038C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Make_Straight_Side_Guard;                          // 0x038D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BDE[0x2];                                     // 0x038E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Side_Guard_Spacing;                                // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Num_Of_Left_Side_Guard;                            // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Num_Of_Right_Side_Guard;                           // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Left_Sidewalk_Offset;                              // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Right_Sidewalk_Offset;                             // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRoad_Data                             Defaults_Variables_Values_;                        // 0x03C0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Actor_To_Spawn;                                    // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Road_to_Connect;                                   // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          Move_Road_At_Con_Location;                         // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Connect__Road;                                     // 0x0421(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BDF[0x6];                                     // 0x0422(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   SplineRef;                                         // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Right_Side_Guard_Offset;                           // 0x0430(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Left_Side_Guard_Offset;                            // 0x0440(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Sidewalk_Global_Scale;                             // 0x0450(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Right_Side_Guard_Fence_Offset;                     // 0x0460(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Left_Side_Guard_Fence_Offset;                      // 0x0470(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Right_Side_Guarde_Fence_Scale;                     // 0x0480(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Left_Side_Guard_Fence_Scale;                       // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Right_Side_Guard_Scale;                            // 0x04A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Left_Side_Guard_Scale;                             // 0x04B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            RoadMesh;                                          // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRoad_Data>                     Road_Data;                                         // 0x04D8(0x0010)(Edit, BlueprintVisible)
	int32                                         RoadIndexWhereToConnect2ndRoad;                    // 0x04E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConnectionNum                                SecondRoadConnectionType;                          // 0x04EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BE0[0x3];                                     // 0x04ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Trace_Radius;                                      // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spline_Tangent_Lenght_At_Con_Location;             // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARoad_BP_C*                             HitActor;                                          // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            RightRoadLamp;                                     // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            LeftRoadLamp;                                      // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            MiddleRoadLamp;                                    // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          AddRightRoadLamp;                                  // 0x0520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AddLeftRoadLamp;                                   // 0x0521(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AddMiddleRoadLamp;                                 // 0x0522(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlipLeftRoadLamp;                                  // 0x0523(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlipMiddleRoadLamp;                                // 0x0524(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemoveFirstRoadLamp;                               // 0x0525(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemoveLastRoadLamp;                                // 0x0526(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MakeStraightLamp;                                  // 0x0527(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Spacing_RL;                                    // 0x0528(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BE1[0x7];                                     // 0x0529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Road_Lamp_Spacing;                                 // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightRoadLampScale;                                // 0x0538(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LeftRoadLampScale;                                 // 0x0550(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MiddleRoadLampScale;                               // 0x0568(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RightLampLocationOffset;                           // 0x0580(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LeftLampLocationOffset;                            // 0x0590(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MiddleLampLocationOffset;                          // 0x05A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumOfRightRoadLamp;                                // 0x05B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumOfLeftRoadLamp;                                 // 0x05B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumOfMiddleRoadLamp;                               // 0x05B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Override_Side_Guard_Fence_Material;            // 0x05BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Override_Road_Material;                        // 0x05BD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Override_Sidewalk_Material;                    // 0x05BE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BE2[0x1];                                     // 0x05BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      Road_Material_1;                                   // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Road_Material_2;                                   // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Road_Material_3;                                   // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Road_Material_4;                                   // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Road_Material_5;                                   // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Right_SideWalk_Material_1;                         // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Right_SideWalk_Material_2;                         // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Left_SideWalk_Material_1;                          // 0x05F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Left_Side_Walk_Material_2;                         // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Middle_SideWalk_Material_1;                        // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Middle_Side_Walk_Material_2;                       // 0x0610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Bridge_Support_Spacing;                            // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Minimal_thickness;                                 // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfBridgeSupport;                             // 0x0628(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BE3[0x4];                                     // 0x062C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                BridgeGlobalSupportScale;                          // 0x0630(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              BridgeSupportLocationOffset;                       // 0x0648(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Add_Right_Lights;                                  // 0x0658(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Add_Left_Lights;                                   // 0x0659(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Add_Middle_Lights;                                 // 0x065A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cast_Shadows;                                      // 0x065B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dynamic_Indirect_Lighting;                         // 0x065C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BE4[0x3];                                     // 0x065D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Light_Color;                                       // 0x0660(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Side_Lamp_Offset_X_;                               // 0x0670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Middle_Lamp_Offset_Y;                              // 0x0678(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Lamp_Z_offset;                                     // 0x0680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Lamp_Pitch___Rot_Y__;                              // 0x0688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Lamp_Yaw___Rot_Z__;                                // 0x0690(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Light_Intensity;                                   // 0x0698(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Attenuation_Radius;                                // 0x06A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Inner_Conne_Angle;                                 // 0x06A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Outer_Conne_Angle;                                 // 0x06B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Source_Radius;                                     // 0x06B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Source_Lenght;                                     // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Light_Falloff_Exponent_;                           // 0x06C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Light_Function_Fade_Distance;                      // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Tick;                                          // 0x06D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cast_Shadow__Road_Segment_only_;                   // 0x06D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sidewalk_Cast_Shadow_;                             // 0x06DA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Side_Guards_Cast_Shadow;                           // 0x06DB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Road_Lamp_Cast_Shadow;                             // 0x06DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Left_Side_Guard_Fence_Cast_Shadow;                 // 0x06DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Right_Side_Guard_Fence_Cast_Shadow;                // 0x06DE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Bridge_Support_Cast_Shadow;                        // 0x06DF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Road_Culling_Distance;                             // 0x06E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sidewalk_Culling_Distance;                         // 0x06E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumOfRoadSegments;                                 // 0x06F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BE5[0x4];                                     // 0x06F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Blueprint_To_Spawn;                                // 0x06F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Blueprint_Spacing;                                 // 0x0700(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location_Offset;                                   // 0x0708(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Blueprint_Scale;                                   // 0x0720(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation_Offset;                                   // 0x0738(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        Indirect_Lighting_Intensity;                       // 0x0750(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Side_Guard_Culling_Distance;                       // 0x0758(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Road_Lamp_Culling_Distance;                        // 0x0760(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Bridge_Support_Culling_Distance;                   // 0x0768(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Side_Guard_Fence_Culling_Distance;                 // 0x0770(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Spawned_Actor;                                     // 0x0778(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Adjust_Landscape_To_Road();
	void Align_Road_To_Landscape();
	void Align_Road_To_Landscape_();
	void BuildRoadMesh(int32 Loop_Index, class UStaticMesh* RoadElementMesh, const struct FVector2D& SidesWalkStartScale, const struct FVector2D& SidesWalkLocationOffset, const struct FVector2D& SidesWalkEndScale, class UMaterialInstance* Material_s_Slot_0, class UMaterialInstance* Material_s_Slot_1_, class UMaterialInstance* Material_s_Slot_2, class UMaterialInstance* Material_s_Slot_3, class UMaterialInstance* Material_s_Slot_4, bool Cast_Shadow, double Maximum_Draw_Distance, bool Can_Override_Material);
	void BuildSideGuardMesh(class UStaticMesh* Mesh, int32 Right_or_Middle_or_Left, const struct FVector2D& Mesh_Y_Z_Scale, double X_Scale, const struct FVector2D& Param_Location_Offset, int32 Number_Of_Meshes, bool MakeStraight, bool Add_Lights, bool Is_Double_lights_, bool Use_Spacing_Method, double Spacing, double Culling_Distance, bool Cast_Shadow, bool Remove_first_mesh, bool Remove_last_mesh);
	void Calculate_Mesh_Size(class UStaticMesh* StaticMesh, double* Mesh_X_Size, double* Mesh_Y_Size, double* Mesh_Z_Size, class UStaticMesh** Static_Mesh);
	void Connect_Road_();
	void ConnectRoad(int32 Index_Conection, const struct FRotator& Index_Rotation, const struct FVector& Index_Location);
	void DrawBridgeSupport(bool Cast_Shadow, double Culling_Distance, bool Param_RemoveFirstSupport, bool Param_RemoveLastSupport);
	void ExecuteUbergraph_Road_BP(int32 EntryPoint);
	void Move_Road_At_Index_Location();
	void Perform_Landscape_Adjustation();
	void SetRoadLocation(class AActor* Hit_Actor, const struct FVector& Location, const struct FRotator& Rotation);
	void Spawn__Actor();
	void Spawn_Blueprint();
	void Spawn_Blueprint_();
	void Spawn_Road_Intersection();
	void Update_Spline_();
	void Update_Spline__();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Road_BP_C">();
	}
	static class ARoad_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARoad_BP_C>();
	}
};
static_assert(alignof(ARoad_BP_C) == 0x000008, "Wrong alignment on ARoad_BP_C");
static_assert(sizeof(ARoad_BP_C) == 0x000780, "Wrong size on ARoad_BP_C");
static_assert(offsetof(ARoad_BP_C, UberGraphFrame) == 0x000298, "Member 'ARoad_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Spline) == 0x0002A0, "Member 'ARoad_BP_C::Spline' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, GenPerSpline) == 0x0002A8, "Member 'ARoad_BP_C::GenPerSpline' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Hide_Road) == 0x0002A9, "Member 'ARoad_BP_C::Hide_Road' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, ShowSplinePointNumbers) == 0x0002AA, "Member 'ARoad_BP_C::ShowSplinePointNumbers' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Hide_Side_Meshes_Only) == 0x0002AB, "Member 'ARoad_BP_C::Hide_Side_Meshes_Only' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Splines_Only) == 0x0002AC, "Member 'ARoad_BP_C::Splines_Only' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Update_Spline) == 0x0002AD, "Member 'ARoad_BP_C::Update_Spline' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, LoopTrack) == 0x0002AE, "Member 'ARoad_BP_C::LoopTrack' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Add_Collision) == 0x0002AF, "Member 'ARoad_BP_C::Add_Collision' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Use_Automatic_Placement) == 0x0002B0, "Member 'ARoad_BP_C::Use_Automatic_Placement' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Road_Width_for_placement) == 0x0002B8, "Member 'ARoad_BP_C::Road_Width_for_placement' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Spline_Lenght) == 0x0002C0, "Member 'ARoad_BP_C::Spline_Lenght' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Spline_Linear_Lenght) == 0x0002C8, "Member 'ARoad_BP_C::Spline_Linear_Lenght' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Road_Width_multiplier) == 0x0002D0, "Member 'ARoad_BP_C::Road_Width_multiplier' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, NumberOfSplinePoints) == 0x0002D8, "Member 'ARoad_BP_C::NumberOfSplinePoints' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, BridgeSupport) == 0x0002E0, "Member 'ARoad_BP_C::BridgeSupport' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Add_Bridge_Support) == 0x0002E8, "Member 'ARoad_BP_C::Add_Bridge_Support' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Use_Spacing_Method_For_Bridge_Support) == 0x0002E9, "Member 'ARoad_BP_C::Use_Spacing_Method_For_Bridge_Support' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, RemoveFirstSupport) == 0x0002EA, "Member 'ARoad_BP_C::RemoveFirstSupport' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, RemoveLastSupport) == 0x0002EB, "Member 'ARoad_BP_C::RemoveLastSupport' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Global_CurrentLoopIndex) == 0x0002EC, "Member 'ARoad_BP_C::Global_CurrentLoopIndex' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Draw_Right_Sidewalk) == 0x0002F0, "Member 'ARoad_BP_C::Draw_Right_Sidewalk' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Draw_Left_Sidewalk) == 0x0002F1, "Member 'ARoad_BP_C::Draw_Left_Sidewalk' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Draw_Middle_Sidewalk) == 0x0002F2, "Member 'ARoad_BP_C::Draw_Middle_Sidewalk' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Right_Sidewalk_Mesh) == 0x0002F8, "Member 'ARoad_BP_C::Right_Sidewalk_Mesh' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Left_Sidewalk_Mesh) == 0x000300, "Member 'ARoad_BP_C::Left_Sidewalk_Mesh' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Make_Straight_Support) == 0x000308, "Member 'ARoad_BP_C::Make_Straight_Support' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, CurrentTrackPoint) == 0x000310, "Member 'ARoad_BP_C::CurrentTrackPoint' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Middle_Sidewalk_Mesh) == 0x000320, "Member 'ARoad_BP_C::Middle_Sidewalk_Mesh' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Right_Side_Guard_Mesh) == 0x000328, "Member 'ARoad_BP_C::Right_Side_Guard_Mesh' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, LeftSideGuardMesh) == 0x000330, "Member 'ARoad_BP_C::LeftSideGuardMesh' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Right_Side_Guard_Fence_Mesh) == 0x000338, "Member 'ARoad_BP_C::Right_Side_Guard_Fence_Mesh' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Left_Side_Guard_Fence_Mesh) == 0x000340, "Member 'ARoad_BP_C::Left_Side_Guard_Fence_Mesh' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Use_Static_Mesh_Component) == 0x000348, "Member 'ARoad_BP_C::Use_Static_Mesh_Component' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Add_Right_Sidewalk) == 0x000349, "Member 'ARoad_BP_C::Add_Right_Sidewalk' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Add_Left_Sidewalk) == 0x00034A, "Member 'ARoad_BP_C::Add_Left_Sidewalk' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Add_Middle_Sidewalk) == 0x00034B, "Member 'ARoad_BP_C::Add_Middle_Sidewalk' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Add_Right_Side_Guard) == 0x00034C, "Member 'ARoad_BP_C::Add_Right_Side_Guard' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Landscape_) == 0x000350, "Member 'ARoad_BP_C::Landscape_' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Can_Lower_Terrain) == 0x000358, "Member 'ARoad_BP_C::Can_Lower_Terrain' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Can_Raise_Terrain) == 0x000359, "Member 'ARoad_BP_C::Can_Raise_Terrain' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Do_Complex_Line_Traycing) == 0x00035A, "Member 'ARoad_BP_C::Do_Complex_Line_Traycing' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, PreventHighValue) == 0x00035B, "Member 'ARoad_BP_C::PreventHighValue' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Road_Width_For_Landscape) == 0x000360, "Member 'ARoad_BP_C::Road_Width_For_Landscape' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Road_Side_Falloff) == 0x000368, "Member 'ARoad_BP_C::Road_Side_Falloff' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Trace_Lenght) == 0x000370, "Member 'ARoad_BP_C::Trace_Lenght' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Num_Of_Iteration) == 0x000378, "Member 'ARoad_BP_C::Num_Of_Iteration' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Number_of_Subdivisions_to_be_added) == 0x00037C, "Member 'ARoad_BP_C::Number_of_Subdivisions_to_be_added' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Layer_To_Apply) == 0x000380, "Member 'ARoad_BP_C::Layer_To_Apply' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Add_Left_Side_Guard) == 0x000384, "Member 'ARoad_BP_C::Add_Left_Side_Guard' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Add_Right_Side_Guard_Fence) == 0x000385, "Member 'ARoad_BP_C::Add_Right_Side_Guard_Fence' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Add_Left_Side_Guard_Fence) == 0x000386, "Member 'ARoad_BP_C::Add_Left_Side_Guard_Fence' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Use_Spacing__Method) == 0x000387, "Member 'ARoad_BP_C::Use_Spacing__Method' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Flip_Left_Side_Guard_) == 0x000388, "Member 'ARoad_BP_C::Flip_Left_Side_Guard_' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Flip_Left_Sidewalk) == 0x000389, "Member 'ARoad_BP_C::Flip_Left_Sidewalk' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Flip_Left_Side_Guard_Fence) == 0x00038A, "Member 'ARoad_BP_C::Flip_Left_Side_Guard_Fence' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Remove_First_Side_Guard) == 0x00038B, "Member 'ARoad_BP_C::Remove_First_Side_Guard' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Remove_Last_Side_Guard) == 0x00038C, "Member 'ARoad_BP_C::Remove_Last_Side_Guard' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Make_Straight_Side_Guard) == 0x00038D, "Member 'ARoad_BP_C::Make_Straight_Side_Guard' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Side_Guard_Spacing) == 0x000390, "Member 'ARoad_BP_C::Side_Guard_Spacing' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Num_Of_Left_Side_Guard) == 0x000398, "Member 'ARoad_BP_C::Num_Of_Left_Side_Guard' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Num_Of_Right_Side_Guard) == 0x00039C, "Member 'ARoad_BP_C::Num_Of_Right_Side_Guard' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Left_Sidewalk_Offset) == 0x0003A0, "Member 'ARoad_BP_C::Left_Sidewalk_Offset' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Right_Sidewalk_Offset) == 0x0003B0, "Member 'ARoad_BP_C::Right_Sidewalk_Offset' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Defaults_Variables_Values_) == 0x0003C0, "Member 'ARoad_BP_C::Defaults_Variables_Values_' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Actor_To_Spawn) == 0x000410, "Member 'ARoad_BP_C::Actor_To_Spawn' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Road_to_Connect) == 0x000418, "Member 'ARoad_BP_C::Road_to_Connect' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Move_Road_At_Con_Location) == 0x000420, "Member 'ARoad_BP_C::Move_Road_At_Con_Location' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Connect__Road) == 0x000421, "Member 'ARoad_BP_C::Connect__Road' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, SplineRef) == 0x000428, "Member 'ARoad_BP_C::SplineRef' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Right_Side_Guard_Offset) == 0x000430, "Member 'ARoad_BP_C::Right_Side_Guard_Offset' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Left_Side_Guard_Offset) == 0x000440, "Member 'ARoad_BP_C::Left_Side_Guard_Offset' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Sidewalk_Global_Scale) == 0x000450, "Member 'ARoad_BP_C::Sidewalk_Global_Scale' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Right_Side_Guard_Fence_Offset) == 0x000460, "Member 'ARoad_BP_C::Right_Side_Guard_Fence_Offset' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Left_Side_Guard_Fence_Offset) == 0x000470, "Member 'ARoad_BP_C::Left_Side_Guard_Fence_Offset' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Right_Side_Guarde_Fence_Scale) == 0x000480, "Member 'ARoad_BP_C::Right_Side_Guarde_Fence_Scale' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Left_Side_Guard_Fence_Scale) == 0x000490, "Member 'ARoad_BP_C::Left_Side_Guard_Fence_Scale' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Right_Side_Guard_Scale) == 0x0004A0, "Member 'ARoad_BP_C::Right_Side_Guard_Scale' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Left_Side_Guard_Scale) == 0x0004B8, "Member 'ARoad_BP_C::Left_Side_Guard_Scale' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, RoadMesh) == 0x0004D0, "Member 'ARoad_BP_C::RoadMesh' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Road_Data) == 0x0004D8, "Member 'ARoad_BP_C::Road_Data' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, RoadIndexWhereToConnect2ndRoad) == 0x0004E8, "Member 'ARoad_BP_C::RoadIndexWhereToConnect2ndRoad' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, SecondRoadConnectionType) == 0x0004EC, "Member 'ARoad_BP_C::SecondRoadConnectionType' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Trace_Radius) == 0x0004F0, "Member 'ARoad_BP_C::Trace_Radius' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Spline_Tangent_Lenght_At_Con_Location) == 0x0004F8, "Member 'ARoad_BP_C::Spline_Tangent_Lenght_At_Con_Location' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, HitActor) == 0x000500, "Member 'ARoad_BP_C::HitActor' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, RightRoadLamp) == 0x000508, "Member 'ARoad_BP_C::RightRoadLamp' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, LeftRoadLamp) == 0x000510, "Member 'ARoad_BP_C::LeftRoadLamp' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, MiddleRoadLamp) == 0x000518, "Member 'ARoad_BP_C::MiddleRoadLamp' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, AddRightRoadLamp) == 0x000520, "Member 'ARoad_BP_C::AddRightRoadLamp' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, AddLeftRoadLamp) == 0x000521, "Member 'ARoad_BP_C::AddLeftRoadLamp' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, AddMiddleRoadLamp) == 0x000522, "Member 'ARoad_BP_C::AddMiddleRoadLamp' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, FlipLeftRoadLamp) == 0x000523, "Member 'ARoad_BP_C::FlipLeftRoadLamp' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, FlipMiddleRoadLamp) == 0x000524, "Member 'ARoad_BP_C::FlipMiddleRoadLamp' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, RemoveFirstRoadLamp) == 0x000525, "Member 'ARoad_BP_C::RemoveFirstRoadLamp' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, RemoveLastRoadLamp) == 0x000526, "Member 'ARoad_BP_C::RemoveLastRoadLamp' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, MakeStraightLamp) == 0x000527, "Member 'ARoad_BP_C::MakeStraightLamp' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Use_Spacing_RL) == 0x000528, "Member 'ARoad_BP_C::Use_Spacing_RL' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Road_Lamp_Spacing) == 0x000530, "Member 'ARoad_BP_C::Road_Lamp_Spacing' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, RightRoadLampScale) == 0x000538, "Member 'ARoad_BP_C::RightRoadLampScale' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, LeftRoadLampScale) == 0x000550, "Member 'ARoad_BP_C::LeftRoadLampScale' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, MiddleRoadLampScale) == 0x000568, "Member 'ARoad_BP_C::MiddleRoadLampScale' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, RightLampLocationOffset) == 0x000580, "Member 'ARoad_BP_C::RightLampLocationOffset' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, LeftLampLocationOffset) == 0x000590, "Member 'ARoad_BP_C::LeftLampLocationOffset' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, MiddleLampLocationOffset) == 0x0005A0, "Member 'ARoad_BP_C::MiddleLampLocationOffset' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, NumOfRightRoadLamp) == 0x0005B0, "Member 'ARoad_BP_C::NumOfRightRoadLamp' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, NumOfLeftRoadLamp) == 0x0005B4, "Member 'ARoad_BP_C::NumOfLeftRoadLamp' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, NumOfMiddleRoadLamp) == 0x0005B8, "Member 'ARoad_BP_C::NumOfMiddleRoadLamp' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Can_Override_Side_Guard_Fence_Material) == 0x0005BC, "Member 'ARoad_BP_C::Can_Override_Side_Guard_Fence_Material' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Can_Override_Road_Material) == 0x0005BD, "Member 'ARoad_BP_C::Can_Override_Road_Material' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Can_Override_Sidewalk_Material) == 0x0005BE, "Member 'ARoad_BP_C::Can_Override_Sidewalk_Material' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Road_Material_1) == 0x0005C0, "Member 'ARoad_BP_C::Road_Material_1' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Road_Material_2) == 0x0005C8, "Member 'ARoad_BP_C::Road_Material_2' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Road_Material_3) == 0x0005D0, "Member 'ARoad_BP_C::Road_Material_3' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Road_Material_4) == 0x0005D8, "Member 'ARoad_BP_C::Road_Material_4' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Road_Material_5) == 0x0005E0, "Member 'ARoad_BP_C::Road_Material_5' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Right_SideWalk_Material_1) == 0x0005E8, "Member 'ARoad_BP_C::Right_SideWalk_Material_1' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Right_SideWalk_Material_2) == 0x0005F0, "Member 'ARoad_BP_C::Right_SideWalk_Material_2' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Left_SideWalk_Material_1) == 0x0005F8, "Member 'ARoad_BP_C::Left_SideWalk_Material_1' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Left_Side_Walk_Material_2) == 0x000600, "Member 'ARoad_BP_C::Left_Side_Walk_Material_2' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Middle_SideWalk_Material_1) == 0x000608, "Member 'ARoad_BP_C::Middle_SideWalk_Material_1' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Middle_Side_Walk_Material_2) == 0x000610, "Member 'ARoad_BP_C::Middle_Side_Walk_Material_2' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Bridge_Support_Spacing) == 0x000618, "Member 'ARoad_BP_C::Bridge_Support_Spacing' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Minimal_thickness) == 0x000620, "Member 'ARoad_BP_C::Minimal_thickness' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, NumberOfBridgeSupport) == 0x000628, "Member 'ARoad_BP_C::NumberOfBridgeSupport' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, BridgeGlobalSupportScale) == 0x000630, "Member 'ARoad_BP_C::BridgeGlobalSupportScale' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, BridgeSupportLocationOffset) == 0x000648, "Member 'ARoad_BP_C::BridgeSupportLocationOffset' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Add_Right_Lights) == 0x000658, "Member 'ARoad_BP_C::Add_Right_Lights' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Add_Left_Lights) == 0x000659, "Member 'ARoad_BP_C::Add_Left_Lights' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Add_Middle_Lights) == 0x00065A, "Member 'ARoad_BP_C::Add_Middle_Lights' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Cast_Shadows) == 0x00065B, "Member 'ARoad_BP_C::Cast_Shadows' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Dynamic_Indirect_Lighting) == 0x00065C, "Member 'ARoad_BP_C::Dynamic_Indirect_Lighting' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Light_Color) == 0x000660, "Member 'ARoad_BP_C::Light_Color' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Side_Lamp_Offset_X_) == 0x000670, "Member 'ARoad_BP_C::Side_Lamp_Offset_X_' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Middle_Lamp_Offset_Y) == 0x000678, "Member 'ARoad_BP_C::Middle_Lamp_Offset_Y' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Lamp_Z_offset) == 0x000680, "Member 'ARoad_BP_C::Lamp_Z_offset' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Lamp_Pitch___Rot_Y__) == 0x000688, "Member 'ARoad_BP_C::Lamp_Pitch___Rot_Y__' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Lamp_Yaw___Rot_Z__) == 0x000690, "Member 'ARoad_BP_C::Lamp_Yaw___Rot_Z__' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Light_Intensity) == 0x000698, "Member 'ARoad_BP_C::Light_Intensity' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Attenuation_Radius) == 0x0006A0, "Member 'ARoad_BP_C::Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Inner_Conne_Angle) == 0x0006A8, "Member 'ARoad_BP_C::Inner_Conne_Angle' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Outer_Conne_Angle) == 0x0006B0, "Member 'ARoad_BP_C::Outer_Conne_Angle' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Source_Radius) == 0x0006B8, "Member 'ARoad_BP_C::Source_Radius' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Source_Lenght) == 0x0006C0, "Member 'ARoad_BP_C::Source_Lenght' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Light_Falloff_Exponent_) == 0x0006C8, "Member 'ARoad_BP_C::Light_Falloff_Exponent_' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Light_Function_Fade_Distance) == 0x0006D0, "Member 'ARoad_BP_C::Light_Function_Fade_Distance' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Can_Tick) == 0x0006D8, "Member 'ARoad_BP_C::Can_Tick' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Cast_Shadow__Road_Segment_only_) == 0x0006D9, "Member 'ARoad_BP_C::Cast_Shadow__Road_Segment_only_' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Sidewalk_Cast_Shadow_) == 0x0006DA, "Member 'ARoad_BP_C::Sidewalk_Cast_Shadow_' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Side_Guards_Cast_Shadow) == 0x0006DB, "Member 'ARoad_BP_C::Side_Guards_Cast_Shadow' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Road_Lamp_Cast_Shadow) == 0x0006DC, "Member 'ARoad_BP_C::Road_Lamp_Cast_Shadow' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Left_Side_Guard_Fence_Cast_Shadow) == 0x0006DD, "Member 'ARoad_BP_C::Left_Side_Guard_Fence_Cast_Shadow' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Right_Side_Guard_Fence_Cast_Shadow) == 0x0006DE, "Member 'ARoad_BP_C::Right_Side_Guard_Fence_Cast_Shadow' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Bridge_Support_Cast_Shadow) == 0x0006DF, "Member 'ARoad_BP_C::Bridge_Support_Cast_Shadow' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Road_Culling_Distance) == 0x0006E0, "Member 'ARoad_BP_C::Road_Culling_Distance' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Sidewalk_Culling_Distance) == 0x0006E8, "Member 'ARoad_BP_C::Sidewalk_Culling_Distance' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, NumOfRoadSegments) == 0x0006F0, "Member 'ARoad_BP_C::NumOfRoadSegments' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Blueprint_To_Spawn) == 0x0006F8, "Member 'ARoad_BP_C::Blueprint_To_Spawn' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Blueprint_Spacing) == 0x000700, "Member 'ARoad_BP_C::Blueprint_Spacing' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Location_Offset) == 0x000708, "Member 'ARoad_BP_C::Location_Offset' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Blueprint_Scale) == 0x000720, "Member 'ARoad_BP_C::Blueprint_Scale' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Rotation_Offset) == 0x000738, "Member 'ARoad_BP_C::Rotation_Offset' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Indirect_Lighting_Intensity) == 0x000750, "Member 'ARoad_BP_C::Indirect_Lighting_Intensity' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Side_Guard_Culling_Distance) == 0x000758, "Member 'ARoad_BP_C::Side_Guard_Culling_Distance' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Road_Lamp_Culling_Distance) == 0x000760, "Member 'ARoad_BP_C::Road_Lamp_Culling_Distance' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Bridge_Support_Culling_Distance) == 0x000768, "Member 'ARoad_BP_C::Bridge_Support_Culling_Distance' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Side_Guard_Fence_Culling_Distance) == 0x000770, "Member 'ARoad_BP_C::Side_Guard_Fence_Culling_Distance' has a wrong offset!");
static_assert(offsetof(ARoad_BP_C, Spawned_Actor) == 0x000778, "Member 'ARoad_BP_C::Spawned_Actor' has a wrong offset!");

}

