#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DL_Loader

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DL_Loader.BP_DL_Loader_C
// 0x0050 (0x02E8 - 0x0298)
class ABP_DL_Loader_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Loaded;                                            // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DontUnload;                                        // 0x02B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_29D5[0x6];                                     // 0x02B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UWorld>                  SubLevel;                                          // 0x02B8(0x0028)(Edit, BlueprintVisible, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	class ULevelStreaming*                        As_Level_Streaming;                                // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_DL_Loader_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_DL_Loader_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ContainsControlledPawns(bool* Contains, class APawn** AsPawn);
	void ExecuteUbergraph_BP_DL_Loader(int32 EntryPoint);
	void LoadUnloadAll(bool Param_Loaded);
	void OnLoaded_FF8DAC9E4553BFD445F1FA8A6FED575B(class UObject* Param_Loaded);
	void ReceiveBeginPlay();
	void ShowElements(bool Show);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DL_Loader_C">();
	}
	static class ABP_DL_Loader_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DL_Loader_C>();
	}
};
static_assert(alignof(ABP_DL_Loader_C) == 0x000008, "Wrong alignment on ABP_DL_Loader_C");
static_assert(sizeof(ABP_DL_Loader_C) == 0x0002E8, "Wrong size on ABP_DL_Loader_C");
static_assert(offsetof(ABP_DL_Loader_C, UberGraphFrame) == 0x000298, "Member 'ABP_DL_Loader_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DL_Loader_C, Box) == 0x0002A0, "Member 'ABP_DL_Loader_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_DL_Loader_C, DefaultSceneRoot) == 0x0002A8, "Member 'ABP_DL_Loader_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_DL_Loader_C, Loaded) == 0x0002B0, "Member 'ABP_DL_Loader_C::Loaded' has a wrong offset!");
static_assert(offsetof(ABP_DL_Loader_C, DontUnload) == 0x0002B1, "Member 'ABP_DL_Loader_C::DontUnload' has a wrong offset!");
static_assert(offsetof(ABP_DL_Loader_C, SubLevel) == 0x0002B8, "Member 'ABP_DL_Loader_C::SubLevel' has a wrong offset!");
static_assert(offsetof(ABP_DL_Loader_C, As_Level_Streaming) == 0x0002E0, "Member 'ABP_DL_Loader_C::As_Level_Streaming' has a wrong offset!");

}

