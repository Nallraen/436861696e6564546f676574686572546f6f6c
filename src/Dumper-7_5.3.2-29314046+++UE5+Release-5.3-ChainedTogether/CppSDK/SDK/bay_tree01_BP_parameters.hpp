#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: bay_tree01_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function bay_tree01_BP.bay_tree01_BP_C.UserConstructionScript
// 0x0160 (0x0160 - 0x0000)
struct bay_tree01_BP_C_UserConstructionScript final
{
public:
	struct FRotator                               CallFunc_RandomRotatorFromStream_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakRotIntoAxes_X;                       // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakRotIntoAxes_Y;                       // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakRotIntoAxes_Z;                       // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult;    // 0x0078(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(bay_tree01_BP_C_UserConstructionScript) == 0x000008, "Wrong alignment on bay_tree01_BP_C_UserConstructionScript");
static_assert(sizeof(bay_tree01_BP_C_UserConstructionScript) == 0x000160, "Wrong size on bay_tree01_BP_C_UserConstructionScript");
static_assert(offsetof(bay_tree01_BP_C_UserConstructionScript, CallFunc_RandomRotatorFromStream_ReturnValue) == 0x000000, "Member 'bay_tree01_BP_C_UserConstructionScript::CallFunc_RandomRotatorFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(bay_tree01_BP_C_UserConstructionScript, CallFunc_BreakRotIntoAxes_X) == 0x000018, "Member 'bay_tree01_BP_C_UserConstructionScript::CallFunc_BreakRotIntoAxes_X' has a wrong offset!");
static_assert(offsetof(bay_tree01_BP_C_UserConstructionScript, CallFunc_BreakRotIntoAxes_Y) == 0x000030, "Member 'bay_tree01_BP_C_UserConstructionScript::CallFunc_BreakRotIntoAxes_Y' has a wrong offset!");
static_assert(offsetof(bay_tree01_BP_C_UserConstructionScript, CallFunc_BreakRotIntoAxes_Z) == 0x000048, "Member 'bay_tree01_BP_C_UserConstructionScript::CallFunc_BreakRotIntoAxes_Z' has a wrong offset!");
static_assert(offsetof(bay_tree01_BP_C_UserConstructionScript, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000060, "Member 'bay_tree01_BP_C_UserConstructionScript::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(bay_tree01_BP_C_UserConstructionScript, CallFunc_K2_AddRelativeRotation_SweepHitResult) == 0x000078, "Member 'bay_tree01_BP_C_UserConstructionScript::CallFunc_K2_AddRelativeRotation_SweepHitResult' has a wrong offset!");

}

