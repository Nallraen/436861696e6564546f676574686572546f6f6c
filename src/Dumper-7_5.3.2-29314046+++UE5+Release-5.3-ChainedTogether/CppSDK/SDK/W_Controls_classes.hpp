#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Controls

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "EnhancedInput_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Controls.W_Controls_C
// 0x0078 (0x0338 - 0x02C0)
class UW_Controls_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       NewAnimation;                                      // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_85;                                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             JumpKey;                                           // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MoveKeys;                                          // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SprintKey;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_0;                                  // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_1;                                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_2;                                  // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInputAction*                           Jump_Input;                                        // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Sprint_Input;                                      // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           MoveForward_Input;                                 // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           MoveRight_Input;                                   // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_W_Controls(int32 EntryPoint);
	void GetKeyName(const class FName Key, EPlayerMappableKeySlot Param_Slot, class FText* DisplayName);
	void PermuterZQSD(const class FString& String, class FString* Out);
	void RefreshContent();
	void ReturnKeyName(class APlayerController* PlayerController, const class UInputAction* Action, int32 Param_Index, class FText* KeyName);
	void UpdateBinding(class UWidgetSwitcher* WidgetSwitcher, class UTextBlock* TextBlock, const class FText& KeyName);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Controls_C">();
	}
	static class UW_Controls_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Controls_C>();
	}
};
static_assert(alignof(UW_Controls_C) == 0x000008, "Wrong alignment on UW_Controls_C");
static_assert(sizeof(UW_Controls_C) == 0x000338, "Wrong size on UW_Controls_C");
static_assert(offsetof(UW_Controls_C, UberGraphFrame) == 0x0002C0, "Member 'UW_Controls_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Controls_C, NewAnimation) == 0x0002C8, "Member 'UW_Controls_C::NewAnimation' has a wrong offset!");
static_assert(offsetof(UW_Controls_C, Image) == 0x0002D0, "Member 'UW_Controls_C::Image' has a wrong offset!");
static_assert(offsetof(UW_Controls_C, Image_1) == 0x0002D8, "Member 'UW_Controls_C::Image_1' has a wrong offset!");
static_assert(offsetof(UW_Controls_C, Image_85) == 0x0002E0, "Member 'UW_Controls_C::Image_85' has a wrong offset!");
static_assert(offsetof(UW_Controls_C, JumpKey) == 0x0002E8, "Member 'UW_Controls_C::JumpKey' has a wrong offset!");
static_assert(offsetof(UW_Controls_C, MoveKeys) == 0x0002F0, "Member 'UW_Controls_C::MoveKeys' has a wrong offset!");
static_assert(offsetof(UW_Controls_C, SprintKey) == 0x0002F8, "Member 'UW_Controls_C::SprintKey' has a wrong offset!");
static_assert(offsetof(UW_Controls_C, WidgetSwitcher_0) == 0x000300, "Member 'UW_Controls_C::WidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UW_Controls_C, WidgetSwitcher_1) == 0x000308, "Member 'UW_Controls_C::WidgetSwitcher_1' has a wrong offset!");
static_assert(offsetof(UW_Controls_C, WidgetSwitcher_2) == 0x000310, "Member 'UW_Controls_C::WidgetSwitcher_2' has a wrong offset!");
static_assert(offsetof(UW_Controls_C, Jump_Input) == 0x000318, "Member 'UW_Controls_C::Jump_Input' has a wrong offset!");
static_assert(offsetof(UW_Controls_C, Sprint_Input) == 0x000320, "Member 'UW_Controls_C::Sprint_Input' has a wrong offset!");
static_assert(offsetof(UW_Controls_C, MoveForward_Input) == 0x000328, "Member 'UW_Controls_C::MoveForward_Input' has a wrong offset!");
static_assert(offsetof(UW_Controls_C, MoveRight_Input) == 0x000330, "Member 'UW_Controls_C::MoveRight_Input' has a wrong offset!");

}

