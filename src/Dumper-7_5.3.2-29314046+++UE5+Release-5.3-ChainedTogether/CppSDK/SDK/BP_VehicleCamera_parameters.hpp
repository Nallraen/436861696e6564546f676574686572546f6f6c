#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VehicleCamera

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_VehicleCamera.BP_VehicleCamera_C.ExecuteUbergraph_BP_VehicleCamera
// 0x0230 (0x0230 - 0x0000)
struct BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DE0[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        K2Node_Event_Axis_3;                               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Sprint;                               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DE1[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Axis_2;                               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Axis_1;                               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstanceWithSave_C> K2Node_DynamicCast_AsBPI_Game_Instance_with_Save;  // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DE2[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameInstanceWithSave_C> K2Node_DynamicCast_AsBPI_Game_Instance_with_Save_1; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCameraSettings_InvertX;                // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCameraSettings_InvertY;                // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DE3[0x5];                                     // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCameraSettings_X_Sensitivity;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCameraSettings_Y_Sensitivity;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCameraSettings_InvertX_1;              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCameraSettings_InvertY_1;              // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DE4[0x6];                                     // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCameraSettings_X_Sensitivity_1;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCameraSettings_Y_Sensitivity_1;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Axis;                                 // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DE5[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_NewController;                        // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DE6[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0138(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DE7[0x3];                                     // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_TargetArmLength_ImplicitCast;   // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddControllerYawInput_Val_ImplicitCast;   // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddControllerPitchInput_Val_ImplicitCast; // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera) == 0x000008, "Wrong alignment on BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera");
static_assert(sizeof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera) == 0x000230, "Wrong size on BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, EntryPoint) == 0x000000, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000020, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, K2Node_Event_Axis_3) == 0x000038, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::K2Node_Event_Axis_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, K2Node_Event_Sprint) == 0x000040, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::K2Node_Event_Sprint' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, K2Node_Event_Axis_2) == 0x000048, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::K2Node_Event_Axis_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, K2Node_Event_Axis_1) == 0x000050, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::K2Node_Event_Axis_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_GetGameInstance_ReturnValue) == 0x000060, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_GetGameInstance_ReturnValue_1) == 0x000068, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, K2Node_DynamicCast_AsBPI_Game_Instance_with_Save) == 0x000070, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::K2Node_DynamicCast_AsBPI_Game_Instance_with_Save' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, K2Node_DynamicCast_AsBPI_Game_Instance_with_Save_1) == 0x000088, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::K2Node_DynamicCast_AsBPI_Game_Instance_with_Save_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_GetCameraSettings_InvertX) == 0x000099, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_GetCameraSettings_InvertX' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_GetCameraSettings_InvertY) == 0x00009A, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_GetCameraSettings_InvertY' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_GetCameraSettings_X_Sensitivity) == 0x0000A0, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_GetCameraSettings_X_Sensitivity' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_GetCameraSettings_Y_Sensitivity) == 0x0000A8, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_GetCameraSettings_Y_Sensitivity' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_GetCameraSettings_InvertX_1) == 0x0000B0, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_GetCameraSettings_InvertX_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_GetCameraSettings_InvertY_1) == 0x0000B1, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_GetCameraSettings_InvertY_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_GetCameraSettings_X_Sensitivity_1) == 0x0000B8, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_GetCameraSettings_X_Sensitivity_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_GetCameraSettings_Y_Sensitivity_1) == 0x0000C0, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_GetCameraSettings_Y_Sensitivity_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000C8, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_SelectFloat_ReturnValue) == 0x0000D0, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000D8, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000E0, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_SelectFloat_ReturnValue_1) == 0x0000E8, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000F0, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, K2Node_Event_Axis) == 0x0000F8, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::K2Node_Event_Axis' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, K2Node_Event_DeltaSeconds) == 0x000100, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, K2Node_Event_NewController) == 0x000108, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000110, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_IsLocallyControlled_ReturnValue) == 0x000118, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_Add_VectorVector_ReturnValue) == 0x000120, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000138, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000220, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, K2Node_VariableSet_TargetArmLength_ImplicitCast) == 0x000224, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::K2Node_VariableSet_TargetArmLength_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_AddControllerYawInput_Val_ImplicitCast) == 0x000228, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_AddControllerYawInput_Val_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera, CallFunc_AddControllerPitchInput_Val_ImplicitCast) == 0x00022C, "Member 'BP_VehicleCamera_C_ExecuteUbergraph_BP_VehicleCamera::CallFunc_AddControllerPitchInput_Val_ImplicitCast' has a wrong offset!");

// Function BP_VehicleCamera.BP_VehicleCamera_C.LookRight
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleCamera_C_LookRight final
{
public:
	double                                        Axis;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleCamera_C_LookRight) == 0x000008, "Wrong alignment on BP_VehicleCamera_C_LookRight");
static_assert(sizeof(BP_VehicleCamera_C_LookRight) == 0x000008, "Wrong size on BP_VehicleCamera_C_LookRight");
static_assert(offsetof(BP_VehicleCamera_C_LookRight, Axis) == 0x000000, "Member 'BP_VehicleCamera_C_LookRight::Axis' has a wrong offset!");

// Function BP_VehicleCamera.BP_VehicleCamera_C.LookUp
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleCamera_C_LookUp final
{
public:
	double                                        Axis;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleCamera_C_LookUp) == 0x000008, "Wrong alignment on BP_VehicleCamera_C_LookUp");
static_assert(sizeof(BP_VehicleCamera_C_LookUp) == 0x000008, "Wrong size on BP_VehicleCamera_C_LookUp");
static_assert(offsetof(BP_VehicleCamera_C_LookUp, Axis) == 0x000000, "Member 'BP_VehicleCamera_C_LookUp::Axis' has a wrong offset!");

// Function BP_VehicleCamera.BP_VehicleCamera_C.MoveForward
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleCamera_C_MoveForward final
{
public:
	double                                        Axis;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleCamera_C_MoveForward) == 0x000008, "Wrong alignment on BP_VehicleCamera_C_MoveForward");
static_assert(sizeof(BP_VehicleCamera_C_MoveForward) == 0x000008, "Wrong size on BP_VehicleCamera_C_MoveForward");
static_assert(offsetof(BP_VehicleCamera_C_MoveForward, Axis) == 0x000000, "Member 'BP_VehicleCamera_C_MoveForward::Axis' has a wrong offset!");

// Function BP_VehicleCamera.BP_VehicleCamera_C.MoveRight
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleCamera_C_MoveRight final
{
public:
	double                                        Axis;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleCamera_C_MoveRight) == 0x000008, "Wrong alignment on BP_VehicleCamera_C_MoveRight");
static_assert(sizeof(BP_VehicleCamera_C_MoveRight) == 0x000008, "Wrong size on BP_VehicleCamera_C_MoveRight");
static_assert(offsetof(BP_VehicleCamera_C_MoveRight, Axis) == 0x000000, "Member 'BP_VehicleCamera_C_MoveRight::Axis' has a wrong offset!");

// Function BP_VehicleCamera.BP_VehicleCamera_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleCamera_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleCamera_C_ReceivePossessed) == 0x000008, "Wrong alignment on BP_VehicleCamera_C_ReceivePossessed");
static_assert(sizeof(BP_VehicleCamera_C_ReceivePossessed) == 0x000008, "Wrong size on BP_VehicleCamera_C_ReceivePossessed");
static_assert(offsetof(BP_VehicleCamera_C_ReceivePossessed, NewController) == 0x000000, "Member 'BP_VehicleCamera_C_ReceivePossessed::NewController' has a wrong offset!");

// Function BP_VehicleCamera.BP_VehicleCamera_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_VehicleCamera_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleCamera_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_VehicleCamera_C_ReceiveTick");
static_assert(sizeof(BP_VehicleCamera_C_ReceiveTick) == 0x000004, "Wrong size on BP_VehicleCamera_C_ReceiveTick");
static_assert(offsetof(BP_VehicleCamera_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_VehicleCamera_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_VehicleCamera.BP_VehicleCamera_C.Sprint
// 0x0001 (0x0001 - 0x0000)
struct BP_VehicleCamera_C_Sprint final
{
public:
	bool                                          Param_Sprint;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleCamera_C_Sprint) == 0x000001, "Wrong alignment on BP_VehicleCamera_C_Sprint");
static_assert(sizeof(BP_VehicleCamera_C_Sprint) == 0x000001, "Wrong size on BP_VehicleCamera_C_Sprint");
static_assert(offsetof(BP_VehicleCamera_C_Sprint, Param_Sprint) == 0x000000, "Member 'BP_VehicleCamera_C_Sprint::Param_Sprint' has a wrong offset!");

}

