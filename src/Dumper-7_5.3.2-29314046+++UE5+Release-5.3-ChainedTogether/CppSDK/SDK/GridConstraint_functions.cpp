#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GridConstraint

#include "Basic.hpp"

#include "GridConstraint_classes.hpp"
#include "GridConstraint_parameters.hpp"


namespace SDK
{

// Function GridConstraint.GridConstraint_C.ExecuteUbergraph_GridConstraint
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGridConstraint_C::ExecuteUbergraph_GridConstraint(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GridConstraint_C", "ExecuteUbergraph_GridConstraint");

	Params::GridConstraint_C_ExecuteUbergraph_GridConstraint Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GridConstraint.GridConstraint_C.OnJump
// (Public, BlueprintCallable, BlueprintEvent)

void AGridConstraint_C::OnJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GridConstraint_C", "OnJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GridConstraint.GridConstraint_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AGridConstraint_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GridConstraint_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GridConstraint.GridConstraint_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGridConstraint_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GridConstraint_C", "ReceiveTick");

	Params::GridConstraint_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GridConstraint.GridConstraint_C.SetContrainedComps
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Comp1                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Comp2                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AGridConstraint_C::SetContrainedComps(class UPrimitiveComponent* Comp1, class UPrimitiveComponent* Comp2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GridConstraint_C", "SetContrainedComps");

	Params::GridConstraint_C_SetContrainedComps Parms{};

	Parms.Comp1 = Comp1;
	Parms.Comp2 = Comp2;

	UObject::ProcessEvent(Func, &Parms);
}

}

