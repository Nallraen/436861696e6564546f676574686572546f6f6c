#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CircularVentilo

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_CircularVentilo.BP_CircularVentilo_C.ExecuteUbergraph_BP_CircularVentilo
// 0x0368 (0x0368 - 0x0000)
struct BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D05[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateSpeedByPlayersNumber_ReturnSpeed;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D06[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D07[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UStaticMeshComponent*>           K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x00C8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult_1;     // 0x01B0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D08[0x3];                                     // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UStaticMeshComponent*>           K2Node_MakeArray_Array_1;                          // 0x02B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D09[0x4];                                     // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D0A[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0310(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D0B[0x4];                                     // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D0C[0x7];                                     // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character;                // 0x0338(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D0D[0x7];                                     // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo) == 0x000008, "Wrong alignment on BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo");
static_assert(sizeof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo) == 0x000368, "Wrong size on BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, EntryPoint) == 0x000000, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_UpdateSpeedByPlayersNumber_ReturnSpeed) == 0x000008, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_UpdateSpeedByPlayersNumber_ReturnSpeed' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000010, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_HasAuthority_ReturnValue) == 0x000028, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, Temp_int_Loop_Counter_Variable_2) == 0x000044, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_Add_IntInt_ReturnValue_2) == 0x000048, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, Temp_int_Array_Index_Variable_2) == 0x00004C, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000060, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, K2Node_Event_DeltaSeconds) == 0x000068, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_MakeRotator_ReturnValue) == 0x000080, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_MakeRotator_ReturnValue_1) == 0x000098, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, K2Node_MakeArray_Array) == 0x0000B0, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x0000C8, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_K2_AddLocalRotation_SweepHitResult_1) == 0x0001B0, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_K2_AddLocalRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_Array_Length_ReturnValue) == 0x000298, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_Less_IntInt_ReturnValue) == 0x00029C, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0002A0, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, K2Node_MakeArray_Array_1) == 0x0002B8, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_Array_Length_ReturnValue_1) == 0x0002C8, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_Array_Get_Item_1) == 0x0002D0, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002D8, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_GetUpVector_ReturnValue) == 0x0002E0, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0002F8, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000310, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_Array_Length_ReturnValue_2) == 0x000320, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_Array_Get_Item_2) == 0x000328, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_Less_IntInt_ReturnValue_2) == 0x000330, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, K2Node_DynamicCast_AsBPI_Character) == 0x000338, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::K2Node_DynamicCast_AsBPI_Character' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, K2Node_DynamicCast_bSuccess) == 0x000348, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000350, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000358, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000360, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x000364, "Member 'BP_CircularVentilo_C_ExecuteUbergraph_BP_CircularVentilo::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");

// Function BP_CircularVentilo.BP_CircularVentilo_C.OnRep_RepRot
// 0x00F0 (0x00F0 - 0x0000)
struct BP_CircularVentilo_C_OnRep_RepRot final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D0E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0008(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_CircularVentilo_C_OnRep_RepRot) == 0x000008, "Wrong alignment on BP_CircularVentilo_C_OnRep_RepRot");
static_assert(sizeof(BP_CircularVentilo_C_OnRep_RepRot) == 0x0000F0, "Wrong size on BP_CircularVentilo_C_OnRep_RepRot");
static_assert(offsetof(BP_CircularVentilo_C_OnRep_RepRot, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_CircularVentilo_C_OnRep_RepRot::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CircularVentilo_C_OnRep_RepRot, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000008, "Member 'BP_CircularVentilo_C_OnRep_RepRot::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

// Function BP_CircularVentilo.BP_CircularVentilo_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_CircularVentilo_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CircularVentilo_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_CircularVentilo_C_ReceiveTick");
static_assert(sizeof(BP_CircularVentilo_C_ReceiveTick) == 0x000004, "Wrong size on BP_CircularVentilo_C_ReceiveTick");
static_assert(offsetof(BP_CircularVentilo_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_CircularVentilo_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

