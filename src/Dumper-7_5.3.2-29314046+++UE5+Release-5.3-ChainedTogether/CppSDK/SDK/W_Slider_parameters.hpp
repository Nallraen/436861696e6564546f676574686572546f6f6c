#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Slider

#include "Basic.hpp"

#include "S_SliderParams_structs.hpp"


namespace SDK::Params
{

// Function W_Slider.W_Slider_C.BndEvt__W_Slider_Slider_119_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct W_Slider_C_BndEvt__W_Slider_Slider_119_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Slider_C_BndEvt__W_Slider_Slider_119_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on W_Slider_C_BndEvt__W_Slider_Slider_119_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(W_Slider_C_BndEvt__W_Slider_Slider_119_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on W_Slider_C_BndEvt__W_Slider_Slider_119_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(W_Slider_C_BndEvt__W_Slider_Slider_119_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'W_Slider_C_BndEvt__W_Slider_Slider_119_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function W_Slider.W_Slider_C.ExecuteUbergraph_W_Slider
// 0x0068 (0x0068 - 0x0000)
struct W_Slider_C_ExecuteUbergraph_W_Slider final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29A7[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29A8[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GridSnap_Float_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0018(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0030(0x0018)()
	float                                         CallFunc_SetStepSize_InValue_ImplicitCast;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMinValue_InValue_ImplicitCast;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMaxValue_InValue_ImplicitCast;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29A9[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GridSnap_Float_Location_ImplicitCast;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Slider_C_ExecuteUbergraph_W_Slider) == 0x000008, "Wrong alignment on W_Slider_C_ExecuteUbergraph_W_Slider");
static_assert(sizeof(W_Slider_C_ExecuteUbergraph_W_Slider) == 0x000068, "Wrong size on W_Slider_C_ExecuteUbergraph_W_Slider");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, EntryPoint) == 0x000000, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, K2Node_ComponentBoundEvent_Value) == 0x000008, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_GridSnap_Float_ReturnValue) == 0x000010, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_GridSnap_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000018, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000030, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_SetStepSize_InValue_ImplicitCast) == 0x000048, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_SetStepSize_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_SetMinValue_InValue_ImplicitCast) == 0x00004C, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_SetMinValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_SetMaxValue_InValue_ImplicitCast) == 0x000050, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_SetMaxValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_GridSnap_Float_Location_ImplicitCast) == 0x000058, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_GridSnap_Float_Location_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Slider_C_ExecuteUbergraph_W_Slider, CallFunc_SetValue_InValue_ImplicitCast) == 0x000060, "Member 'W_Slider_C_ExecuteUbergraph_W_Slider::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");

// Function W_Slider.W_Slider_C.OnValueChanged__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct W_Slider_C_OnValueChanged__DelegateSignature final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Setting;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Slider_C_OnValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on W_Slider_C_OnValueChanged__DelegateSignature");
static_assert(sizeof(W_Slider_C_OnValueChanged__DelegateSignature) == 0x000018, "Wrong size on W_Slider_C_OnValueChanged__DelegateSignature");
static_assert(offsetof(W_Slider_C_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'W_Slider_C_OnValueChanged__DelegateSignature::Value' has a wrong offset!");
static_assert(offsetof(W_Slider_C_OnValueChanged__DelegateSignature, Setting) == 0x000008, "Member 'W_Slider_C_OnValueChanged__DelegateSignature::Setting' has a wrong offset!");

// Function W_Slider.W_Slider_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Slider_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Slider_C_PreConstruct) == 0x000001, "Wrong alignment on W_Slider_C_PreConstruct");
static_assert(sizeof(W_Slider_C_PreConstruct) == 0x000001, "Wrong size on W_Slider_C_PreConstruct");
static_assert(offsetof(W_Slider_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Slider_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_Slider.W_Slider_C.Refresh Slider Params
// 0x0080 (0x0080 - 0x0000)
struct W_Slider_C_Refresh_Slider_Params final
{
public:
	struct FS_SliderParams                        Params_0;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Setting;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UV_SaveGame_C*                          CallFunc_GetSaveGame_SaveGame;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameSave_C>       K2Node_DynamicCast_AsBPI_Game_Save;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSettingFromIdentifier_ReturnValue;     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29AA[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSettingFromIdentifier_Value;           // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_StringToDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMaxValue_InValue_ImplicitCast;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29AB[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_MinValue_ImplicitCast;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_MaxValue_ImplicitCast;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_StepSize_ImplicitCast;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetStepSize_InValue_ImplicitCast;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Slider_C_Refresh_Slider_Params) == 0x000008, "Wrong alignment on W_Slider_C_Refresh_Slider_Params");
static_assert(sizeof(W_Slider_C_Refresh_Slider_Params) == 0x000080, "Wrong size on W_Slider_C_Refresh_Slider_Params");
static_assert(offsetof(W_Slider_C_Refresh_Slider_Params, Params_0) == 0x000000, "Member 'W_Slider_C_Refresh_Slider_Params::Params_0' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Refresh_Slider_Params, Setting) == 0x000010, "Member 'W_Slider_C_Refresh_Slider_Params::Setting' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Refresh_Slider_Params, CallFunc_GetSaveGame_SaveGame) == 0x000020, "Member 'W_Slider_C_Refresh_Slider_Params::CallFunc_GetSaveGame_SaveGame' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Refresh_Slider_Params, K2Node_DynamicCast_AsBPI_Game_Save) == 0x000028, "Member 'W_Slider_C_Refresh_Slider_Params::K2Node_DynamicCast_AsBPI_Game_Save' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Refresh_Slider_Params, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'W_Slider_C_Refresh_Slider_Params::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Refresh_Slider_Params, CallFunc_GetSettingFromIdentifier_ReturnValue) == 0x000039, "Member 'W_Slider_C_Refresh_Slider_Params::CallFunc_GetSettingFromIdentifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Refresh_Slider_Params, CallFunc_GetSettingFromIdentifier_Value) == 0x000040, "Member 'W_Slider_C_Refresh_Slider_Params::CallFunc_GetSettingFromIdentifier_Value' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Refresh_Slider_Params, CallFunc_Conv_StringToDouble_ReturnValue) == 0x000050, "Member 'W_Slider_C_Refresh_Slider_Params::CallFunc_Conv_StringToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Refresh_Slider_Params, CallFunc_SetMaxValue_InValue_ImplicitCast) == 0x000058, "Member 'W_Slider_C_Refresh_Slider_Params::CallFunc_SetMaxValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Refresh_Slider_Params, K2Node_VariableSet_MinValue_ImplicitCast) == 0x000060, "Member 'W_Slider_C_Refresh_Slider_Params::K2Node_VariableSet_MinValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Refresh_Slider_Params, K2Node_VariableSet_MaxValue_ImplicitCast) == 0x000068, "Member 'W_Slider_C_Refresh_Slider_Params::K2Node_VariableSet_MaxValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Refresh_Slider_Params, K2Node_VariableSet_StepSize_ImplicitCast) == 0x000070, "Member 'W_Slider_C_Refresh_Slider_Params::K2Node_VariableSet_StepSize_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Slider_C_Refresh_Slider_Params, CallFunc_SetStepSize_InValue_ImplicitCast) == 0x000078, "Member 'W_Slider_C_Refresh_Slider_Params::CallFunc_SetStepSize_InValue_ImplicitCast' has a wrong offset!");

// Function W_Slider.W_Slider_C.SetSliderValue
// 0x0028 (0x0028 - 0x0000)
struct W_Slider_C_SetSliderValue final
{
public:
	double                                        InValue;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0008(0x0018)()
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Slider_C_SetSliderValue) == 0x000008, "Wrong alignment on W_Slider_C_SetSliderValue");
static_assert(sizeof(W_Slider_C_SetSliderValue) == 0x000028, "Wrong size on W_Slider_C_SetSliderValue");
static_assert(offsetof(W_Slider_C_SetSliderValue, InValue) == 0x000000, "Member 'W_Slider_C_SetSliderValue::InValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_SetSliderValue, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000008, "Member 'W_Slider_C_SetSliderValue::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Slider_C_SetSliderValue, CallFunc_SetValue_InValue_ImplicitCast) == 0x000020, "Member 'W_Slider_C_SetSliderValue::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");

}

