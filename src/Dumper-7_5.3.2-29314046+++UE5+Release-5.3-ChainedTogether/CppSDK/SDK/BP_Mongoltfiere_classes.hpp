#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Mongoltfiere

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Mongoltfiere.BP_Mongoltfiere_C
// 0x0058 (0x02F0 - 0x0298)
class ABP_Mongoltfiere_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Target;                                            // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UC_TickOptimizer_C*                     C_TickOptimizer;                                   // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Balloon;                                           // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_3F365CC0407030048C20828ACAD3D61A; // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_3F365CC0407030048C20828ACAD3D61A; // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF5[0x3];                                     // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Inflation;                                         // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Duration;                                          // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void BndEvt__BP_Mongoltfiere_Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ExecuteUbergraph_BP_Mongoltfiere(int32 EntryPoint);
	void Inflate();
	void Move();
	void MoveAll();
	void ReceiveTick(float DeltaSeconds);
	void ResetMontgolfiere();
	void ResetMontgolfiereAll();
	void ResetMove();
	void StopTL();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Mongoltfiere_C">();
	}
	static class ABP_Mongoltfiere_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Mongoltfiere_C>();
	}
};
static_assert(alignof(ABP_Mongoltfiere_C) == 0x000008, "Wrong alignment on ABP_Mongoltfiere_C");
static_assert(sizeof(ABP_Mongoltfiere_C) == 0x0002F0, "Wrong size on ABP_Mongoltfiere_C");
static_assert(offsetof(ABP_Mongoltfiere_C, UberGraphFrame) == 0x000298, "Member 'ABP_Mongoltfiere_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Mongoltfiere_C, Box) == 0x0002A0, "Member 'ABP_Mongoltfiere_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_Mongoltfiere_C, Target) == 0x0002A8, "Member 'ABP_Mongoltfiere_C::Target' has a wrong offset!");
static_assert(offsetof(ABP_Mongoltfiere_C, C_TickOptimizer) == 0x0002B0, "Member 'ABP_Mongoltfiere_C::C_TickOptimizer' has a wrong offset!");
static_assert(offsetof(ABP_Mongoltfiere_C, Balloon) == 0x0002B8, "Member 'ABP_Mongoltfiere_C::Balloon' has a wrong offset!");
static_assert(offsetof(ABP_Mongoltfiere_C, StaticMesh) == 0x0002C0, "Member 'ABP_Mongoltfiere_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Mongoltfiere_C, DefaultSceneRoot) == 0x0002C8, "Member 'ABP_Mongoltfiere_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Mongoltfiere_C, Timeline_0_NewTrack_0_3F365CC0407030048C20828ACAD3D61A) == 0x0002D0, "Member 'ABP_Mongoltfiere_C::Timeline_0_NewTrack_0_3F365CC0407030048C20828ACAD3D61A' has a wrong offset!");
static_assert(offsetof(ABP_Mongoltfiere_C, Timeline_0__Direction_3F365CC0407030048C20828ACAD3D61A) == 0x0002D4, "Member 'ABP_Mongoltfiere_C::Timeline_0__Direction_3F365CC0407030048C20828ACAD3D61A' has a wrong offset!");
static_assert(offsetof(ABP_Mongoltfiere_C, Timeline_0) == 0x0002D8, "Member 'ABP_Mongoltfiere_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_Mongoltfiere_C, Inflation) == 0x0002E0, "Member 'ABP_Mongoltfiere_C::Inflation' has a wrong offset!");
static_assert(offsetof(ABP_Mongoltfiere_C, Duration) == 0x0002E8, "Member 'ABP_Mongoltfiere_C::Duration' has a wrong offset!");

}

