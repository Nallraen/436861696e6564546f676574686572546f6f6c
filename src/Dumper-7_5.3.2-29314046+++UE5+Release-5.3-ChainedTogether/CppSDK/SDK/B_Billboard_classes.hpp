#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Billboard

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Billboard.B_Billboard_C
// 0x0020 (0x02B8 - 0x0298)
class AB_Billboard_C final : public AActor
{
public:
	class UStaticMeshComponent*                   Billboard;                                         // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Material;                                          // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Ladder1;                                           // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ladder2;                                           // 0x02B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Billboard_C">();
	}
	static class AB_Billboard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Billboard_C>();
	}
};
static_assert(alignof(AB_Billboard_C) == 0x000008, "Wrong alignment on AB_Billboard_C");
static_assert(sizeof(AB_Billboard_C) == 0x0002B8, "Wrong size on AB_Billboard_C");
static_assert(offsetof(AB_Billboard_C, Billboard) == 0x000298, "Member 'AB_Billboard_C::Billboard' has a wrong offset!");
static_assert(offsetof(AB_Billboard_C, DefaultSceneRoot) == 0x0002A0, "Member 'AB_Billboard_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AB_Billboard_C, Material) == 0x0002A8, "Member 'AB_Billboard_C::Material' has a wrong offset!");
static_assert(offsetof(AB_Billboard_C, Ladder1) == 0x0002B0, "Member 'AB_Billboard_C::Ladder1' has a wrong offset!");
static_assert(offsetof(AB_Billboard_C, Ladder2) == 0x0002B1, "Member 'AB_Billboard_C::Ladder2' has a wrong offset!");

}

