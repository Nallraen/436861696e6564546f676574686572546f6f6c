#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_Statut

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Catapult_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_Statut.BPC_Statut_C
// 0x0048 (0x03F0 - 0x03A8)
class ABPC_Statut_C final : public ABP_Catapult_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BPC_Statut_C;                       // 0x03A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          BoxRight8;                                         // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        CorrectAngleArrow;                                 // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cylinder1_0;                                       // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Print;                                             // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3C6C[0x7];                                     // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_StatuesPlatform_C*                  Plateforme;                                        // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Good;                                              // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool CheckAllStatus();
	void ExecuteUbergraph_BPC_Statut(int32 EntryPoint);
	void GetBoxArray(TArray<class UBoxComponent*>* Array);
	void GetLeftBoxes(TArray<class UBoxComponent*>* Array);
	void GetRightBoxes(TArray<class UBoxComponent*>* Array);
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_Statut_C">();
	}
	static class ABPC_Statut_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPC_Statut_C>();
	}
};
static_assert(alignof(ABPC_Statut_C) == 0x000008, "Wrong alignment on ABPC_Statut_C");
static_assert(sizeof(ABPC_Statut_C) == 0x0003F0, "Wrong size on ABPC_Statut_C");
static_assert(offsetof(ABPC_Statut_C, UberGraphFrame_BPC_Statut_C) == 0x0003A8, "Member 'ABPC_Statut_C::UberGraphFrame_BPC_Statut_C' has a wrong offset!");
static_assert(offsetof(ABPC_Statut_C, BoxRight8) == 0x0003B0, "Member 'ABPC_Statut_C::BoxRight8' has a wrong offset!");
static_assert(offsetof(ABPC_Statut_C, ParticleSystem) == 0x0003B8, "Member 'ABPC_Statut_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ABPC_Statut_C, Arrow) == 0x0003C0, "Member 'ABPC_Statut_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABPC_Statut_C, CorrectAngleArrow) == 0x0003C8, "Member 'ABPC_Statut_C::CorrectAngleArrow' has a wrong offset!");
static_assert(offsetof(ABPC_Statut_C, Cylinder1_0) == 0x0003D0, "Member 'ABPC_Statut_C::Cylinder1_0' has a wrong offset!");
static_assert(offsetof(ABPC_Statut_C, Print) == 0x0003D8, "Member 'ABPC_Statut_C::Print' has a wrong offset!");
static_assert(offsetof(ABPC_Statut_C, Plateforme) == 0x0003E0, "Member 'ABPC_Statut_C::Plateforme' has a wrong offset!");
static_assert(offsetof(ABPC_Statut_C, Good) == 0x0003E8, "Member 'ABPC_Statut_C::Good' has a wrong offset!");

}

