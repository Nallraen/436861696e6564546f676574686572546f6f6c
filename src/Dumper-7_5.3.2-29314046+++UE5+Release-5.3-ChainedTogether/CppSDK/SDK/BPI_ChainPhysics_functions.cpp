#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_ChainPhysics

#include "Basic.hpp"

#include "BPI_ChainPhysics_classes.hpp"
#include "BPI_ChainPhysics_parameters.hpp"


namespace SDK
{

// Function BPI_ChainPhysics.BPI_ChainPhysics_C.Bounce
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ChainPhysics_C::Bounce(const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ChainPhysics_C", "Bounce");

	Params::BPI_ChainPhysics_C_Bounce Parms{};

	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_ChainPhysics.BPI_ChainPhysics_C.DissolveChain
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PlaySound                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ChainPhysics_C::DissolveChain(double PlayRate, bool PlaySound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ChainPhysics_C", "DissolveChain");

	Params::BPI_ChainPhysics_C_DissolveChain Parms{};

	Parms.PlayRate = PlayRate;
	Parms.PlaySound = PlaySound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_ChainPhysics.BPI_ChainPhysics_C.Get Cosmetics Maillons
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UStaticMeshComponent*>     Maillons                                               (Parm, OutParm, ContainsInstancedReference)

void IBPI_ChainPhysics_C::Get_Cosmetics_Maillons(TArray<class UStaticMeshComponent*>* Maillons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ChainPhysics_C", "Get Cosmetics Maillons");

	Params::BPI_ChainPhysics_C_Get_Cosmetics_Maillons Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Maillons != nullptr)
		*Maillons = std::move(Parms.Maillons);
}


// Function BPI_ChainPhysics.BPI_ChainPhysics_C.GetAttachedChars
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   AttachedChars                                          (Parm, OutParm)

void IBPI_ChainPhysics_C::GetAttachedChars(TArray<class AActor*>* AttachedChars)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ChainPhysics_C", "GetAttachedChars");

	Params::BPI_ChainPhysics_C_GetAttachedChars Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttachedChars != nullptr)
		*AttachedChars = std::move(Parms.AttachedChars);
}


// Function BPI_ChainPhysics.BPI_ChainPhysics_C.GetCurrentChainDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  CurrentChainDistance                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ChainPhysics_C::GetCurrentChainDistance(double* CurrentChainDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ChainPhysics_C", "GetCurrentChainDistance");

	Params::BPI_ChainPhysics_C_GetCurrentChainDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentChainDistance != nullptr)
		*CurrentChainDistance = Parms.CurrentChainDistance;
}


// Function BPI_ChainPhysics.BPI_ChainPhysics_C.GetSnapTips
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SnapTips                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ChainPhysics_C::GetSnapTips(bool* SnapTips)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ChainPhysics_C", "GetSnapTips");

	Params::BPI_ChainPhysics_C_GetSnapTips Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SnapTips != nullptr)
		*SnapTips = Parms.SnapTips;
}


// Function BPI_ChainPhysics.BPI_ChainPhysics_C.GetTension
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Float                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ChainPhysics_C::GetTension(double* Float)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ChainPhysics_C", "GetTension");

	Params::BPI_ChainPhysics_C_GetTension Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Float != nullptr)
		*Float = Parms.Float;
}


// Function BPI_ChainPhysics.BPI_ChainPhysics_C.ImpulseOnMaillons
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Impulse                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ChainPhysics_C::ImpulseOnMaillons(const struct FVector& Impulse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ChainPhysics_C", "ImpulseOnMaillons");

	Params::BPI_ChainPhysics_C_ImpulseOnMaillons Parms{};

	Parms.Impulse = std::move(Impulse);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_ChainPhysics.BPI_ChainPhysics_C.Jump
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_ChainPhysics_C::Jump(class AActor* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ChainPhysics_C", "Jump");

	Params::BPI_ChainPhysics_C_Jump Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_ChainPhysics.BPI_ChainPhysics_C.PullChain
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Puller                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_ChainPhysics_C::PullChain(class APawn* Puller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ChainPhysics_C", "PullChain");

	Params::BPI_ChainPhysics_C_PullChain Parms{};

	Parms.Puller = Puller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_ChainPhysics.BPI_ChainPhysics_C.Reattach Cube Socket to Chain
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              CubeSocket                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void IBPI_ChainPhysics_C::Reattach_Cube_Socket_to_Chain(class UPrimitiveComponent* CubeSocket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ChainPhysics_C", "Reattach Cube Socket to Chain");

	Params::BPI_ChainPhysics_C_Reattach_Cube_Socket_to_Chain Parms{};

	Parms.CubeSocket = CubeSocket;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_ChainPhysics.BPI_ChainPhysics_C.ReinitAttachment
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewDensity                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  NewChainMass                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Human                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ChainPhysics_C::ReinitAttachment(int32 NewDensity, double NewChainMass, bool Human)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ChainPhysics_C", "ReinitAttachment");

	Params::BPI_ChainPhysics_C_ReinitAttachment Parms{};

	Parms.NewDensity = NewDensity;
	Parms.NewChainMass = NewChainMass;
	Parms.Human = Human;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_ChainPhysics.BPI_ChainPhysics_C.Resync
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_ChainPhysics_C::Resync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ChainPhysics_C", "Resync");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_ChainPhysics.BPI_ChainPhysics_C.SetAttachedChar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Char                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_ChainPhysics_C::SetAttachedChar(const int32 Param_Index, class AActor* Char)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ChainPhysics_C", "SetAttachedChar");

	Params::BPI_ChainPhysics_C_SetAttachedChar Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Char = Char;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_ChainPhysics.BPI_ChainPhysics_C.SetMaillonWeight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  NewWeight                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ChainPhysics_C::SetMaillonWeight(double NewWeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ChainPhysics_C", "SetMaillonWeight");

	Params::BPI_ChainPhysics_C_SetMaillonWeight Parms{};

	Parms.NewWeight = NewWeight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_ChainPhysics.BPI_ChainPhysics_C.SetSnapTips
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SnapTips                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ChainPhysics_C::SetSnapTips(bool SnapTips)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ChainPhysics_C", "SetSnapTips");

	Params::BPI_ChainPhysics_C_SetSnapTips Parms{};

	Parms.SnapTips = SnapTips;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_ChainPhysics.BPI_ChainPhysics_C.SetTip0Location
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Loc                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ChainPhysics_C::SetTip0Location(const struct FVector& Loc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ChainPhysics_C", "SetTip0Location");

	Params::BPI_ChainPhysics_C_SetTip0Location Parms{};

	Parms.Loc = std::move(Loc);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_ChainPhysics.BPI_ChainPhysics_C.SetTip1Location
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Loc                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ChainPhysics_C::SetTip1Location(const struct FVector& Loc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ChainPhysics_C", "SetTip1Location");

	Params::BPI_ChainPhysics_C_SetTip1Location Parms{};

	Parms.Loc = std::move(Loc);

	UObject::ProcessEvent(Func, &Parms);
}

}

