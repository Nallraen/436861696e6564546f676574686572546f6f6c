#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Catapult

#include "Basic.hpp"

#include "BP_Catapult_classes.hpp"
#include "BP_Catapult_parameters.hpp"


namespace SDK
{

// Function BP_Catapult.BP_Catapult_C.ExecuteUbergraph_BP_Catapult
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Catapult_C::ExecuteUbergraph_BP_Catapult(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Catapult_C", "ExecuteUbergraph_BP_Catapult");

	Params::BP_Catapult_C_ExecuteUbergraph_BP_Catapult Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Catapult.BP_Catapult_C.GetBoxArray
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UBoxComponent*>            Array                                                  (Parm, OutParm, ContainsInstancedReference)

void ABP_Catapult_C::GetBoxArray(TArray<class UBoxComponent*>* Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Catapult_C", "GetBoxArray");

	Params::BP_Catapult_C_GetBoxArray Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Array != nullptr)
		*Array = std::move(Parms.Array);
}


// Function BP_Catapult.BP_Catapult_C.GetLeftBoxes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UBoxComponent*>            Array                                                  (Parm, OutParm, ContainsInstancedReference)

void ABP_Catapult_C::GetLeftBoxes(TArray<class UBoxComponent*>* Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Catapult_C", "GetLeftBoxes");

	Params::BP_Catapult_C_GetLeftBoxes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Array != nullptr)
		*Array = std::move(Parms.Array);
}


// Function BP_Catapult.BP_Catapult_C.GetRightBoxes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UBoxComponent*>            Array                                                  (Parm, OutParm, ContainsInstancedReference)

void ABP_Catapult_C::GetRightBoxes(TArray<class UBoxComponent*>* Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Catapult_C", "GetRightBoxes");

	Params::BP_Catapult_C_GetRightBoxes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Array != nullptr)
		*Array = std::move(Parms.Array);
}


// Function BP_Catapult.BP_Catapult_C.IsActivated
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Activated                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Catapult_C::IsActivated(bool* Activated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Catapult_C", "IsActivated");

	Params::BP_Catapult_C_IsActivated Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Activated != nullptr)
		*Activated = Parms.Activated;
}


// Function BP_Catapult.BP_Catapult_C.IsPlayerPushing
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Catapult_C::IsPlayerPushing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Catapult_C", "IsPlayerPushing");

	Params::BP_Catapult_C_IsPlayerPushing Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Catapult.BP_Catapult_C.IsSomeoneInside
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UBoxComponent*>            Boxes                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Catapult_C::IsSomeoneInside(TArray<class UBoxComponent*>& Boxes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Catapult_C", "IsSomeoneInside");

	Params::BP_Catapult_C_IsSomeoneInside Parms{};

	Parms.Boxes = std::move(Boxes);

	UObject::ProcessEvent(Func, &Parms);

	Boxes = std::move(Parms.Boxes);

	return Parms.ReturnValue;
}


// Function BP_Catapult.BP_Catapult_C.Optimise
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Optimise                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Catapult_C::Optimise(bool Param_Optimise)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Catapult_C", "Optimise");

	Params::BP_Catapult_C_Optimise Parms{};

	Parms.Param_Optimise = Param_Optimise;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Catapult.BP_Catapult_C.PushAll
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Catapult_C::PushAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Catapult_C", "PushAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Catapult.BP_Catapult_C.Pushed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Catapult_C::Pushed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Catapult_C", "Pushed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Catapult.BP_Catapult_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Catapult_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Catapult_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Catapult.BP_Catapult_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Catapult_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Catapult_C", "ReceiveTick");

	Params::BP_Catapult_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Catapult.BP_Catapult_C.Released
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Catapult_C::Released()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Catapult_C", "Released");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Catapult.BP_Catapult_C.ResetCatapult
// (BlueprintCallable, BlueprintEvent)

void ABP_Catapult_C::ResetCatapult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Catapult_C", "ResetCatapult");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Catapult.BP_Catapult_C.UpdateTurn
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TurnRate                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Catapult_C::UpdateTurn(double* TurnRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Catapult_C", "UpdateTurn");

	Params::BP_Catapult_C_UpdateTurn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TurnRate != nullptr)
		*TurnRate = Parms.TurnRate;
}


// Function BP_Catapult.BP_Catapult_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Catapult_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Catapult_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

