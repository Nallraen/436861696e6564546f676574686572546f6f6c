#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GS_Game

#include "Basic.hpp"

#include "GS_Game_classes.hpp"
#include "GS_Game_parameters.hpp"


namespace SDK
{

// Function GS_Game.GS_Game_C.ActorToHideInLobby
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewHidden                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::ActorToHideInLobby(bool bNewHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "ActorToHideInLobby");

	Params::GS_Game_C_ActorToHideInLobby Parms{};

	Parms.bNewHidden = bNewHidden;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_Game.GS_Game_C.AddChatElemAll
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_TchatElement                  NewElem                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AGS_Game_C::AddChatElemAll(const struct FS_TchatElement& NewElem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "AddChatElemAll");

	Params::GS_Game_C_AddChatElemAll Parms{};

	Parms.NewElem = std::move(NewElem);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_Game.GS_Game_C.AddFirstSafeLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGS_Game_C::AddFirstSafeLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "AddFirstSafeLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.AddLocalMP_Players
// (Public, BlueprintCallable, BlueprintEvent)

void AGS_Game_C::AddLocalMP_Players()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "AddLocalMP_Players");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.AddRescuePoint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_RescuePoint_C*                RescuePoint                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::AddRescuePoint(class ABP_RescuePoint_C* RescuePoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "AddRescuePoint");

	Params::GS_Game_C_AddRescuePoint Parms{};

	Parms.RescuePoint = RescuePoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_Game.GS_Game_C.AssignGamepad
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   GamepadIndex                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::AssignGamepad(int32 PlayerIndex, const int32 GamepadIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "AssignGamepad");

	Params::GS_Game_C_AssignGamepad Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.GamepadIndex = GamepadIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_Game.GS_Game_C.AttachPlayersAfterRescue
// (BlueprintCallable, BlueprintEvent)

void AGS_Game_C::AttachPlayersAfterRescue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "AttachPlayersAfterRescue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.AttachPlayersAndBeginGame
// (BlueprintCallable, BlueprintEvent)

void AGS_Game_C::AttachPlayersAndBeginGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "AttachPlayersAndBeginGame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.AttachToFirstCharacter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::AttachToFirstCharacter(class APawn* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "AttachToFirstCharacter");

	Params::GS_Game_C_AttachToFirstCharacter Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_Game.GS_Game_C.AttachToLastCharacter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::AttachToLastCharacter(class APawn* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "AttachToLastCharacter");

	Params::GS_Game_C_AttachToLastCharacter Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_Game.GS_Game_C.AttachToNextCharacter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::AttachToNextCharacter(class APawn* Character, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "AttachToNextCharacter");

	Params::GS_Game_C_AttachToNextCharacter Parms{};

	Parms.Character = Character;
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_Game.GS_Game_C.AttachToPreviousCharacter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::AttachToPreviousCharacter(class APawn* Character, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "AttachToPreviousCharacter");

	Params::GS_Game_C_AttachToPreviousCharacter Parms{};

	Parms.Character = Character;
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_Game.GS_Game_C.AutoAttachment
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGS_Game_C::AutoAttachment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "AutoAttachment");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.BackupProgress
// (Public, BlueprintCallable, BlueprintEvent)

void AGS_Game_C::BackupProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "BackupProgress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.CheckIfEveryoneHasLoadedLevels
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGS_Game_C::CheckIfEveryoneHasLoadedLevels()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "CheckIfEveryoneHasLoadedLevels");

	Params::GS_Game_C_CheckIfEveryoneHasLoadedLevels Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GS_Game.GS_Game_C.CheckSpawnPlayersAfterLoading
// (BlueprintCallable, BlueprintEvent)

void AGS_Game_C::CheckSpawnPlayersAfterLoading()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "CheckSpawnPlayersAfterLoading");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.CountCustomPS
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::CountCustomPS(int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "CountCustomPS");

	Params::GS_Game_C_CountCustomPS Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}


// Function GS_Game.GS_Game_C.CountSpawnedCharacters
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 AGS_Game_C::CountSpawnedCharacters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "CountSpawnedCharacters");

	Params::GS_Game_C_CountSpawnedCharacters Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GS_Game.GS_Game_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)

void AGS_Game_C::CustomEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "CustomEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.EndCinematicPassed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGS_Game_C::EndCinematicPassed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "EndCinematicPassed");

	Params::GS_Game_C_EndCinematicPassed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GS_Game.GS_Game_C.EveryoneFall?
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Fall                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::EveryoneFall_(bool* Fall)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "EveryoneFall?");

	Params::GS_Game_C_EveryoneFall_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Fall != nullptr)
		*Fall = Parms.Fall;
}


// Function GS_Game.GS_Game_C.EveryoneIsFalling
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Falling                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::EveryoneIsFalling(bool* Falling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "EveryoneIsFalling");

	Params::GS_Game_C_EveryoneIsFalling Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Falling != nullptr)
		*Falling = Parms.Falling;
}


// Function GS_Game.GS_Game_C.ExecuteUbergraph_GS_Game
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::ExecuteUbergraph_GS_Game(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "ExecuteUbergraph_GS_Game");

	Params::GS_Game_C_ExecuteUbergraph_GS_Game Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_Game.GS_Game_C.FindPlayerStart
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGS_Game_C::FindPlayerStart(struct FTransform* Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "FindPlayerStart");

	Params::GS_Game_C_FindPlayerStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);

	return Parms.ReturnValue;
}


// Function GS_Game.GS_Game_C.FlushCheckLavaDeath
// (BlueprintCallable, BlueprintEvent)

void AGS_Game_C::FlushCheckLavaDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "FlushCheckLavaDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.FlushSaveBiome
// (BlueprintCallable, BlueprintEvent)

void AGS_Game_C::FlushSaveBiome()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "FlushSaveBiome");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.Get Nearest Rescue Point(Server)
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Lava                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_RescuePoint_C*                Out                                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

bool AGS_Game_C::Get_Nearest_Rescue_Point_Server_(bool Lava, class ABP_RescuePoint_C** Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "Get Nearest Rescue Point(Server)");

	Params::GS_Game_C_Get_Nearest_Rescue_Point_Server_ Parms{};

	Parms.Lava = Lava;

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;

	return Parms.ReturnValue;
}


// Function GS_Game.GS_Game_C.GetBiomeByName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InString                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABiomeText_BP_C*                  Biome                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::GetBiomeByName(const class FString& InString, bool* Found, class ABiomeText_BP_C** Biome)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "GetBiomeByName");

	Params::GS_Game_C_GetBiomeByName Parms{};

	Parms.InString = std::move(InString);

	UObject::ProcessEvent(Func, &Parms);

	if (Found != nullptr)
		*Found = Parms.Found;

	if (Biome != nullptr)
		*Biome = Parms.Biome;
}


// Function GS_Game.GS_Game_C.GetChainMiddleLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Attached01                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Attached02                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FVector                          RepLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::GetChainMiddleLocation(const class FString& Attached01, const class FString& Attached02, struct FVector* RepLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "GetChainMiddleLocation");

	Params::GS_Game_C_GetChainMiddleLocation Parms{};

	Parms.Attached01 = std::move(Attached01);
	Parms.Attached02 = std::move(Attached02);

	UObject::ProcessEvent(Func, &Parms);

	if (RepLocation != nullptr)
		*RepLocation = std::move(Parms.RepLocation);
}


// Function GS_Game.GS_Game_C.GetGameBegun
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HasBegun                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::GetGameBegun(bool* HasBegun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "GetGameBegun");

	Params::GS_Game_C_GetGameBegun Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HasBegun != nullptr)
		*HasBegun = Parms.HasBegun;
}


// Function GS_Game.GS_Game_C.GetHighestRescuePoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_RescuePoint_C*                Return                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::GetHighestRescuePoint(class ABP_RescuePoint_C** Return, bool* Found)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "GetHighestRescuePoint");

	Params::GS_Game_C_GetHighestRescuePoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Found != nullptr)
		*Found = Parms.Found;
}


// Function GS_Game.GS_Game_C.GetLavaDead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dead                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::GetLavaDead(bool* Dead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "GetLavaDead");

	Params::GS_Game_C_GetLavaDead Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dead != nullptr)
		*Dead = Parms.Dead;
}


// Function GS_Game.GS_Game_C.GetLaveMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Lava                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::GetLaveMode(bool* Lava)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "GetLaveMode");

	Params::GS_Game_C_GetLaveMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Lava != nullptr)
		*Lava = Parms.Lava;
}


// Function GS_Game.GS_Game_C.GetNearestRescueByLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_RescuePoint_C*                Rescue                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::GetNearestRescueByLocation(const struct FVector& Location, class ABP_RescuePoint_C** Rescue, bool* Found)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "GetNearestRescueByLocation");

	Params::GS_Game_C_GetNearestRescueByLocation Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Rescue != nullptr)
		*Rescue = Parms.Rescue;

	if (Found != nullptr)
		*Found = Parms.Found;
}


// Function GS_Game.GS_Game_C.GetPawnArray
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class APawn*>                    Array                                                  (Parm, OutParm)

void AGS_Game_C::GetPawnArray(TArray<class APawn*>* Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "GetPawnArray");

	Params::GS_Game_C_GetPawnArray Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Array != nullptr)
		*Array = std::move(Parms.Array);
}


// Function GS_Game.GS_Game_C.GetPlayersMiddle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::GetPlayersMiddle(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "GetPlayersMiddle");

	Params::GS_Game_C_GetPlayersMiddle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function GS_Game.GS_Game_C.GetSkinByID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSteamID                         SteamID                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ChoosenChar                           Character                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::GetSkinByID(const struct FSteamID& SteamID, bool* Return, E_ChoosenChar* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "GetSkinByID");

	Params::GS_Game_C_GetSkinByID Parms{};

	Parms.SteamID = std::move(SteamID);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Character != nullptr)
		*Character = Parms.Character;
}


// Function GS_Game.GS_Game_C.GetTchat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FS_TchatElement>          Param_Tchat                                            (Parm, OutParm)

void AGS_Game_C::GetTchat(TArray<struct FS_TchatElement>* Param_Tchat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "GetTchat");

	Params::GS_Game_C_GetTchat Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Tchat != nullptr)
		*Param_Tchat = std::move(Parms.Param_Tchat);
}


// Function GS_Game.GS_Game_C.GetTimer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Timer                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::GetTimer(int32* Param_Timer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "GetTimer");

	Params::GS_Game_C_GetTimer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Timer != nullptr)
		*Param_Timer = Parms.Param_Timer;
}


// Function GS_Game.GS_Game_C.HandleGamepad
// (BlueprintCallable, BlueprintEvent)

void AGS_Game_C::HandleGamepad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "HandleGamepad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.HasEveryPC_AValidPawn
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGS_Game_C::HasEveryPC_AValidPawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "HasEveryPC_AValidPawn");

	Params::GS_Game_C_HasEveryPC_AValidPawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GS_Game.GS_Game_C.IncrementSpawnedCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::IncrementSpawnedCharacter(int32* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "IncrementSpawnedCharacter");

	Params::GS_Game_C_IncrementSpawnedCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function GS_Game.GS_Game_C.LaunchTimerServer
// (BlueprintCallable, BlueprintEvent)

void AGS_Game_C::LaunchTimerServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "LaunchTimerServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.LavaDeath(SRV)
// (Public, BlueprintCallable, BlueprintEvent)

void AGS_Game_C::LavaDeath_SRV_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "LavaDeath(SRV)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.LavaDeathAll
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AGS_Game_C::LavaDeathAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "LavaDeathAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.Login Message All
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AGS_Game_C::Login_Message_All()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "Login Message All");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.LogoutAll
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AGS_Game_C::LogoutAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "LogoutAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.MakeLobbyCharsVariable
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGS_Game_C::MakeLobbyCharsVariable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "MakeLobbyCharsVariable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.MakePawnArray
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   Actors                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class APawn*>                    PawnsOut                                               (Parm, OutParm)

void AGS_Game_C::MakePawnArray(TArray<class AActor*>& Actors, TArray<class APawn*>* PawnsOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "MakePawnArray");

	Params::GS_Game_C_MakePawnArray Parms{};

	Parms.Actors = std::move(Actors);

	UObject::ProcessEvent(Func, &Parms);

	Actors = std::move(Parms.Actors);

	if (PawnsOut != nullptr)
		*PawnsOut = std::move(Parms.PawnsOut);
}


// Function GS_Game.GS_Game_C.MakePawnsArray
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class APawn*>                    Array                                                  (Parm, OutParm)

void AGS_Game_C::MakePawnsArray(TArray<class APawn*>* Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "MakePawnsArray");

	Params::GS_Game_C_MakePawnsArray Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Array != nullptr)
		*Array = std::move(Parms.Array);
}


// Function GS_Game.GS_Game_C.MakeSessionJoinable
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Value                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AGS_Game_C::MakeSessionJoinable(const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "MakeSessionJoinable");

	Params::GS_Game_C_MakeSessionJoinable Parms{};

	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_Game.GS_Game_C.NearestRescuePoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Lava                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_RescuePoint_C*                RescuePoint                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::NearestRescuePoint(bool Lava, bool* Found, class ABP_RescuePoint_C** RescuePoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "NearestRescuePoint");

	Params::GS_Game_C_NearestRescuePoint Parms{};

	Parms.Lava = Lava;

	UObject::ProcessEvent(Func, &Parms);

	if (Found != nullptr)
		*Found = Parms.Found;

	if (RescuePoint != nullptr)
		*RescuePoint = Parms.RescuePoint;
}


// Function GS_Game.GS_Game_C.On Chat Message Received
// (Public, BlueprintCallable, BlueprintEvent)

void AGS_Game_C::On_Chat_Message_Received()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "On Chat Message Received");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.OnCallback_9746CD0941D7A9D80F1D45B1A1F79FA4
// (BlueprintCallable, BlueprintEvent)

void AGS_Game_C::OnCallback_9746CD0941D7A9D80F1D45B1A1F79FA4()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "OnCallback_9746CD0941D7A9D80F1D45B1A1F79FA4");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.OnRep_CharactersAreAttached
// (BlueprintCallable, BlueprintEvent)

void AGS_Game_C::OnRep_CharactersAreAttached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "OnRep_CharactersAreAttached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.OnRep_GameBegun
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void AGS_Game_C::OnRep_GameBegun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "OnRep_GameBegun");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.OnRep_LavaMode
// (BlueprintCallable, BlueprintEvent)

void AGS_Game_C::OnRep_LavaMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "OnRep_LavaMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.OnRep_Selected Game Mode
// (BlueprintCallable, BlueprintEvent)

void AGS_Game_C::OnRep_Selected_Game_Mode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "OnRep_Selected Game Mode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.PlayRescueEffect
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AGS_Game_C::PlayRescueEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "PlayRescueEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AGS_Game_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "ReceiveTick");

	Params::GS_Game_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_Game.GS_Game_C.RefreshLobbyChars
// (Public, BlueprintCallable, BlueprintEvent)

void AGS_Game_C::RefreshLobbyChars()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "RefreshLobbyChars");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.Rescue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_RescuePoint_C*                RescueActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ExitingCar                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::Rescue(class ABP_RescuePoint_C* RescueActor, bool ExitingCar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "Rescue");

	Params::GS_Game_C_Rescue Parms{};

	Parms.RescueActor = RescueActor;
	Parms.ExitingCar = ExitingCar;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_Game.GS_Game_C.RescueEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_RescuePoint_C*                RescuePoint                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ExitingCar                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::RescueEvent(class ABP_RescuePoint_C* RescuePoint, bool ExitingCar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "RescueEvent");

	Params::GS_Game_C_RescueEvent Parms{};

	Parms.RescuePoint = RescuePoint;
	Parms.ExitingCar = ExitingCar;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_Game.GS_Game_C.ResetChainFixAll
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AGS_Game_C::ResetChainFixAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "ResetChainFixAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.ResetLavaDeath
// (BlueprintCallable, BlueprintEvent)

void AGS_Game_C::ResetLavaDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "ResetLavaDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.SaveLocation
// (BlueprintCallable, BlueprintEvent)

void AGS_Game_C::SaveLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "SaveLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.SendToChatSRV
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::SendToChatSRV(const class FString& Param_Name, const class FString& Message, const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "SendToChatSRV");

	Params::GS_Game_C_SendToChatSRV Parms{};

	Parms.Param_Name = std::move(Param_Name);
	Parms.Message = std::move(Message);
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_Game.GS_Game_C.ServerTravel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AGS_Game_C::ServerTravel(const class FString& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "ServerTravel");

	Params::GS_Game_C_ServerTravel Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_Game.GS_Game_C.ServerTravelAll
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AGS_Game_C::ServerTravelAll(const class FString& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "ServerTravelAll");

	Params::GS_Game_C_ServerTravelAll Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_Game.GS_Game_C.SetTimer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Timer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_Game_C::SetTimer(int32 Param_Timer)
{
	static class UFunction* Func = nullptr;
	LOG(DEBUG) << "Function executed";

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "SetTimer");

	Params::GS_Game_C_SetTimer Parms{};

	Parms.Param_Timer = Param_Timer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_Game.GS_Game_C.Show Instructions
// (BlueprintCallable, BlueprintEvent)

void AGS_Game_C::Show_Instructions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "Show Instructions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.SpawnPlayersAfterLoading
// (BlueprintCallable, BlueprintEvent)

void AGS_Game_C::SpawnPlayersAfterLoading()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "SpawnPlayersAfterLoading");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.SpawnWithoutLobby(Srv)
// (BlueprintCallable, BlueprintEvent)

void AGS_Game_C::SpawnWithoutLobby_Srv_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "SpawnWithoutLobby(Srv)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.StartSavePlayerLocation
// (BlueprintCallable, BlueprintEvent)

void AGS_Game_C::StartSavePlayerLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "StartSavePlayerLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.SwitchToGameAll
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AGS_Game_C::SwitchToGameAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "SwitchToGameAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.SwitchToLobby
// (BlueprintCallable, BlueprintEvent)

void AGS_Game_C::SwitchToLobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "SwitchToLobby");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.Update Game Mode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGS_Game_C::Update_Game_Mode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "Update Game Mode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.UpdateAntisaveBox
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGS_Game_C::UpdateAntisaveBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "UpdateAntisaveBox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.UpdateChainLocations
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGS_Game_C::UpdateChainLocations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "UpdateChainLocations");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_Game.GS_Game_C.UpdateSelectedSkins
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGS_Game_C::UpdateSelectedSkins()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_Game_C", "UpdateSelectedSkins");

	UObject::ProcessEvent(Func, nullptr);
}

}

