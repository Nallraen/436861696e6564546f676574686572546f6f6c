#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BS_LightALit

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BS_LightALit.BS_LightALit_C
// 0x0018 (0x02B0 - 0x0298)
class ABS_LightALit_C final : public AActor
{
public:
	class UPointLightComponent*                   PointLight;                                        // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Light_Hum_Cue;                                     // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Light_01;                                          // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BS_LightALit_C">();
	}
	static class ABS_LightALit_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABS_LightALit_C>();
	}
};
static_assert(alignof(ABS_LightALit_C) == 0x000008, "Wrong alignment on ABS_LightALit_C");
static_assert(sizeof(ABS_LightALit_C) == 0x0002B0, "Wrong size on ABS_LightALit_C");
static_assert(offsetof(ABS_LightALit_C, PointLight) == 0x000298, "Member 'ABS_LightALit_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABS_LightALit_C, Light_Hum_Cue) == 0x0002A0, "Member 'ABS_LightALit_C::Light_Hum_Cue' has a wrong offset!");
static_assert(offsetof(ABS_LightALit_C, Light_01) == 0x0002A8, "Member 'ABS_LightALit_C::Light_01' has a wrong offset!");

}

