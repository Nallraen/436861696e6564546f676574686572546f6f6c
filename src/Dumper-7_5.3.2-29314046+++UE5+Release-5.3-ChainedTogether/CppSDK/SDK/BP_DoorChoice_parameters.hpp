#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DoorChoice

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_DoorChoice.BP_DoorChoice_C.BndEvt__BP_DoorChoice_Box1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38D2[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_DoorChoice.BP_DoorChoice_C.BndEvt__BP_DoorChoice_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38D3[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_DoorChoice_C_BndEvt__BP_DoorChoice_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_DoorChoice.BP_DoorChoice_C.ExecuteUbergraph_BP_DoorChoice
// 0x0468 (0x0468 - 0x0000)
struct BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38D4[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanel_Widget_C*                        CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanel_Widget_C*                        CallFunc_Create_ReturnValue_1;                     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RLerp_ReturnValue_1;                      // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0048(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess_1;                  // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38D5[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0138(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0150(0x0018)()
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38D6[0x3];                                     // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0188(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0270(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0280(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38D7[0x3];                                     // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0290(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38D8[0x7];                                     // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0380(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice) == 0x000008, "Wrong alignment on BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice");
static_assert(sizeof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice) == 0x000468, "Wrong size on BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, EntryPoint) == 0x000000, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, CallFunc_Create_ReturnValue_1) == 0x000010, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, CallFunc_RLerp_ReturnValue) == 0x000018, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, CallFunc_RLerp_ReturnValue_1) == 0x000030, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::CallFunc_RLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000048, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, Temp_bool_Has_Been_Initd_Variable) == 0x000130, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, Temp_bool_IsClosed_Variable) == 0x000131, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, Temp_bool_Has_Been_Initd_Variable_1) == 0x000132, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, K2Node_SwitchString_CmpSuccess) == 0x000133, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, K2Node_SwitchString_CmpSuccess_1) == 0x000134, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::K2Node_SwitchString_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, CallFunc_Conv_StringToText_ReturnValue) == 0x000138, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000150, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000168, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000170, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000178, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000180, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x000184, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000188, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000270, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, K2Node_ComponentBoundEvent_OtherActor) == 0x000278, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, K2Node_ComponentBoundEvent_OtherComp) == 0x000280, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000288, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, K2Node_ComponentBoundEvent_bFromSweep) == 0x00028C, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, K2Node_ComponentBoundEvent_SweepResult) == 0x000290, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, Temp_bool_IsClosed_Variable_1) == 0x000378, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000380, "Member 'BP_DoorChoice_C_ExecuteUbergraph_BP_DoorChoice::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");

}

