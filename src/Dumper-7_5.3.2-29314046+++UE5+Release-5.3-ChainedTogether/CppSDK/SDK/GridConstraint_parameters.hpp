#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GridConstraint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GridConstraint.GridConstraint_C.ExecuteUbergraph_GridConstraint
// 0x0208 (0x0208 - 0x0000)
struct GridConstraint_C_ExecuteUbergraph_GridConstraint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E65[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_Comp1;                                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_Comp2;                                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E66[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddWorldOffset_SweepHitResult;         // 0x0038(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0120(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GridConstraint_C_ExecuteUbergraph_GridConstraint) == 0x000008, "Wrong alignment on GridConstraint_C_ExecuteUbergraph_GridConstraint");
static_assert(sizeof(GridConstraint_C_ExecuteUbergraph_GridConstraint) == 0x000208, "Wrong size on GridConstraint_C_ExecuteUbergraph_GridConstraint");
static_assert(offsetof(GridConstraint_C_ExecuteUbergraph_GridConstraint, EntryPoint) == 0x000000, "Member 'GridConstraint_C_ExecuteUbergraph_GridConstraint::EntryPoint' has a wrong offset!");
static_assert(offsetof(GridConstraint_C_ExecuteUbergraph_GridConstraint, K2Node_Event_Comp1) == 0x000008, "Member 'GridConstraint_C_ExecuteUbergraph_GridConstraint::K2Node_Event_Comp1' has a wrong offset!");
static_assert(offsetof(GridConstraint_C_ExecuteUbergraph_GridConstraint, K2Node_Event_Comp2) == 0x000010, "Member 'GridConstraint_C_ExecuteUbergraph_GridConstraint::K2Node_Event_Comp2' has a wrong offset!");
static_assert(offsetof(GridConstraint_C_ExecuteUbergraph_GridConstraint, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'GridConstraint_C_ExecuteUbergraph_GridConstraint::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(GridConstraint_C_ExecuteUbergraph_GridConstraint, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'GridConstraint_C_ExecuteUbergraph_GridConstraint::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GridConstraint_C_ExecuteUbergraph_GridConstraint, CallFunc_K2_AddWorldOffset_SweepHitResult) == 0x000038, "Member 'GridConstraint_C_ExecuteUbergraph_GridConstraint::CallFunc_K2_AddWorldOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GridConstraint_C_ExecuteUbergraph_GridConstraint, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000120, "Member 'GridConstraint_C_ExecuteUbergraph_GridConstraint::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function GridConstraint.GridConstraint_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct GridConstraint_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GridConstraint_C_ReceiveTick) == 0x000004, "Wrong alignment on GridConstraint_C_ReceiveTick");
static_assert(sizeof(GridConstraint_C_ReceiveTick) == 0x000004, "Wrong size on GridConstraint_C_ReceiveTick");
static_assert(offsetof(GridConstraint_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'GridConstraint_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function GridConstraint.GridConstraint_C.SetContrainedComps
// 0x0010 (0x0010 - 0x0000)
struct GridConstraint_C_SetContrainedComps final
{
public:
	class UPrimitiveComponent*                    Comp1;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Comp2;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GridConstraint_C_SetContrainedComps) == 0x000008, "Wrong alignment on GridConstraint_C_SetContrainedComps");
static_assert(sizeof(GridConstraint_C_SetContrainedComps) == 0x000010, "Wrong size on GridConstraint_C_SetContrainedComps");
static_assert(offsetof(GridConstraint_C_SetContrainedComps, Comp1) == 0x000000, "Member 'GridConstraint_C_SetContrainedComps::Comp1' has a wrong offset!");
static_assert(offsetof(GridConstraint_C_SetContrainedComps, Comp2) == 0x000008, "Member 'GridConstraint_C_SetContrainedComps::Comp2' has a wrong offset!");

}

