#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MovingCubes_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass MovingCubes_BP.MovingCubes_BP_C
// 0x00A8 (0x0340 - 0x0298)
class AMovingCubes_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UC_VinceSync_C*                         C_VinceSync;                                       // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere02;                                          // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere01;                                          // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_NewTrack_0_08C97E4143D134B328B79CA2DF4E7561; // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_08C97E4143D134B328B79CA2DF4E7561; // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B58[0x3];                                     // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_8B9F71E1461CE0700D41CA9F7DF31A9E; // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_8B9F71E1461CE0700D41CA9F7DF31A9E; // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B59[0x3];                                     // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Right;                                             // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3B5A[0x7];                                     // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               InitRot;                                           // 0x02F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	struct FRotator                               RepRot;                                            // 0x0308(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Relative_Rotation;                                 // 0x0320(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         DelayBetweenMoves;                                 // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MovingCubes_BP(int32 EntryPoint);
	void MoveRightLeft();
	void Movesrv(bool Start);
	void ReceiveBeginPlay();
	void Rotate();
	void RotateAll(const struct FRotator& CurrentRot, const struct FRotator& NewRot);
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void Timeline_1__UpdateFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MovingCubes_BP_C">();
	}
	static class AMovingCubes_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMovingCubes_BP_C>();
	}
};
static_assert(alignof(AMovingCubes_BP_C) == 0x000008, "Wrong alignment on AMovingCubes_BP_C");
static_assert(sizeof(AMovingCubes_BP_C) == 0x000340, "Wrong size on AMovingCubes_BP_C");
static_assert(offsetof(AMovingCubes_BP_C, UberGraphFrame) == 0x000298, "Member 'AMovingCubes_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMovingCubes_BP_C, C_VinceSync) == 0x0002A0, "Member 'AMovingCubes_BP_C::C_VinceSync' has a wrong offset!");
static_assert(offsetof(AMovingCubes_BP_C, Sphere02) == 0x0002A8, "Member 'AMovingCubes_BP_C::Sphere02' has a wrong offset!");
static_assert(offsetof(AMovingCubes_BP_C, Sphere01) == 0x0002B0, "Member 'AMovingCubes_BP_C::Sphere01' has a wrong offset!");
static_assert(offsetof(AMovingCubes_BP_C, StaticMesh) == 0x0002B8, "Member 'AMovingCubes_BP_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AMovingCubes_BP_C, DefaultSceneRoot) == 0x0002C0, "Member 'AMovingCubes_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AMovingCubes_BP_C, Timeline_1_NewTrack_0_08C97E4143D134B328B79CA2DF4E7561) == 0x0002C8, "Member 'AMovingCubes_BP_C::Timeline_1_NewTrack_0_08C97E4143D134B328B79CA2DF4E7561' has a wrong offset!");
static_assert(offsetof(AMovingCubes_BP_C, Timeline_1__Direction_08C97E4143D134B328B79CA2DF4E7561) == 0x0002CC, "Member 'AMovingCubes_BP_C::Timeline_1__Direction_08C97E4143D134B328B79CA2DF4E7561' has a wrong offset!");
static_assert(offsetof(AMovingCubes_BP_C, Timeline_1) == 0x0002D0, "Member 'AMovingCubes_BP_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(AMovingCubes_BP_C, Timeline_0_NewTrack_0_8B9F71E1461CE0700D41CA9F7DF31A9E) == 0x0002D8, "Member 'AMovingCubes_BP_C::Timeline_0_NewTrack_0_8B9F71E1461CE0700D41CA9F7DF31A9E' has a wrong offset!");
static_assert(offsetof(AMovingCubes_BP_C, Timeline_0__Direction_8B9F71E1461CE0700D41CA9F7DF31A9E) == 0x0002DC, "Member 'AMovingCubes_BP_C::Timeline_0__Direction_8B9F71E1461CE0700D41CA9F7DF31A9E' has a wrong offset!");
static_assert(offsetof(AMovingCubes_BP_C, Timeline_0) == 0x0002E0, "Member 'AMovingCubes_BP_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AMovingCubes_BP_C, Right) == 0x0002E8, "Member 'AMovingCubes_BP_C::Right' has a wrong offset!");
static_assert(offsetof(AMovingCubes_BP_C, InitRot) == 0x0002F0, "Member 'AMovingCubes_BP_C::InitRot' has a wrong offset!");
static_assert(offsetof(AMovingCubes_BP_C, RepRot) == 0x000308, "Member 'AMovingCubes_BP_C::RepRot' has a wrong offset!");
static_assert(offsetof(AMovingCubes_BP_C, Relative_Rotation) == 0x000320, "Member 'AMovingCubes_BP_C::Relative_Rotation' has a wrong offset!");
static_assert(offsetof(AMovingCubes_BP_C, DelayBetweenMoves) == 0x000338, "Member 'AMovingCubes_BP_C::DelayBetweenMoves' has a wrong offset!");

}

