#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CloudElevator_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CloudElevator_BP.CloudElevator_BP_C
// 0x0030 (0x02C8 - 0x0298)
class ACloudElevator_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UC_TickOptimizer_C*                     C_TickOptimizer;                                   // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cylinder;                                          // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ForceElevator;                                     // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          New_Visibility;                                    // 0x02C0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)

public:
	void ActivateElevator();
	void DeactivateElevator();
	void ExecuteUbergraph_CloudElevator_BP(int32 EntryPoint);
	void IsActivated(bool* Activated);
	void OnRep_New_Visibility();
	void Pushed();
	void ReceiveTick(float DeltaSeconds);
	void Released();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CloudElevator_BP_C">();
	}
	static class ACloudElevator_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACloudElevator_BP_C>();
	}
};
static_assert(alignof(ACloudElevator_BP_C) == 0x000008, "Wrong alignment on ACloudElevator_BP_C");
static_assert(sizeof(ACloudElevator_BP_C) == 0x0002C8, "Wrong size on ACloudElevator_BP_C");
static_assert(offsetof(ACloudElevator_BP_C, UberGraphFrame) == 0x000298, "Member 'ACloudElevator_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACloudElevator_BP_C, C_TickOptimizer) == 0x0002A0, "Member 'ACloudElevator_BP_C::C_TickOptimizer' has a wrong offset!");
static_assert(offsetof(ACloudElevator_BP_C, Cylinder) == 0x0002A8, "Member 'ACloudElevator_BP_C::Cylinder' has a wrong offset!");
static_assert(offsetof(ACloudElevator_BP_C, ForceElevator) == 0x0002B0, "Member 'ACloudElevator_BP_C::ForceElevator' has a wrong offset!");
static_assert(offsetof(ACloudElevator_BP_C, DefaultSceneRoot) == 0x0002B8, "Member 'ACloudElevator_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ACloudElevator_BP_C, New_Visibility) == 0x0002C0, "Member 'ACloudElevator_BP_C::New_Visibility' has a wrong offset!");

}

