#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: bp_WindHorizontal_01_01

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass bp_WindHorizontal_01_01.bp_WindHorizontal_01_01_C
// 0x0038 (0x02D0 - 0x0298)
class Abp_WindHorizontal_01_01_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        Arrow;                                             // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Particle;                                          // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        DelayMin;                                          // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DelayMax;                                          // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_bp_WindHorizontal_01_01(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"bp_WindHorizontal_01_01_C">();
	}
	static class Abp_WindHorizontal_01_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<Abp_WindHorizontal_01_01_C>();
	}
};
static_assert(alignof(Abp_WindHorizontal_01_01_C) == 0x000008, "Wrong alignment on Abp_WindHorizontal_01_01_C");
static_assert(sizeof(Abp_WindHorizontal_01_01_C) == 0x0002D0, "Wrong size on Abp_WindHorizontal_01_01_C");
static_assert(offsetof(Abp_WindHorizontal_01_01_C, UberGraphFrame) == 0x000298, "Member 'Abp_WindHorizontal_01_01_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(Abp_WindHorizontal_01_01_C, Arrow) == 0x0002A0, "Member 'Abp_WindHorizontal_01_01_C::Arrow' has a wrong offset!");
static_assert(offsetof(Abp_WindHorizontal_01_01_C, ParticleSystem) == 0x0002A8, "Member 'Abp_WindHorizontal_01_01_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(Abp_WindHorizontal_01_01_C, DefaultSceneRoot) == 0x0002B0, "Member 'Abp_WindHorizontal_01_01_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(Abp_WindHorizontal_01_01_C, Particle) == 0x0002B8, "Member 'Abp_WindHorizontal_01_01_C::Particle' has a wrong offset!");
static_assert(offsetof(Abp_WindHorizontal_01_01_C, DelayMin) == 0x0002C0, "Member 'Abp_WindHorizontal_01_01_C::DelayMin' has a wrong offset!");
static_assert(offsetof(Abp_WindHorizontal_01_01_C, DelayMax) == 0x0002C8, "Member 'Abp_WindHorizontal_01_01_C::DelayMax' has a wrong offset!");

}

