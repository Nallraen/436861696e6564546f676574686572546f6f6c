#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_ChainPhysics

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPI_ChainPhysics.BPI_ChainPhysics_C.Bounce
// 0x0018 (0x0018 - 0x0000)
struct BPI_ChainPhysics_C_Bounce final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_ChainPhysics_C_Bounce) == 0x000008, "Wrong alignment on BPI_ChainPhysics_C_Bounce");
static_assert(sizeof(BPI_ChainPhysics_C_Bounce) == 0x000018, "Wrong size on BPI_ChainPhysics_C_Bounce");
static_assert(offsetof(BPI_ChainPhysics_C_Bounce, Velocity) == 0x000000, "Member 'BPI_ChainPhysics_C_Bounce::Velocity' has a wrong offset!");

// Function BPI_ChainPhysics.BPI_ChainPhysics_C.DissolveChain
// 0x0010 (0x0010 - 0x0000)
struct BPI_ChainPhysics_C_DissolveChain final
{
public:
	double                                        PlayRate;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlaySound;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_ChainPhysics_C_DissolveChain) == 0x000008, "Wrong alignment on BPI_ChainPhysics_C_DissolveChain");
static_assert(sizeof(BPI_ChainPhysics_C_DissolveChain) == 0x000010, "Wrong size on BPI_ChainPhysics_C_DissolveChain");
static_assert(offsetof(BPI_ChainPhysics_C_DissolveChain, PlayRate) == 0x000000, "Member 'BPI_ChainPhysics_C_DissolveChain::PlayRate' has a wrong offset!");
static_assert(offsetof(BPI_ChainPhysics_C_DissolveChain, PlaySound) == 0x000008, "Member 'BPI_ChainPhysics_C_DissolveChain::PlaySound' has a wrong offset!");

// Function BPI_ChainPhysics.BPI_ChainPhysics_C.Get Cosmetics Maillons
// 0x0010 (0x0010 - 0x0000)
struct BPI_ChainPhysics_C_Get_Cosmetics_Maillons final
{
public:
	TArray<class UStaticMeshComponent*>           Maillons;                                          // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(BPI_ChainPhysics_C_Get_Cosmetics_Maillons) == 0x000008, "Wrong alignment on BPI_ChainPhysics_C_Get_Cosmetics_Maillons");
static_assert(sizeof(BPI_ChainPhysics_C_Get_Cosmetics_Maillons) == 0x000010, "Wrong size on BPI_ChainPhysics_C_Get_Cosmetics_Maillons");
static_assert(offsetof(BPI_ChainPhysics_C_Get_Cosmetics_Maillons, Maillons) == 0x000000, "Member 'BPI_ChainPhysics_C_Get_Cosmetics_Maillons::Maillons' has a wrong offset!");

// Function BPI_ChainPhysics.BPI_ChainPhysics_C.GetAttachedChars
// 0x0010 (0x0010 - 0x0000)
struct BPI_ChainPhysics_C_GetAttachedChars final
{
public:
	TArray<class AActor*>                         AttachedChars;                                     // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BPI_ChainPhysics_C_GetAttachedChars) == 0x000008, "Wrong alignment on BPI_ChainPhysics_C_GetAttachedChars");
static_assert(sizeof(BPI_ChainPhysics_C_GetAttachedChars) == 0x000010, "Wrong size on BPI_ChainPhysics_C_GetAttachedChars");
static_assert(offsetof(BPI_ChainPhysics_C_GetAttachedChars, AttachedChars) == 0x000000, "Member 'BPI_ChainPhysics_C_GetAttachedChars::AttachedChars' has a wrong offset!");

// Function BPI_ChainPhysics.BPI_ChainPhysics_C.GetCurrentChainDistance
// 0x0008 (0x0008 - 0x0000)
struct BPI_ChainPhysics_C_GetCurrentChainDistance final
{
public:
	double                                        CurrentChainDistance;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_ChainPhysics_C_GetCurrentChainDistance) == 0x000008, "Wrong alignment on BPI_ChainPhysics_C_GetCurrentChainDistance");
static_assert(sizeof(BPI_ChainPhysics_C_GetCurrentChainDistance) == 0x000008, "Wrong size on BPI_ChainPhysics_C_GetCurrentChainDistance");
static_assert(offsetof(BPI_ChainPhysics_C_GetCurrentChainDistance, CurrentChainDistance) == 0x000000, "Member 'BPI_ChainPhysics_C_GetCurrentChainDistance::CurrentChainDistance' has a wrong offset!");

// Function BPI_ChainPhysics.BPI_ChainPhysics_C.GetSnapTips
// 0x0001 (0x0001 - 0x0000)
struct BPI_ChainPhysics_C_GetSnapTips final
{
public:
	bool                                          SnapTips;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_ChainPhysics_C_GetSnapTips) == 0x000001, "Wrong alignment on BPI_ChainPhysics_C_GetSnapTips");
static_assert(sizeof(BPI_ChainPhysics_C_GetSnapTips) == 0x000001, "Wrong size on BPI_ChainPhysics_C_GetSnapTips");
static_assert(offsetof(BPI_ChainPhysics_C_GetSnapTips, SnapTips) == 0x000000, "Member 'BPI_ChainPhysics_C_GetSnapTips::SnapTips' has a wrong offset!");

// Function BPI_ChainPhysics.BPI_ChainPhysics_C.GetTension
// 0x0008 (0x0008 - 0x0000)
struct BPI_ChainPhysics_C_GetTension final
{
public:
	double                                        Float;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_ChainPhysics_C_GetTension) == 0x000008, "Wrong alignment on BPI_ChainPhysics_C_GetTension");
static_assert(sizeof(BPI_ChainPhysics_C_GetTension) == 0x000008, "Wrong size on BPI_ChainPhysics_C_GetTension");
static_assert(offsetof(BPI_ChainPhysics_C_GetTension, Float) == 0x000000, "Member 'BPI_ChainPhysics_C_GetTension::Float' has a wrong offset!");

// Function BPI_ChainPhysics.BPI_ChainPhysics_C.ImpulseOnMaillons
// 0x0018 (0x0018 - 0x0000)
struct BPI_ChainPhysics_C_ImpulseOnMaillons final
{
public:
	struct FVector                                Impulse;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_ChainPhysics_C_ImpulseOnMaillons) == 0x000008, "Wrong alignment on BPI_ChainPhysics_C_ImpulseOnMaillons");
static_assert(sizeof(BPI_ChainPhysics_C_ImpulseOnMaillons) == 0x000018, "Wrong size on BPI_ChainPhysics_C_ImpulseOnMaillons");
static_assert(offsetof(BPI_ChainPhysics_C_ImpulseOnMaillons, Impulse) == 0x000000, "Member 'BPI_ChainPhysics_C_ImpulseOnMaillons::Impulse' has a wrong offset!");

// Function BPI_ChainPhysics.BPI_ChainPhysics_C.Jump
// 0x0008 (0x0008 - 0x0000)
struct BPI_ChainPhysics_C_Jump final
{
public:
	class AActor*                                 Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_ChainPhysics_C_Jump) == 0x000008, "Wrong alignment on BPI_ChainPhysics_C_Jump");
static_assert(sizeof(BPI_ChainPhysics_C_Jump) == 0x000008, "Wrong size on BPI_ChainPhysics_C_Jump");
static_assert(offsetof(BPI_ChainPhysics_C_Jump, Character) == 0x000000, "Member 'BPI_ChainPhysics_C_Jump::Character' has a wrong offset!");

// Function BPI_ChainPhysics.BPI_ChainPhysics_C.PullChain
// 0x0008 (0x0008 - 0x0000)
struct BPI_ChainPhysics_C_PullChain final
{
public:
	class APawn*                                  Puller;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_ChainPhysics_C_PullChain) == 0x000008, "Wrong alignment on BPI_ChainPhysics_C_PullChain");
static_assert(sizeof(BPI_ChainPhysics_C_PullChain) == 0x000008, "Wrong size on BPI_ChainPhysics_C_PullChain");
static_assert(offsetof(BPI_ChainPhysics_C_PullChain, Puller) == 0x000000, "Member 'BPI_ChainPhysics_C_PullChain::Puller' has a wrong offset!");

// Function BPI_ChainPhysics.BPI_ChainPhysics_C.Reattach Cube Socket to Chain
// 0x0008 (0x0008 - 0x0000)
struct BPI_ChainPhysics_C_Reattach_Cube_Socket_to_Chain final
{
public:
	class UPrimitiveComponent*                    CubeSocket;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_ChainPhysics_C_Reattach_Cube_Socket_to_Chain) == 0x000008, "Wrong alignment on BPI_ChainPhysics_C_Reattach_Cube_Socket_to_Chain");
static_assert(sizeof(BPI_ChainPhysics_C_Reattach_Cube_Socket_to_Chain) == 0x000008, "Wrong size on BPI_ChainPhysics_C_Reattach_Cube_Socket_to_Chain");
static_assert(offsetof(BPI_ChainPhysics_C_Reattach_Cube_Socket_to_Chain, CubeSocket) == 0x000000, "Member 'BPI_ChainPhysics_C_Reattach_Cube_Socket_to_Chain::CubeSocket' has a wrong offset!");

// Function BPI_ChainPhysics.BPI_ChainPhysics_C.ReinitAttachment
// 0x0018 (0x0018 - 0x0000)
struct BPI_ChainPhysics_C_ReinitAttachment final
{
public:
	int32                                         NewDensity;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C8E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        NewChainMass;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Human;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_ChainPhysics_C_ReinitAttachment) == 0x000008, "Wrong alignment on BPI_ChainPhysics_C_ReinitAttachment");
static_assert(sizeof(BPI_ChainPhysics_C_ReinitAttachment) == 0x000018, "Wrong size on BPI_ChainPhysics_C_ReinitAttachment");
static_assert(offsetof(BPI_ChainPhysics_C_ReinitAttachment, NewDensity) == 0x000000, "Member 'BPI_ChainPhysics_C_ReinitAttachment::NewDensity' has a wrong offset!");
static_assert(offsetof(BPI_ChainPhysics_C_ReinitAttachment, NewChainMass) == 0x000008, "Member 'BPI_ChainPhysics_C_ReinitAttachment::NewChainMass' has a wrong offset!");
static_assert(offsetof(BPI_ChainPhysics_C_ReinitAttachment, Human) == 0x000010, "Member 'BPI_ChainPhysics_C_ReinitAttachment::Human' has a wrong offset!");

// Function BPI_ChainPhysics.BPI_ChainPhysics_C.SetAttachedChar
// 0x0010 (0x0010 - 0x0000)
struct BPI_ChainPhysics_C_SetAttachedChar final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C8F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Char;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_ChainPhysics_C_SetAttachedChar) == 0x000008, "Wrong alignment on BPI_ChainPhysics_C_SetAttachedChar");
static_assert(sizeof(BPI_ChainPhysics_C_SetAttachedChar) == 0x000010, "Wrong size on BPI_ChainPhysics_C_SetAttachedChar");
static_assert(offsetof(BPI_ChainPhysics_C_SetAttachedChar, Param_Index) == 0x000000, "Member 'BPI_ChainPhysics_C_SetAttachedChar::Param_Index' has a wrong offset!");
static_assert(offsetof(BPI_ChainPhysics_C_SetAttachedChar, Char) == 0x000008, "Member 'BPI_ChainPhysics_C_SetAttachedChar::Char' has a wrong offset!");

// Function BPI_ChainPhysics.BPI_ChainPhysics_C.SetMaillonWeight
// 0x0008 (0x0008 - 0x0000)
struct BPI_ChainPhysics_C_SetMaillonWeight final
{
public:
	double                                        NewWeight;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_ChainPhysics_C_SetMaillonWeight) == 0x000008, "Wrong alignment on BPI_ChainPhysics_C_SetMaillonWeight");
static_assert(sizeof(BPI_ChainPhysics_C_SetMaillonWeight) == 0x000008, "Wrong size on BPI_ChainPhysics_C_SetMaillonWeight");
static_assert(offsetof(BPI_ChainPhysics_C_SetMaillonWeight, NewWeight) == 0x000000, "Member 'BPI_ChainPhysics_C_SetMaillonWeight::NewWeight' has a wrong offset!");

// Function BPI_ChainPhysics.BPI_ChainPhysics_C.SetSnapTips
// 0x0001 (0x0001 - 0x0000)
struct BPI_ChainPhysics_C_SetSnapTips final
{
public:
	bool                                          SnapTips;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_ChainPhysics_C_SetSnapTips) == 0x000001, "Wrong alignment on BPI_ChainPhysics_C_SetSnapTips");
static_assert(sizeof(BPI_ChainPhysics_C_SetSnapTips) == 0x000001, "Wrong size on BPI_ChainPhysics_C_SetSnapTips");
static_assert(offsetof(BPI_ChainPhysics_C_SetSnapTips, SnapTips) == 0x000000, "Member 'BPI_ChainPhysics_C_SetSnapTips::SnapTips' has a wrong offset!");

// Function BPI_ChainPhysics.BPI_ChainPhysics_C.SetTip0Location
// 0x0018 (0x0018 - 0x0000)
struct BPI_ChainPhysics_C_SetTip0Location final
{
public:
	struct FVector                                Loc;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_ChainPhysics_C_SetTip0Location) == 0x000008, "Wrong alignment on BPI_ChainPhysics_C_SetTip0Location");
static_assert(sizeof(BPI_ChainPhysics_C_SetTip0Location) == 0x000018, "Wrong size on BPI_ChainPhysics_C_SetTip0Location");
static_assert(offsetof(BPI_ChainPhysics_C_SetTip0Location, Loc) == 0x000000, "Member 'BPI_ChainPhysics_C_SetTip0Location::Loc' has a wrong offset!");

// Function BPI_ChainPhysics.BPI_ChainPhysics_C.SetTip1Location
// 0x0018 (0x0018 - 0x0000)
struct BPI_ChainPhysics_C_SetTip1Location final
{
public:
	struct FVector                                Loc;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_ChainPhysics_C_SetTip1Location) == 0x000008, "Wrong alignment on BPI_ChainPhysics_C_SetTip1Location");
static_assert(sizeof(BPI_ChainPhysics_C_SetTip1Location) == 0x000018, "Wrong size on BPI_ChainPhysics_C_SetTip1Location");
static_assert(offsetof(BPI_ChainPhysics_C_SetTip1Location, Loc) == 0x000000, "Member 'BPI_ChainPhysics_C_SetTip1Location::Loc' has a wrong offset!");

}

