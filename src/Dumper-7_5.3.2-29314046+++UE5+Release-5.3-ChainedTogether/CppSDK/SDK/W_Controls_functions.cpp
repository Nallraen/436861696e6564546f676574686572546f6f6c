#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Controls

#include "Basic.hpp"

#include "W_Controls_classes.hpp"
#include "W_Controls_parameters.hpp"


namespace SDK
{

// Function W_Controls.W_Controls_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_Controls_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Controls_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Controls.W_Controls_C.ExecuteUbergraph_W_Controls
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Controls_C::ExecuteUbergraph_W_Controls(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Controls_C", "ExecuteUbergraph_W_Controls");

	Params::W_Controls_C_ExecuteUbergraph_W_Controls Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Controls.W_Controls_C.GetKeyName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Key                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPlayerMappableKeySlot                  Param_Slot                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             DisplayName                                            (Parm, OutParm)

void UW_Controls_C::GetKeyName(const class FName Key, EPlayerMappableKeySlot Param_Slot, class FText* DisplayName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Controls_C", "GetKeyName");

	Params::W_Controls_C_GetKeyName Parms{};

	Parms.Key = Key;
	Parms.Param_Slot = Param_Slot;

	UObject::ProcessEvent(Func, &Parms);

	if (DisplayName != nullptr)
		*DisplayName = std::move(Parms.DisplayName);
}


// Function W_Controls.W_Controls_C.PermuterZQSD
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Out                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UW_Controls_C::PermuterZQSD(const class FString& String, class FString* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Controls_C", "PermuterZQSD");

	Params::W_Controls_C_PermuterZQSD Parms{};

	Parms.String = std::move(String);

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function W_Controls.W_Controls_C.RefreshContent
// (BlueprintCallable, BlueprintEvent)

void UW_Controls_C::RefreshContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Controls_C", "RefreshContent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Controls.W_Controls_C.ReturnKeyName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     Action                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             KeyName                                                (Parm, OutParm)

void UW_Controls_C::ReturnKeyName(class APlayerController* PlayerController, const class UInputAction* Action, int32 Param_Index, class FText* KeyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Controls_C", "ReturnKeyName");

	Params::W_Controls_C_ReturnKeyName Parms{};

	Parms.PlayerController = PlayerController;
	Parms.Action = Action;
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (KeyName != nullptr)
		*KeyName = std::move(Parms.KeyName);
}


// Function W_Controls.W_Controls_C.UpdateBinding
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidgetSwitcher*                  WidgetSwitcher                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UTextBlock*                       TextBlock                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FText                             KeyName                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_Controls_C::UpdateBinding(class UWidgetSwitcher* WidgetSwitcher, class UTextBlock* TextBlock, const class FText& KeyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Controls_C", "UpdateBinding");

	Params::W_Controls_C_UpdateBinding Parms{};

	Parms.WidgetSwitcher = WidgetSwitcher;
	Parms.TextBlock = TextBlock;
	Parms.KeyName = std::move(KeyName);

	UObject::ProcessEvent(Func, &Parms);
}

}

