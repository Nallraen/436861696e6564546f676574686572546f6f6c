#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Bind

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Slate_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function W_Bind.W_Bind_C.BndEvt__W_Bind_InputKeySelector_97_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct W_Bind_C_BndEvt__W_Bind_InputKeySelector_97_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            Param_SelectedKey;                                 // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(W_Bind_C_BndEvt__W_Bind_InputKeySelector_97_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on W_Bind_C_BndEvt__W_Bind_InputKeySelector_97_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature");
static_assert(sizeof(W_Bind_C_BndEvt__W_Bind_InputKeySelector_97_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on W_Bind_C_BndEvt__W_Bind_InputKeySelector_97_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature");
static_assert(offsetof(W_Bind_C_BndEvt__W_Bind_InputKeySelector_97_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature, Param_SelectedKey) == 0x000000, "Member 'W_Bind_C_BndEvt__W_Bind_InputKeySelector_97_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature::Param_SelectedKey' has a wrong offset!");

// Function W_Bind.W_Bind_C.ExecuteUbergraph_W_Bind
// 0x00C8 (0x00C8 - 0x0000)
struct W_Bind_C_ExecuteUbergraph_W_Bind final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33BB[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnhancedInputLocalPlayerSubsystem*     CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_GetUserSettings_self_CastInput;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnhancedInputUserSettings*             CallFunc_GetUserSettings_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey;            // 0x0028(0x0020)(HasGetValueTypeHash)
	class UEnhancedInputLocalPlayerSubsystem*     CallFunc_GetLocalPlayerSubsystem_ReturnValue_1;    // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_GetUserSettings_self_CastInput_1;         // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnhancedInputUserSettings*             CallFunc_GetUserSettings_ReturnValue_1;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMapPlayerKeyArgs                      K2Node_MakeStruct_MapPlayerKeyArgs;                // 0x0068(0x0040)()
	struct FGameplayTagContainer                  CallFunc_MapPlayerKey_FailureReason;               // 0x00A8(0x0020)()
};
static_assert(alignof(W_Bind_C_ExecuteUbergraph_W_Bind) == 0x000008, "Wrong alignment on W_Bind_C_ExecuteUbergraph_W_Bind");
static_assert(sizeof(W_Bind_C_ExecuteUbergraph_W_Bind) == 0x0000C8, "Wrong size on W_Bind_C_ExecuteUbergraph_W_Bind");
static_assert(offsetof(W_Bind_C_ExecuteUbergraph_W_Bind, EntryPoint) == 0x000000, "Member 'W_Bind_C_ExecuteUbergraph_W_Bind::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Bind_C_ExecuteUbergraph_W_Bind, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'W_Bind_C_ExecuteUbergraph_W_Bind::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Bind_C_ExecuteUbergraph_W_Bind, CallFunc_GetUserSettings_self_CastInput) == 0x000010, "Member 'W_Bind_C_ExecuteUbergraph_W_Bind::CallFunc_GetUserSettings_self_CastInput' has a wrong offset!");
static_assert(offsetof(W_Bind_C_ExecuteUbergraph_W_Bind, CallFunc_GetUserSettings_ReturnValue) == 0x000020, "Member 'W_Bind_C_ExecuteUbergraph_W_Bind::CallFunc_GetUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Bind_C_ExecuteUbergraph_W_Bind, K2Node_ComponentBoundEvent_SelectedKey) == 0x000028, "Member 'W_Bind_C_ExecuteUbergraph_W_Bind::K2Node_ComponentBoundEvent_SelectedKey' has a wrong offset!");
static_assert(offsetof(W_Bind_C_ExecuteUbergraph_W_Bind, CallFunc_GetLocalPlayerSubsystem_ReturnValue_1) == 0x000048, "Member 'W_Bind_C_ExecuteUbergraph_W_Bind::CallFunc_GetLocalPlayerSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Bind_C_ExecuteUbergraph_W_Bind, CallFunc_GetUserSettings_self_CastInput_1) == 0x000050, "Member 'W_Bind_C_ExecuteUbergraph_W_Bind::CallFunc_GetUserSettings_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(W_Bind_C_ExecuteUbergraph_W_Bind, CallFunc_GetUserSettings_ReturnValue_1) == 0x000060, "Member 'W_Bind_C_ExecuteUbergraph_W_Bind::CallFunc_GetUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Bind_C_ExecuteUbergraph_W_Bind, K2Node_MakeStruct_MapPlayerKeyArgs) == 0x000068, "Member 'W_Bind_C_ExecuteUbergraph_W_Bind::K2Node_MakeStruct_MapPlayerKeyArgs' has a wrong offset!");
static_assert(offsetof(W_Bind_C_ExecuteUbergraph_W_Bind, CallFunc_MapPlayerKey_FailureReason) == 0x0000A8, "Member 'W_Bind_C_ExecuteUbergraph_W_Bind::CallFunc_MapPlayerKey_FailureReason' has a wrong offset!");

// Function W_Bind.W_Bind_C.GetAxisByPositive
// 0x0088 (0x0088 - 0x0000)
struct W_Bind_C_GetAxisByPositive final
{
public:
	TArray<struct FInputAxisKeyMapping>           Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsPositive;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33BC[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   Array_Element;                                     // 0x0018(0x0028)(Parm, OutParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33BD[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item;                           // 0x0050(0x0028)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33BE[0x1];                                     // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Bind_C_GetAxisByPositive) == 0x000008, "Wrong alignment on W_Bind_C_GetAxisByPositive");
static_assert(sizeof(W_Bind_C_GetAxisByPositive) == 0x000088, "Wrong size on W_Bind_C_GetAxisByPositive");
static_assert(offsetof(W_Bind_C_GetAxisByPositive, Array) == 0x000000, "Member 'W_Bind_C_GetAxisByPositive::Array' has a wrong offset!");
static_assert(offsetof(W_Bind_C_GetAxisByPositive, IsPositive) == 0x000010, "Member 'W_Bind_C_GetAxisByPositive::IsPositive' has a wrong offset!");
static_assert(offsetof(W_Bind_C_GetAxisByPositive, ReturnValue) == 0x000011, "Member 'W_Bind_C_GetAxisByPositive::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Bind_C_GetAxisByPositive, Array_Element) == 0x000018, "Member 'W_Bind_C_GetAxisByPositive::Array_Element' has a wrong offset!");
static_assert(offsetof(W_Bind_C_GetAxisByPositive, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'W_Bind_C_GetAxisByPositive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Bind_C_GetAxisByPositive, Temp_int_Array_Index_Variable) == 0x000044, "Member 'W_Bind_C_GetAxisByPositive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Bind_C_GetAxisByPositive, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'W_Bind_C_GetAxisByPositive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Bind_C_GetAxisByPositive, CallFunc_Array_Get_Item) == 0x000050, "Member 'W_Bind_C_GetAxisByPositive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Bind_C_GetAxisByPositive, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'W_Bind_C_GetAxisByPositive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Bind_C_GetAxisByPositive, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000079, "Member 'W_Bind_C_GetAxisByPositive::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Bind_C_GetAxisByPositive, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x00007A, "Member 'W_Bind_C_GetAxisByPositive::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Bind_C_GetAxisByPositive, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'W_Bind_C_GetAxisByPositive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Bind_C_GetAxisByPositive, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000080, "Member 'W_Bind_C_GetAxisByPositive::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function W_Bind.W_Bind_C.OnValueChanged__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct W_Bind_C_OnValueChanged__DelegateSignature final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Setting;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Bind_C_OnValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on W_Bind_C_OnValueChanged__DelegateSignature");
static_assert(sizeof(W_Bind_C_OnValueChanged__DelegateSignature) == 0x000018, "Wrong size on W_Bind_C_OnValueChanged__DelegateSignature");
static_assert(offsetof(W_Bind_C_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'W_Bind_C_OnValueChanged__DelegateSignature::Value' has a wrong offset!");
static_assert(offsetof(W_Bind_C_OnValueChanged__DelegateSignature, Setting) == 0x000008, "Member 'W_Bind_C_OnValueChanged__DelegateSignature::Setting' has a wrong offset!");

// Function W_Bind.W_Bind_C.RefreshAction
// 0x00A8 (0x00A8 - 0x0000)
struct W_Bind_C_RefreshAction final
{
public:
	struct FInputChord                            InputChord;                                        // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33BF[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_1;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x0040(0x0010)(ReferenceParm)
	struct FInputActionKeyMapping                 K2Node_MakeStruct_InputActionKeyMapping;           // 0x0050(0x0028)()
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item;                           // 0x0078(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Bind_C_RefreshAction) == 0x000008, "Wrong alignment on W_Bind_C_RefreshAction");
static_assert(sizeof(W_Bind_C_RefreshAction) == 0x0000A8, "Wrong size on W_Bind_C_RefreshAction");
static_assert(offsetof(W_Bind_C_RefreshAction, InputChord) == 0x000000, "Member 'W_Bind_C_RefreshAction::InputChord' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAction, Temp_int_Array_Index_Variable) == 0x000020, "Member 'W_Bind_C_RefreshAction::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAction, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'W_Bind_C_RefreshAction::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAction, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'W_Bind_C_RefreshAction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAction, CallFunc_GetInputSettings_ReturnValue) == 0x000030, "Member 'W_Bind_C_RefreshAction::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAction, CallFunc_GetInputSettings_ReturnValue_1) == 0x000038, "Member 'W_Bind_C_RefreshAction::CallFunc_GetInputSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAction, CallFunc_GetActionMappingByName_OutMappings) == 0x000040, "Member 'W_Bind_C_RefreshAction::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAction, K2Node_MakeStruct_InputActionKeyMapping) == 0x000050, "Member 'W_Bind_C_RefreshAction::K2Node_MakeStruct_InputActionKeyMapping' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAction, CallFunc_Array_Get_Item) == 0x000078, "Member 'W_Bind_C_RefreshAction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAction, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'W_Bind_C_RefreshAction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAction, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'W_Bind_C_RefreshAction::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_Bind.W_Bind_C.RefreshAxis
// 0x00B8 (0x00B8 - 0x0000)
struct W_Bind_C_RefreshAxis final
{
public:
	struct FInputChord                            InputChord;                                        // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C0[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputAxisKeyMapping                   K2Node_MakeStruct_InputAxisKeyMapping;             // 0x0040(0x0028)()
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetAxisMappingByName_OutMappings;         // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C1[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item;                           // 0x0080(0x0028)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C2[0x1];                                     // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MakeStruct_Scale_ImplicitCast;              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Bind_C_RefreshAxis) == 0x000008, "Wrong alignment on W_Bind_C_RefreshAxis");
static_assert(sizeof(W_Bind_C_RefreshAxis) == 0x0000B8, "Wrong size on W_Bind_C_RefreshAxis");
static_assert(offsetof(W_Bind_C_RefreshAxis, InputChord) == 0x000000, "Member 'W_Bind_C_RefreshAxis::InputChord' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAxis, Temp_int_Array_Index_Variable) == 0x000020, "Member 'W_Bind_C_RefreshAxis::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAxis, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'W_Bind_C_RefreshAxis::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAxis, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'W_Bind_C_RefreshAxis::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAxis, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'W_Bind_C_RefreshAxis::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAxis, CallFunc_GetInputSettings_ReturnValue) == 0x000038, "Member 'W_Bind_C_RefreshAxis::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAxis, K2Node_MakeStruct_InputAxisKeyMapping) == 0x000040, "Member 'W_Bind_C_RefreshAxis::K2Node_MakeStruct_InputAxisKeyMapping' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAxis, CallFunc_GetAxisMappingByName_OutMappings) == 0x000068, "Member 'W_Bind_C_RefreshAxis::CallFunc_GetAxisMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAxis, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'W_Bind_C_RefreshAxis::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAxis, CallFunc_Array_Get_Item) == 0x000080, "Member 'W_Bind_C_RefreshAxis::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAxis, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'W_Bind_C_RefreshAxis::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAxis, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000A9, "Member 'W_Bind_C_RefreshAxis::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAxis, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x0000AA, "Member 'W_Bind_C_RefreshAxis::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAxis, K2Node_MakeStruct_Scale_ImplicitCast) == 0x0000AC, "Member 'W_Bind_C_RefreshAxis::K2Node_MakeStruct_Scale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshAxis, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0000B0, "Member 'W_Bind_C_RefreshAxis::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function W_Bind.W_Bind_C.RefreshBind
// 0x00B0 (0x00B0 - 0x0000)
struct W_Bind_C_RefreshBind final
{
public:
	struct FPlayerKeyMapping                      Key;                                               // 0x0000(0x0090)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputChord                            K2Node_MakeStruct_InputChord;                      // 0x0090(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(W_Bind_C_RefreshBind) == 0x000008, "Wrong alignment on W_Bind_C_RefreshBind");
static_assert(sizeof(W_Bind_C_RefreshBind) == 0x0000B0, "Wrong size on W_Bind_C_RefreshBind");
static_assert(offsetof(W_Bind_C_RefreshBind, Key) == 0x000000, "Member 'W_Bind_C_RefreshBind::Key' has a wrong offset!");
static_assert(offsetof(W_Bind_C_RefreshBind, K2Node_MakeStruct_InputChord) == 0x000090, "Member 'W_Bind_C_RefreshBind::K2Node_MakeStruct_InputChord' has a wrong offset!");

}

