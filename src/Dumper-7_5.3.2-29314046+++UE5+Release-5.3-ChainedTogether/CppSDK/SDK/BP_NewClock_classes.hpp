#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NewClock

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NewClock.BP_NewClock_C
// 0x0090 (0x0328 - 0x0298)
class ABP_NewClock_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UC_VinceSync_C*                         C_VinceSync1;                                      // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UC_VinceSync_C*                         C_VinceSync;                                       // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxLeftPetiteAiguille;                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxRightPetiteAiguille;                            // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UC_TickOptimizer_C*                     C_TickOptimizer;                                   // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxLeftGrandeAiguille;                             // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxRightGrandeAiguille;                            // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GrandeAiguille;                                    // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PetiteAiguille;                                    // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ClockBorder;                                       // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        TurnTargetGrandeAiguille;                          // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TurnTargetPetiteAiguille;                          // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SmoothedTurnGrandeAiguille;                        // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SmoothedTurnPetiteAiguille;                        // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CadranMat;                                         // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ACloudElevator_BP_C*                    CloudElevator;                                     // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_NewClock(int32 EntryPoint);
	bool IsSomeoneInside(TArray<class UBoxComponent*>& Boxes);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SetCadranTexture(class UTexture* Value);
	void UpdateAiguilleRotations();
	void UpdateCadran();
	void UpdateTurn(bool Param_GrandeAiguille, double* TurnRate);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NewClock_C">();
	}
	static class ABP_NewClock_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NewClock_C>();
	}
};
static_assert(alignof(ABP_NewClock_C) == 0x000008, "Wrong alignment on ABP_NewClock_C");
static_assert(sizeof(ABP_NewClock_C) == 0x000328, "Wrong size on ABP_NewClock_C");
static_assert(offsetof(ABP_NewClock_C, UberGraphFrame) == 0x000298, "Member 'ABP_NewClock_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_NewClock_C, C_VinceSync1) == 0x0002A0, "Member 'ABP_NewClock_C::C_VinceSync1' has a wrong offset!");
static_assert(offsetof(ABP_NewClock_C, C_VinceSync) == 0x0002A8, "Member 'ABP_NewClock_C::C_VinceSync' has a wrong offset!");
static_assert(offsetof(ABP_NewClock_C, BoxLeftPetiteAiguille) == 0x0002B0, "Member 'ABP_NewClock_C::BoxLeftPetiteAiguille' has a wrong offset!");
static_assert(offsetof(ABP_NewClock_C, BoxRightPetiteAiguille) == 0x0002B8, "Member 'ABP_NewClock_C::BoxRightPetiteAiguille' has a wrong offset!");
static_assert(offsetof(ABP_NewClock_C, C_TickOptimizer) == 0x0002C0, "Member 'ABP_NewClock_C::C_TickOptimizer' has a wrong offset!");
static_assert(offsetof(ABP_NewClock_C, BoxLeftGrandeAiguille) == 0x0002C8, "Member 'ABP_NewClock_C::BoxLeftGrandeAiguille' has a wrong offset!");
static_assert(offsetof(ABP_NewClock_C, BoxRightGrandeAiguille) == 0x0002D0, "Member 'ABP_NewClock_C::BoxRightGrandeAiguille' has a wrong offset!");
static_assert(offsetof(ABP_NewClock_C, GrandeAiguille) == 0x0002D8, "Member 'ABP_NewClock_C::GrandeAiguille' has a wrong offset!");
static_assert(offsetof(ABP_NewClock_C, PetiteAiguille) == 0x0002E0, "Member 'ABP_NewClock_C::PetiteAiguille' has a wrong offset!");
static_assert(offsetof(ABP_NewClock_C, ClockBorder) == 0x0002E8, "Member 'ABP_NewClock_C::ClockBorder' has a wrong offset!");
static_assert(offsetof(ABP_NewClock_C, DefaultSceneRoot) == 0x0002F0, "Member 'ABP_NewClock_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_NewClock_C, TurnTargetGrandeAiguille) == 0x0002F8, "Member 'ABP_NewClock_C::TurnTargetGrandeAiguille' has a wrong offset!");
static_assert(offsetof(ABP_NewClock_C, TurnTargetPetiteAiguille) == 0x000300, "Member 'ABP_NewClock_C::TurnTargetPetiteAiguille' has a wrong offset!");
static_assert(offsetof(ABP_NewClock_C, SmoothedTurnGrandeAiguille) == 0x000308, "Member 'ABP_NewClock_C::SmoothedTurnGrandeAiguille' has a wrong offset!");
static_assert(offsetof(ABP_NewClock_C, SmoothedTurnPetiteAiguille) == 0x000310, "Member 'ABP_NewClock_C::SmoothedTurnPetiteAiguille' has a wrong offset!");
static_assert(offsetof(ABP_NewClock_C, CadranMat) == 0x000318, "Member 'ABP_NewClock_C::CadranMat' has a wrong offset!");
static_assert(offsetof(ABP_NewClock_C, CloudElevator) == 0x000320, "Member 'ABP_NewClock_C::CloudElevator' has a wrong offset!");

}

