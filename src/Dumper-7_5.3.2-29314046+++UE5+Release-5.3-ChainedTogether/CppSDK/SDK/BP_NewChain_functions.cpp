#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NewChain

#include "Basic.hpp"

#include "BP_NewChain_classes.hpp"
#include "BP_NewChain_parameters.hpp"


namespace SDK
{

// Function BP_NewChain.BP_NewChain_C.AutoDestroyChain
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NewChain_C::AutoDestroyChain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "AutoDestroyChain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewChain.BP_NewChain_C.Bounce
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::Bounce(const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "Bounce");

	Params::BP_NewChain_C_Bounce Parms{};

	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewChain.BP_NewChain_C.ChangeMaillonMasses
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  MassInKg                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Param_LinearDamping                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Param_AngularDamping                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::ChangeMaillonMasses(double MassInKg, double Param_LinearDamping, double Param_AngularDamping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "ChangeMaillonMasses");

	Params::BP_NewChain_C_ChangeMaillonMasses Parms{};

	Parms.MassInKg = MassInKg;
	Parms.Param_LinearDamping = Param_LinearDamping;
	Parms.Param_AngularDamping = Param_AngularDamping;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewChain.BP_NewChain_C.Check Chain Force
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::Check_Chain_Force(double* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "Check Chain Force");

	Params::BP_NewChain_C_Check_Chain_Force Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function BP_NewChain.BP_NewChain_C.CustomEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_NewChain_C::CustomEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "CustomEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewChain.BP_NewChain_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)

void ABP_NewChain_C::CustomEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "CustomEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewChain.BP_NewChain_C.DepenatreAll
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECollisionResponse                      NewResponse                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::DepenatreAll(ECollisionResponse NewResponse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "DepenatreAll");

	Params::BP_NewChain_C_DepenatreAll Parms{};

	Parms.NewResponse = NewResponse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewChain.BP_NewChain_C.DetectPenetration
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UPrimitiveComponent*>      CompsArray                                             (Parm, OutParm, ContainsInstancedReference)

bool ABP_NewChain_C::DetectPenetration(TArray<class UPrimitiveComponent*>* CompsArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "DetectPenetration");

	Params::BP_NewChain_C_DetectPenetration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CompsArray != nullptr)
		*CompsArray = std::move(Parms.CompsArray);

	return Parms.ReturnValue;
}


// Function BP_NewChain.BP_NewChain_C.DissolveChain
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PlaySound                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::DissolveChain(double PlayRate, bool PlaySound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "DissolveChain");

	Params::BP_NewChain_C_DissolveChain Parms{};

	Parms.PlayRate = PlayRate;
	Parms.PlaySound = PlaySound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewChain.BP_NewChain_C.ExecuteUbergraph_BP_NewChain
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::ExecuteUbergraph_BP_NewChain(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "ExecuteUbergraph_BP_NewChain");

	Params::BP_NewChain_C_ExecuteUbergraph_BP_NewChain Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewChain.BP_NewChain_C.Get Cosmetics Maillons
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UStaticMeshComponent*>     Maillons                                               (Parm, OutParm, ContainsInstancedReference)

void ABP_NewChain_C::Get_Cosmetics_Maillons(TArray<class UStaticMeshComponent*>* Maillons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "Get Cosmetics Maillons");

	Params::BP_NewChain_C_Get_Cosmetics_Maillons Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Maillons != nullptr)
		*Maillons = std::move(Parms.Maillons);
}


// Function BP_NewChain.BP_NewChain_C.GetAttachedChars
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   AttachedChars                                          (Parm, OutParm)

void ABP_NewChain_C::GetAttachedChars(TArray<class AActor*>* AttachedChars)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "GetAttachedChars");

	Params::BP_NewChain_C_GetAttachedChars Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttachedChars != nullptr)
		*AttachedChars = std::move(Parms.AttachedChars);
}


// Function BP_NewChain.BP_NewChain_C.GetCurrentChainDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  CurrentChainDistance                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::GetCurrentChainDistance(double* CurrentChainDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "GetCurrentChainDistance");

	Params::BP_NewChain_C_GetCurrentChainDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentChainDistance != nullptr)
		*CurrentChainDistance = Parms.CurrentChainDistance;
}


// Function BP_NewChain.BP_NewChain_C.GetSnapTips
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SnapTips                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::GetSnapTips(bool* SnapTips)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "GetSnapTips");

	Params::BP_NewChain_C_GetSnapTips Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SnapTips != nullptr)
		*SnapTips = Parms.SnapTips;
}


// Function BP_NewChain.BP_NewChain_C.GetTension
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Float                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::GetTension(double* Float)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "GetTension");

	Params::BP_NewChain_C_GetTension Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Float != nullptr)
		*Float = Parms.Float;
}


// Function BP_NewChain.BP_NewChain_C.Impulse Maillons
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Impulse                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::Impulse_Maillons(const struct FVector& Impulse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "Impulse Maillons");

	Params::BP_NewChain_C_Impulse_Maillons Parms{};

	Parms.Impulse = std::move(Impulse);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewChain.BP_NewChain_C.ImpulseOnMaillons
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Impulse                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::ImpulseOnMaillons(const struct FVector& Impulse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "ImpulseOnMaillons");

	Params::BP_NewChain_C_ImpulseOnMaillons Parms{};

	Parms.Impulse = std::move(Impulse);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewChain.BP_NewChain_C.IsInDepenetrationMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_NewChain_C::IsInDepenetrationMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "IsInDepenetrationMode");

	Params::BP_NewChain_C_IsInDepenetrationMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_NewChain.BP_NewChain_C.Jump
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::Jump(class AActor* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "Jump");

	Params::BP_NewChain_C_Jump Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewChain.BP_NewChain_C.JumpTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_NewChain_C::JumpTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "JumpTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewChain.BP_NewChain_C.JumpTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_NewChain_C::JumpTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "JumpTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewChain.BP_NewChain_C.LightenChain
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NewChain_C::LightenChain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "LightenChain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewChain.BP_NewChain_C.Link Players
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UStaticMeshComponent*>     Maillons                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ABP_NewChain_C::Link_Players(TArray<class UStaticMeshComponent*>& Maillons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "Link Players");

	Params::BP_NewChain_C_Link_Players Parms{};

	Parms.Maillons = std::move(Maillons);

	UObject::ProcessEvent(Func, &Parms);

	Maillons = std::move(Parms.Maillons);
}


// Function BP_NewChain.BP_NewChain_C.OnRep_Puller
// (BlueprintCallable, BlueprintEvent)

void ABP_NewChain_C::OnRep_Puller()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "OnRep_Puller");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewChain.BP_NewChain_C.PlaceFirstAndLastMaillon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NewChain_C::PlaceFirstAndLastMaillon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "PlaceFirstAndLastMaillon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewChain.BP_NewChain_C.PullChain
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Puller                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::PullChain(class APawn* Param_Puller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "PullChain");

	Params::BP_NewChain_C_PullChain Parms{};

	Parms.Param_Puller = Param_Puller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewChain.BP_NewChain_C.PullOnChain
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NewChain_C::PullOnChain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "PullOnChain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewChain.BP_NewChain_C.ReactivateChainCollisionOnFreeComps
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UPrimitiveComponent*>      Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ABP_NewChain_C::ReactivateChainCollisionOnFreeComps(TArray<class UPrimitiveComponent*>& Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "ReactivateChainCollisionOnFreeComps");

	Params::BP_NewChain_C_ReactivateChainCollisionOnFreeComps Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function BP_NewChain.BP_NewChain_C.Reattach Cube Socket to Chain
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              CubeSocket                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::Reattach_Cube_Socket_to_Chain(class UPrimitiveComponent* CubeSocket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "Reattach Cube Socket to Chain");

	Params::BP_NewChain_C_Reattach_Cube_Socket_to_Chain Parms{};

	Parms.CubeSocket = CubeSocket;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewChain.BP_NewChain_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_NewChain_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewChain.BP_NewChain_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_NewChain_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewChain.BP_NewChain_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "ReceiveTick");

	Params::BP_NewChain_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewChain.BP_NewChain_C.ReinitAttachment
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewDensity                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  NewChainMass                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_Human                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::ReinitAttachment(int32 NewDensity, double NewChainMass, bool Param_Human)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "ReinitAttachment");

	Params::BP_NewChain_C_ReinitAttachment Parms{};

	Parms.NewDensity = NewDensity;
	Parms.NewChainMass = NewChainMass;
	Parms.Param_Human = Param_Human;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewChain.BP_NewChain_C.RemoveAllComponentsOfClass
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UActorComponent>      ComponentClass                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_NewChain_C::RemoveAllComponentsOfClass(TSubclassOf<class UActorComponent> ComponentClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "RemoveAllComponentsOfClass");

	Params::BP_NewChain_C_RemoveAllComponentsOfClass Parms{};

	Parms.ComponentClass = ComponentClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewChain.BP_NewChain_C.Resync
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NewChain_C::Resync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "Resync");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewChain.BP_NewChain_C.ResyncChainTimeline
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::ResyncChainTimeline(double Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "ResyncChainTimeline");

	Params::BP_NewChain_C_ResyncChainTimeline Parms{};

	Parms.Alpha = Alpha;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewChain.BP_NewChain_C.ResyncDuringTime
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::ResyncDuringTime(double Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "ResyncDuringTime");

	Params::BP_NewChain_C_ResyncDuringTime Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewChain.BP_NewChain_C.SetAttachedChar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Char                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::SetAttachedChar(const int32 Param_Index, class AActor* Char)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "SetAttachedChar");

	Params::BP_NewChain_C_SetAttachedChar Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Char = Char;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewChain.BP_NewChain_C.SetMaillonWeight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  NewWeight                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::SetMaillonWeight(double NewWeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "SetMaillonWeight");

	Params::BP_NewChain_C_SetMaillonWeight Parms{};

	Parms.NewWeight = NewWeight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewChain.BP_NewChain_C.SetSnapTips
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SnapTips                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::SetSnapTips(bool SnapTips)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "SetSnapTips");

	Params::BP_NewChain_C_SetSnapTips Parms{};

	Parms.SnapTips = SnapTips;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewChain.BP_NewChain_C.SetTip0Location
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Loc                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::SetTip0Location(const struct FVector& Loc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "SetTip0Location");

	Params::BP_NewChain_C_SetTip0Location Parms{};

	Parms.Loc = std::move(Loc);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewChain.BP_NewChain_C.SetTip1Location
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Loc                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::SetTip1Location(const struct FVector& Loc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "SetTip1Location");

	Params::BP_NewChain_C_SetTip1Location Parms{};

	Parms.Loc = std::move(Loc);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewChain.BP_NewChain_C.SpawnChain
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Chain_Length                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    MaillonVisibility                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UStaticMeshComponent*>     MaillonsMeshes                                         (Parm, OutParm, ContainsInstancedReference)

void ABP_NewChain_C::SpawnChain(int32 Chain_Length, bool MaillonVisibility, TArray<class UStaticMeshComponent*>* MaillonsMeshes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "SpawnChain");

	Params::BP_NewChain_C_SpawnChain Parms{};

	Parms.Chain_Length = Chain_Length;
	Parms.MaillonVisibility = MaillonVisibility;

	UObject::ProcessEvent(Func, &Parms);

	if (MaillonsMeshes != nullptr)
		*MaillonsMeshes = std::move(Parms.MaillonsMeshes);
}


// Function BP_NewChain.BP_NewChain_C.SyncChainPhysics
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NewChain_C::SyncChainPhysics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "SyncChainPhysics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewChain.BP_NewChain_C.Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_NewChain_C::Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewChain.BP_NewChain_C.Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_NewChain_C::Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewChain.BP_NewChain_C.Update Maillon Physic Settings by Distance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewChain_C::Update_Maillon_Physic_Settings_by_Distance(double Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "Update Maillon Physic Settings by Distance");

	Params::BP_NewChain_C_Update_Maillon_Physic_Settings_by_Distance Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewChain.BP_NewChain_C.Update Max Mass Chain
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NewChain_C::Update_Max_Mass_Chain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "Update Max Mass Chain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewChain.BP_NewChain_C.UpdateRepChainLocs
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector>                  Out                                                    (Parm, OutParm)

void ABP_NewChain_C::UpdateRepChainLocs(TArray<struct FVector>* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewChain_C", "UpdateRepChainLocs");

	Params::BP_NewChain_C_UpdateRepChainLocs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}

}

