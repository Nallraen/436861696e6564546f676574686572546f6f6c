#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CustomCar

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_ChoosenChar_structs.hpp"


namespace SDK::Params
{

// Function BP_CustomCar.BP_CustomCar_C.AddImpulseToVehicle
// 0x0018 (0x0018 - 0x0000)
struct BP_CustomCar_C_AddImpulseToVehicle final
{
public:
	struct FVector                                Impulse;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_AddImpulseToVehicle) == 0x000008, "Wrong alignment on BP_CustomCar_C_AddImpulseToVehicle");
static_assert(sizeof(BP_CustomCar_C_AddImpulseToVehicle) == 0x000018, "Wrong size on BP_CustomCar_C_AddImpulseToVehicle");
static_assert(offsetof(BP_CustomCar_C_AddImpulseToVehicle, Impulse) == 0x000000, "Member 'BP_CustomCar_C_AddImpulseToVehicle::Impulse' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.AdditionalGravity
// 0x0050 (0x0050 - 0x0000)
struct BP_CustomCar_C_AdditionalGravity final
{
public:
	bool                                          CallFunc_IsDriverEmpty_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3509[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_AdditionalGravity) == 0x000008, "Wrong alignment on BP_CustomCar_C_AdditionalGravity");
static_assert(sizeof(BP_CustomCar_C_AdditionalGravity) == 0x000050, "Wrong size on BP_CustomCar_C_AdditionalGravity");
static_assert(offsetof(BP_CustomCar_C_AdditionalGravity, CallFunc_IsDriverEmpty_ReturnValue) == 0x000000, "Member 'BP_CustomCar_C_AdditionalGravity::CallFunc_IsDriverEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AdditionalGravity, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000001, "Member 'BP_CustomCar_C_AdditionalGravity::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AdditionalGravity, CallFunc_GetUpVector_ReturnValue) == 0x000008, "Member 'BP_CustomCar_C_AdditionalGravity::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AdditionalGravity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000020, "Member 'BP_CustomCar_C_AdditionalGravity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AdditionalGravity, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'BP_CustomCar_C_AdditionalGravity::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.AddPassengerCloth
// 0x00D0 (0x00D0 - 0x0000)
struct BP_CustomCar_C_AddPassengerCloth final
{
public:
	class USkeletalMesh*                          NewMesh;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CustomMat;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_350A[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Material;                                          // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          NewMeshLocal;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 NewClothLocal;                                     // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMeshLocal;                                 // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_350B[0x8];                                     // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0050(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_AddComponent_ReturnValue;                 // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_AddPassengerCloth) == 0x000010, "Wrong alignment on BP_CustomCar_C_AddPassengerCloth");
static_assert(sizeof(BP_CustomCar_C_AddPassengerCloth) == 0x0000D0, "Wrong size on BP_CustomCar_C_AddPassengerCloth");
static_assert(offsetof(BP_CustomCar_C_AddPassengerCloth, NewMesh) == 0x000000, "Member 'BP_CustomCar_C_AddPassengerCloth::NewMesh' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AddPassengerCloth, Color) == 0x000008, "Member 'BP_CustomCar_C_AddPassengerCloth::Color' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AddPassengerCloth, CustomMat) == 0x000018, "Member 'BP_CustomCar_C_AddPassengerCloth::CustomMat' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AddPassengerCloth, SkeletalMesh) == 0x000020, "Member 'BP_CustomCar_C_AddPassengerCloth::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AddPassengerCloth, Material) == 0x000028, "Member 'BP_CustomCar_C_AddPassengerCloth::Material' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AddPassengerCloth, NewMeshLocal) == 0x000030, "Member 'BP_CustomCar_C_AddPassengerCloth::NewMeshLocal' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AddPassengerCloth, NewClothLocal) == 0x000038, "Member 'BP_CustomCar_C_AddPassengerCloth::NewClothLocal' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AddPassengerCloth, SkeletalMeshLocal) == 0x000040, "Member 'BP_CustomCar_C_AddPassengerCloth::SkeletalMeshLocal' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AddPassengerCloth, CallFunc_MakeTransform_ReturnValue) == 0x000050, "Member 'BP_CustomCar_C_AddPassengerCloth::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AddPassengerCloth, CallFunc_AddComponent_ReturnValue) == 0x0000B0, "Member 'BP_CustomCar_C_AddPassengerCloth::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AddPassengerCloth, CallFunc_GetMaterial_ReturnValue) == 0x0000B8, "Member 'BP_CustomCar_C_AddPassengerCloth::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AddPassengerCloth, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000C0, "Member 'BP_CustomCar_C_AddPassengerCloth::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AddPassengerCloth, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000C8, "Member 'BP_CustomCar_C_AddPassengerCloth::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.AutoFlipCar
// 0x0288 (0x0288 - 0x0000)
struct BP_CustomCar_C_AutoFlipCar final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	EDrawDebugTrace                               CallFunc_TraceVisibility_Result;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDriverEmpty_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_350C[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0050(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_350D[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_350E[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0198(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_AutoFlipCar) == 0x000008, "Wrong alignment on BP_CustomCar_C_AutoFlipCar");
static_assert(sizeof(BP_CustomCar_C_AutoFlipCar) == 0x000288, "Wrong size on BP_CustomCar_C_AutoFlipCar");
static_assert(offsetof(BP_CustomCar_C_AutoFlipCar, Temp_object_Variable) == 0x000000, "Member 'BP_CustomCar_C_AutoFlipCar::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AutoFlipCar, CallFunc_TraceVisibility_Result) == 0x000010, "Member 'BP_CustomCar_C_AutoFlipCar::CallFunc_TraceVisibility_Result' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AutoFlipCar, CallFunc_IsDriverEmpty_ReturnValue) == 0x000011, "Member 'BP_CustomCar_C_AutoFlipCar::CallFunc_IsDriverEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AutoFlipCar, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_CustomCar_C_AutoFlipCar::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AutoFlipCar, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'BP_CustomCar_C_AutoFlipCar::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AutoFlipCar, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000048, "Member 'BP_CustomCar_C_AutoFlipCar::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AutoFlipCar, CallFunc_SphereTraceSingle_OutHit) == 0x000050, "Member 'BP_CustomCar_C_AutoFlipCar::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AutoFlipCar, CallFunc_SphereTraceSingle_ReturnValue) == 0x000138, "Member 'BP_CustomCar_C_AutoFlipCar::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AutoFlipCar, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000140, "Member 'BP_CustomCar_C_AutoFlipCar::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AutoFlipCar, CallFunc_BreakRotator_Roll) == 0x000158, "Member 'BP_CustomCar_C_AutoFlipCar::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AutoFlipCar, CallFunc_BreakRotator_Pitch) == 0x00015C, "Member 'BP_CustomCar_C_AutoFlipCar::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AutoFlipCar, CallFunc_BreakRotator_Yaw) == 0x000160, "Member 'BP_CustomCar_C_AutoFlipCar::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AutoFlipCar, CallFunc_MakeRotator_ReturnValue) == 0x000168, "Member 'BP_CustomCar_C_AutoFlipCar::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AutoFlipCar, CallFunc_RInterpTo_ReturnValue) == 0x000180, "Member 'BP_CustomCar_C_AutoFlipCar::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AutoFlipCar, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000198, "Member 'BP_CustomCar_C_AutoFlipCar::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_AutoFlipCar, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x000280, "Member 'BP_CustomCar_C_AutoFlipCar::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.CalculateVelocity
// 0x0068 (0x0068 - 0x0000)
struct BP_CustomCar_C_CalculateVelocity final
{
public:
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_CalculateVelocity) == 0x000008, "Wrong alignment on BP_CustomCar_C_CalculateVelocity");
static_assert(sizeof(BP_CustomCar_C_CalculateVelocity) == 0x000068, "Wrong size on BP_CustomCar_C_CalculateVelocity");
static_assert(offsetof(BP_CustomCar_C_CalculateVelocity, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'BP_CustomCar_C_CalculateVelocity::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CalculateVelocity, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000008, "Member 'BP_CustomCar_C_CalculateVelocity::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CalculateVelocity, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'BP_CustomCar_C_CalculateVelocity::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CalculateVelocity, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000038, "Member 'BP_CustomCar_C_CalculateVelocity::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CalculateVelocity, CallFunc_Divide_VectorVector_ReturnValue) == 0x000050, "Member 'BP_CustomCar_C_CalculateVelocity::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.CanBeUsed
// 0x0002 (0x0002 - 0x0000)
struct BP_CustomCar_C_CanBeUsed final
{
public:
	bool                                          Param_CanBeUsed;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDriverEmpty_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_CanBeUsed) == 0x000001, "Wrong alignment on BP_CustomCar_C_CanBeUsed");
static_assert(sizeof(BP_CustomCar_C_CanBeUsed) == 0x000002, "Wrong size on BP_CustomCar_C_CanBeUsed");
static_assert(offsetof(BP_CustomCar_C_CanBeUsed, Param_CanBeUsed) == 0x000000, "Member 'BP_CustomCar_C_CanBeUsed::Param_CanBeUsed' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CanBeUsed, CallFunc_IsDriverEmpty_ReturnValue) == 0x000001, "Member 'BP_CustomCar_C_CanBeUsed::CallFunc_IsDriverEmpty_ReturnValue' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.CheckUnderLava
// 0x00C8 (0x00C8 - 0x0000)
struct BP_CustomCar_C_CheckUnderLava final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_350F[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3510[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3511[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Lava_C*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0088(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3512[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Lava_C*                             CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Gamestate_C>      K2Node_DynamicCast_AsBPI_Gamestate;                // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLaveMode_Lava;                         // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_CheckUnderLava) == 0x000008, "Wrong alignment on BP_CustomCar_C_CheckUnderLava");
static_assert(sizeof(BP_CustomCar_C_CheckUnderLava) == 0x0000C8, "Wrong size on BP_CustomCar_C_CheckUnderLava");
static_assert(offsetof(BP_CustomCar_C_CheckUnderLava, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_CustomCar_C_CheckUnderLava::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CheckUnderLava, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_CustomCar_C_CheckUnderLava::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CheckUnderLava, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'BP_CustomCar_C_CheckUnderLava::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CheckUnderLava, K2Node_DynamicCast_AsPlayer_Controller) == 0x000010, "Member 'BP_CustomCar_C_CheckUnderLava::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CheckUnderLava, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CustomCar_C_CheckUnderLava::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CheckUnderLava, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_CustomCar_C_CheckUnderLava::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CheckUnderLava, CallFunc_BreakVector_X) == 0x000038, "Member 'BP_CustomCar_C_CheckUnderLava::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CheckUnderLava, CallFunc_BreakVector_Y) == 0x000040, "Member 'BP_CustomCar_C_CheckUnderLava::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CheckUnderLava, CallFunc_BreakVector_Z) == 0x000048, "Member 'BP_CustomCar_C_CheckUnderLava::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CheckUnderLava, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'BP_CustomCar_C_CheckUnderLava::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CheckUnderLava, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000058, "Member 'BP_CustomCar_C_CheckUnderLava::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CheckUnderLava, CallFunc_BreakVector_X_1) == 0x000070, "Member 'BP_CustomCar_C_CheckUnderLava::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CheckUnderLava, CallFunc_BreakVector_Y_1) == 0x000078, "Member 'BP_CustomCar_C_CheckUnderLava::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CheckUnderLava, CallFunc_BreakVector_Z_1) == 0x000080, "Member 'BP_CustomCar_C_CheckUnderLava::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CheckUnderLava, CallFunc_GetAllActorsOfClass_OutActors) == 0x000088, "Member 'BP_CustomCar_C_CheckUnderLava::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CheckUnderLava, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_CustomCar_C_CheckUnderLava::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CheckUnderLava, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_CustomCar_C_CheckUnderLava::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CheckUnderLava, CallFunc_GetGameState_ReturnValue) == 0x0000A8, "Member 'BP_CustomCar_C_CheckUnderLava::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CheckUnderLava, K2Node_DynamicCast_AsBPI_Gamestate) == 0x0000B0, "Member 'BP_CustomCar_C_CheckUnderLava::K2Node_DynamicCast_AsBPI_Gamestate' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CheckUnderLava, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'BP_CustomCar_C_CheckUnderLava::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_CheckUnderLava, CallFunc_GetLaveMode_Lava) == 0x0000C1, "Member 'BP_CustomCar_C_CheckUnderLava::CallFunc_GetLaveMode_Lava' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.Constraint
// 0x0018 (0x0018 - 0x0000)
struct BP_CustomCar_C_Constraint final
{
public:
	double                                        UrgencyForce;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDistance;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LocalDistance;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_Constraint) == 0x000008, "Wrong alignment on BP_CustomCar_C_Constraint");
static_assert(sizeof(BP_CustomCar_C_Constraint) == 0x000018, "Wrong size on BP_CustomCar_C_Constraint");
static_assert(offsetof(BP_CustomCar_C_Constraint, UrgencyForce) == 0x000000, "Member 'BP_CustomCar_C_Constraint::UrgencyForce' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Constraint, MaxDistance) == 0x000008, "Member 'BP_CustomCar_C_Constraint::MaxDistance' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Constraint, LocalDistance) == 0x000010, "Member 'BP_CustomCar_C_Constraint::LocalDistance' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.Detected
// 0x0010 (0x0010 - 0x0000)
struct BP_CustomCar_C_Detected final
{
public:
	bool                                          Param_Detected;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3513[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      PC;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_Detected) == 0x000008, "Wrong alignment on BP_CustomCar_C_Detected");
static_assert(sizeof(BP_CustomCar_C_Detected) == 0x000010, "Wrong size on BP_CustomCar_C_Detected");
static_assert(offsetof(BP_CustomCar_C_Detected, Param_Detected) == 0x000000, "Member 'BP_CustomCar_C_Detected::Param_Detected' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Detected, PC) == 0x000008, "Member 'BP_CustomCar_C_Detected::PC' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.EventDriveForwardGP
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomCar_C_EventDriveForwardGP final
{
public:
	double                                        Axis;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_EventDriveForwardGP) == 0x000008, "Wrong alignment on BP_CustomCar_C_EventDriveForwardGP");
static_assert(sizeof(BP_CustomCar_C_EventDriveForwardGP) == 0x000008, "Wrong size on BP_CustomCar_C_EventDriveForwardGP");
static_assert(offsetof(BP_CustomCar_C_EventDriveForwardGP, Axis) == 0x000000, "Member 'BP_CustomCar_C_EventDriveForwardGP::Axis' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.ExecuteUbergraph_BP_CustomCar
// 0x06C0 (0x06C0 - 0x0000)
struct BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3514[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0008(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3515[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CarGate_C>        K2Node_DynamicCast_AsBPI_Car_Gate;                 // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3516[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x010C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x011C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3517[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0130(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3518[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ControllerWithSettings_C> K2Node_DynamicCast_AsBPI_Controller_with_Settings; // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3519[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerOnGamepad_Gamepad;                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351A[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ControllerWithSettings_C> K2Node_DynamicCast_AsBPI_Controller_with_Settings_1; // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerOnGamepad_Gamepad_1;              // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Sprint;                               // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351B[0x3];                                     // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Impulse;                              // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Hover_Grounded;                           // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Detected;                             // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351C[0x2];                                     // 0x01AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_PC;                                   // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_Controller;                           // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_ControlledActor;                      // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character;                // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ChoosenChar                                 CallFunc_GetCharacter_Character;                   // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351D[0x5];                                     // 0x01DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Axis_3;                               // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Axis_2;                               // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstanceWithSave_C> K2Node_DynamicCast_AsBPI_Game_Instance_with_Save;  // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351E[0x7];                                     // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameInstanceWithSave_C> K2Node_DynamicCast_AsBPI_Game_Instance_with_Save_1; // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCameraSettings_InvertX;                // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCameraSettings_InvertY;                // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351F[0x5];                                     // 0x0233(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCameraSettings_X_Sensitivity;          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCameraSettings_Y_Sensitivity;          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCameraSettings_InvertX_1;              // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCameraSettings_InvertY_1;              // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3520[0x6];                                     // 0x024A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCameraSettings_X_Sensitivity_1;        // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCameraSettings_Y_Sensitivity_1;        // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3521[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CarGate_C>        K2Node_DynamicCast_AsBPI_Car_Gate_1;               // 0x0298(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3522[0x7];                                     // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x02B0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Vehicle_C>        K2Node_DynamicCast_AsBPI_Vehicle;                  // 0x0310(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3523[0x7];                                     // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Vehicle_C>        K2Node_DynamicCast_AsBPI_Vehicle_1;                // 0x0328(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3524[0x7];                                     // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Axis_4;                         // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Axis_3;                         // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3525[0x7];                                     // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Axis_2;                         // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Axis_1;                         // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x036A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3526[0x5];                                     // 0x036B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_NewTransform;                   // 0x0370(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_NewController;                        // 0x03D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3527[0x7];                                     // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3528[0x7];                                     // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller_1;          // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3529[0x7];                                     // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0410(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352A[0x4];                                     // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352B[0x7];                                     // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_MoveForwardAxis;                // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352C[0x7];                                     // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Axis_1;                               // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Axis;                                 // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ChoosenChar                                 K2Node_CustomEvent_Character_2;                    // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ChoosenChar                                 K2Node_CustomEvent_Character_1;                    // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ChoosenChar                                 K2Node_CustomEvent_Character;                      // 0x047A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352D[0x5];                                     // 0x047B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0480(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGS_Game_C*                             K2Node_DynamicCast_AsGS_Game;                      // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352E[0x7];                                     // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_VehicleCamera_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x0498(0x0010)(ReferenceParm)
	class ABP_VehicleCamera_C*                    CallFunc_Array_Get_Item;                           // 0x04A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352F[0x4];                                     // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x04F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3530[0x4];                                     // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0518(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0530(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3531[0x8];                                     // 0x0548(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0550(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x05B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_RescuePoint_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x05B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x05C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDrive_AnimBP_C*                        K2Node_DynamicCast_AsDrive_Anim_BP;                // 0x05C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3532[0x7];                                     // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Axis;                           // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x05E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3533[0x6];                                     // 0x05E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_3;              // 0x05E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3534[0x7];                                     // 0x05F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller_2;          // 0x05F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3535[0x7];                                     // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_4;              // 0x0608(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLocalMultiplayer_ReturnValue;          // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3536[0x7];                                     // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller_3;          // 0x0618(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3537[0x7];                                     // 0x0621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_CarUI_C*                             CallFunc_Create_ReturnValue;                       // 0x0628(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_CustomEvent_RepTransform;                   // 0x0630(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_ServerVelocity;                 // 0x0690(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToPlayerScreen_ReturnValue;            // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3538[0x3];                                     // 0x06A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_AddControllerYawInput_Val_ImplicitCast;   // 0x06AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddControllerPitchInput_Val_ImplicitCast; // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar) == 0x000010, "Wrong alignment on BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar");
static_assert(sizeof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar) == 0x0006C0, "Wrong size on BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, EntryPoint) == 0x000000, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000008, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000F0, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_AsBPI_Car_Gate) == 0x0000F8, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_AsBPI_Car_Gate' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_CreateDelegate_OutputDelegate) == 0x00010C, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_MakeStruct_Margin) == 0x00011C, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000130, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, Temp_int_Loop_Counter_Variable) == 0x000138, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_Subtract_IntInt_ReturnValue) == 0x00013C, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000140, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, Temp_int_Array_Index_Variable) == 0x000144, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GetController_ReturnValue) == 0x000148, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_AsBPI_Controller_with_Settings) == 0x000150, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_AsBPI_Controller_with_Settings' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_bSuccess_1) == 0x000160, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GetController_ReturnValue_1) == 0x000168, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_IsPlayerOnGamepad_Gamepad) == 0x000170, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_IsPlayerOnGamepad_Gamepad' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_AsBPI_Controller_with_Settings_1) == 0x000178, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_AsBPI_Controller_with_Settings_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_bSuccess_2) == 0x000188, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_IsPlayerOnGamepad_Gamepad_1) == 0x000189, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_IsPlayerOnGamepad_Gamepad_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_HasAuthority_ReturnValue) == 0x00018A, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_HasAuthority_ReturnValue_1) == 0x00018B, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_Event_Sprint) == 0x00018C, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_Event_Sprint' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_Event_Impulse) == 0x000190, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_Event_Impulse' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_Event_DeltaSeconds) == 0x0001A8, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_Hover_Grounded) == 0x0001AC, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_Hover_Grounded' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_Event_Detected) == 0x0001AD, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_Event_Detected' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_Event_PC) == 0x0001B0, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_Event_PC' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_Event_Controller) == 0x0001B8, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_Event_Controller' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_Event_ControlledActor) == 0x0001C0, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_Event_ControlledActor' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_AsBPI_Character) == 0x0001C8, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_AsBPI_Character' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_bSuccess_3) == 0x0001D8, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001D9, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GetCharacter_Character) == 0x0001DA, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GetCharacter_Character' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_Event_Axis_3) == 0x0001E0, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_Event_Axis_3' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_Event_Axis_2) == 0x0001E8, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_Event_Axis_2' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001F0, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GetGameInstance_ReturnValue) == 0x0001F8, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GetGameInstance_ReturnValue_1) == 0x000200, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_AsBPI_Game_Instance_with_Save) == 0x000208, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_AsBPI_Game_Instance_with_Save' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_bSuccess_4) == 0x000218, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_AsBPI_Game_Instance_with_Save_1) == 0x000220, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_AsBPI_Game_Instance_with_Save_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_bSuccess_5) == 0x000230, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GetCameraSettings_InvertX) == 0x000231, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GetCameraSettings_InvertX' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GetCameraSettings_InvertY) == 0x000232, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GetCameraSettings_InvertY' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GetCameraSettings_X_Sensitivity) == 0x000238, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GetCameraSettings_X_Sensitivity' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GetCameraSettings_Y_Sensitivity) == 0x000240, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GetCameraSettings_Y_Sensitivity' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GetCameraSettings_InvertX_1) == 0x000248, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GetCameraSettings_InvertX_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GetCameraSettings_InvertY_1) == 0x000249, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GetCameraSettings_InvertY_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GetCameraSettings_X_Sensitivity_1) == 0x000250, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GetCameraSettings_X_Sensitivity_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GetCameraSettings_Y_Sensitivity_1) == 0x000258, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GetCameraSettings_Y_Sensitivity_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000260, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_SelectFloat_ReturnValue) == 0x000268, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000270, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000278, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_SelectFloat_ReturnValue_1) == 0x000280, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000288, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_HasAuthority_ReturnValue_2) == 0x000290, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_AsBPI_Car_Gate_1) == 0x000298, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_AsBPI_Car_Gate_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_bSuccess_6) == 0x0002A8, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GetTransform_ReturnValue) == 0x0002B0, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_AsBPI_Vehicle) == 0x000310, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_AsBPI_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_bSuccess_7) == 0x000320, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_AsBPI_Vehicle_1) == 0x000328, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_AsBPI_Vehicle_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_bSuccess_8) == 0x000338, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_CustomEvent_Axis_4) == 0x000340, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_CustomEvent_Axis_4' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_CustomEvent_Axis_3) == 0x000348, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_CustomEvent_Axis_3' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_IsLocallyControlled_ReturnValue) == 0x000350, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_CustomEvent_Axis_2) == 0x000358, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_CustomEvent_Axis_2' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_CustomEvent_Axis_1) == 0x000360, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_CustomEvent_Axis_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000368, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_HasAuthority_ReturnValue_3) == 0x000369, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_IsServer_ReturnValue) == 0x00036A, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_CustomEvent_NewTransform) == 0x000370, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_CustomEvent_NewTransform' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GetController_ReturnValue_2) == 0x0003D0, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_Event_NewController) == 0x0003D8, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_IsValid_ReturnValue_1) == 0x0003E0, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_AsPlayer_Controller) == 0x0003E8, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_bSuccess_9) == 0x0003F0, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_AsPlayer_Controller_1) == 0x0003F8, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_AsPlayer_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_bSuccess_10) == 0x000400, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GetPlayerController_ReturnValue) == 0x000408, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000410, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_BreakRotator_Roll) == 0x000428, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_BreakRotator_Pitch) == 0x00042C, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_BreakRotator_Yaw) == 0x000430, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_MakeRotator_ReturnValue) == 0x000438, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, Temp_bool_Has_Been_Initd_Variable) == 0x000450, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_CustomEvent_MoveForwardAxis) == 0x000458, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_CustomEvent_MoveForwardAxis' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000460, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_Event_Axis_1) == 0x000468, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_Event_Axis_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_Event_Axis) == 0x000470, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_Event_Axis' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_CustomEvent_Character_2) == 0x000478, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_CustomEvent_Character_2' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_CustomEvent_Character_1) == 0x000479, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_CustomEvent_Character_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_CustomEvent_Character) == 0x00047A, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GetGameState_ReturnValue) == 0x000480, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_AsGS_Game) == 0x000488, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_AsGS_Game' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_bSuccess_11) == 0x000490, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GetAllActorsOfClass_OutActors) == 0x000498, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_Array_Get_Item) == 0x0004A8, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_Array_Length_ReturnValue) == 0x0004B0, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0004B4, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0004B8, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_Max_ReturnValue) == 0x0004D0, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x0004D8, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_MakeVector_ReturnValue) == 0x0004F0, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_BreakRotator_Roll_1) == 0x000508, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_BreakRotator_Pitch_1) == 0x00050C, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_BreakRotator_Yaw_1) == 0x000510, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_Add_VectorVector_ReturnValue) == 0x000518, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_MakeRotator_ReturnValue_1) == 0x000530, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_MakeTransform_ReturnValue) == 0x000550, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0005B0, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_FinishSpawningActor_ReturnValue) == 0x0005B8, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GetAnimInstance_ReturnValue) == 0x0005C0, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_AsDrive_Anim_BP) == 0x0005C8, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_AsDrive_Anim_BP' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_bSuccess_12) == 0x0005D0, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_CustomEvent_Axis) == 0x0005D8, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_CustomEvent_Axis' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, Temp_bool_IsClosed_Variable) == 0x0005E0, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_IsServer_ReturnValue_1) == 0x0005E1, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GetController_ReturnValue_3) == 0x0005E8, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GetController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0005F0, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_AsPlayer_Controller_2) == 0x0005F8, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_AsPlayer_Controller_2' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_bSuccess_13) == 0x000600, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GetController_ReturnValue_4) == 0x000608, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GetController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_GetLocalMultiplayer_ReturnValue) == 0x000610, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_GetLocalMultiplayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_AsPlayer_Controller_3) == 0x000618, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_AsPlayer_Controller_3' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_DynamicCast_bSuccess_14) == 0x000620, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_Create_ReturnValue) == 0x000628, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_CustomEvent_RepTransform) == 0x000630, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_CustomEvent_RepTransform' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, K2Node_CustomEvent_ServerVelocity) == 0x000690, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::K2Node_CustomEvent_ServerVelocity' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_AddToPlayerScreen_ReturnValue) == 0x0006A8, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_AddToPlayerScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_AddControllerYawInput_Val_ImplicitCast) == 0x0006AC, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_AddControllerYawInput_Val_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar, CallFunc_AddControllerPitchInput_Val_ImplicitCast) == 0x0006B0, "Member 'BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar::CallFunc_AddControllerPitchInput_Val_ImplicitCast' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.F_MoveForward
// 0x0070 (0x0070 - 0x0000)
struct BP_CustomCar_C_F_MoveForward final
{
public:
	double                                        Param_MoveForwardAxis;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDriverEmpty_ReturnValue;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3539[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353A[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_F_MoveForward) == 0x000008, "Wrong alignment on BP_CustomCar_C_F_MoveForward");
static_assert(sizeof(BP_CustomCar_C_F_MoveForward) == 0x000070, "Wrong size on BP_CustomCar_C_F_MoveForward");
static_assert(offsetof(BP_CustomCar_C_F_MoveForward, Param_MoveForwardAxis) == 0x000000, "Member 'BP_CustomCar_C_F_MoveForward::Param_MoveForwardAxis' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_F_MoveForward, CallFunc_IsDriverEmpty_ReturnValue) == 0x000008, "Member 'BP_CustomCar_C_F_MoveForward::CallFunc_IsDriverEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_F_MoveForward, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'BP_CustomCar_C_F_MoveForward::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_F_MoveForward, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000018, "Member 'BP_CustomCar_C_F_MoveForward::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_F_MoveForward, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000019, "Member 'BP_CustomCar_C_F_MoveForward::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_F_MoveForward, CallFunc_GetForwardVector_ReturnValue) == 0x000020, "Member 'BP_CustomCar_C_F_MoveForward::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_F_MoveForward, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_CustomCar_C_F_MoveForward::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_F_MoveForward, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'BP_CustomCar_C_F_MoveForward::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_F_MoveForward, CallFunc_SelectFloat_ReturnValue_1) == 0x000048, "Member 'BP_CustomCar_C_F_MoveForward::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_F_MoveForward, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'BP_CustomCar_C_F_MoveForward::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_F_MoveForward, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000058, "Member 'BP_CustomCar_C_F_MoveForward::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.F_MoveRight
// 0x0080 (0x0080 - 0x0000)
struct BP_CustomCar_C_F_MoveRight final
{
public:
	double                                        Param_MoveRightAxis;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353B[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateSteerFromVelocity_NewSteer;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_F_MoveRight) == 0x000008, "Wrong alignment on BP_CustomCar_C_F_MoveRight");
static_assert(sizeof(BP_CustomCar_C_F_MoveRight) == 0x000080, "Wrong size on BP_CustomCar_C_F_MoveRight");
static_assert(offsetof(BP_CustomCar_C_F_MoveRight, Param_MoveRightAxis) == 0x000000, "Member 'BP_CustomCar_C_F_MoveRight::Param_MoveRightAxis' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_F_MoveRight, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000008, "Member 'BP_CustomCar_C_F_MoveRight::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_F_MoveRight, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000009, "Member 'BP_CustomCar_C_F_MoveRight::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_F_MoveRight, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x00000A, "Member 'BP_CustomCar_C_F_MoveRight::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_F_MoveRight, CallFunc_GetForwardVector_ReturnValue) == 0x000010, "Member 'BP_CustomCar_C_F_MoveRight::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_F_MoveRight, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_CustomCar_C_F_MoveRight::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_F_MoveRight, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'BP_CustomCar_C_F_MoveRight::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_F_MoveRight, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000038, "Member 'BP_CustomCar_C_F_MoveRight::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_F_MoveRight, CallFunc_UpdateSteerFromVelocity_NewSteer) == 0x000050, "Member 'BP_CustomCar_C_F_MoveRight::CallFunc_UpdateSteerFromVelocity_NewSteer' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_F_MoveRight, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000058, "Member 'BP_CustomCar_C_F_MoveRight::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_F_MoveRight, CallFunc_SelectFloat_ReturnValue) == 0x000060, "Member 'BP_CustomCar_C_F_MoveRight::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_F_MoveRight, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000068, "Member 'BP_CustomCar_C_F_MoveRight::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.GetArrows
// 0x0020 (0x0020 - 0x0000)
struct BP_CustomCar_C_GetArrows final
{
public:
	TArray<class UArrowComponent*>                Array;                                             // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UArrowComponent*>                K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_CustomCar_C_GetArrows) == 0x000008, "Wrong alignment on BP_CustomCar_C_GetArrows");
static_assert(sizeof(BP_CustomCar_C_GetArrows) == 0x000020, "Wrong size on BP_CustomCar_C_GetArrows");
static_assert(offsetof(BP_CustomCar_C_GetArrows, Array) == 0x000000, "Member 'BP_CustomCar_C_GetArrows::Array' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_GetArrows, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_CustomCar_C_GetArrows::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.GetAttachedComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomCar_C_GetAttachedComponent final
{
public:
	class UPrimitiveComponent*                    Comp;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_GetAttachedComponent) == 0x000008, "Wrong alignment on BP_CustomCar_C_GetAttachedComponent");
static_assert(sizeof(BP_CustomCar_C_GetAttachedComponent) == 0x000008, "Wrong size on BP_CustomCar_C_GetAttachedComponent");
static_assert(offsetof(BP_CustomCar_C_GetAttachedComponent, Comp) == 0x000000, "Member 'BP_CustomCar_C_GetAttachedComponent::Comp' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.GetCosmeticSocket
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomCar_C_GetCosmeticSocket final
{
public:
	class UPrimitiveComponent*                    Comp;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_GetCosmeticSocket) == 0x000008, "Wrong alignment on BP_CustomCar_C_GetCosmeticSocket");
static_assert(sizeof(BP_CustomCar_C_GetCosmeticSocket) == 0x000008, "Wrong size on BP_CustomCar_C_GetCosmeticSocket");
static_assert(offsetof(BP_CustomCar_C_GetCosmeticSocket, Comp) == 0x000000, "Member 'BP_CustomCar_C_GetCosmeticSocket::Comp' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.GetDriverSocket
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomCar_C_GetDriverSocket final
{
public:
	class UPrimitiveComponent*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_GetDriverSocket) == 0x000008, "Wrong alignment on BP_CustomCar_C_GetDriverSocket");
static_assert(sizeof(BP_CustomCar_C_GetDriverSocket) == 0x000008, "Wrong size on BP_CustomCar_C_GetDriverSocket");
static_assert(offsetof(BP_CustomCar_C_GetDriverSocket, ReturnValue) == 0x000000, "Member 'BP_CustomCar_C_GetDriverSocket::ReturnValue' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.GetForwardRotation
// 0x0030 (0x0030 - 0x0000)
struct BP_CustomCar_C_GetForwardRotation final
{
public:
	struct FRotator                               Rot;                                               // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CustomCar_C_GetForwardRotation) == 0x000008, "Wrong alignment on BP_CustomCar_C_GetForwardRotation");
static_assert(sizeof(BP_CustomCar_C_GetForwardRotation) == 0x000030, "Wrong size on BP_CustomCar_C_GetForwardRotation");
static_assert(offsetof(BP_CustomCar_C_GetForwardRotation, Rot) == 0x000000, "Member 'BP_CustomCar_C_GetForwardRotation::Rot' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_GetForwardRotation, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000018, "Member 'BP_CustomCar_C_GetForwardRotation::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.GetForwardSpeed
// 0x0040 (0x0040 - 0x0000)
struct BP_CustomCar_C_GetForwardSpeed final
{
public:
	double                                        Param_Speed;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_GetForwardSpeed) == 0x000008, "Wrong alignment on BP_CustomCar_C_GetForwardSpeed");
static_assert(sizeof(BP_CustomCar_C_GetForwardSpeed) == 0x000040, "Wrong size on BP_CustomCar_C_GetForwardSpeed");
static_assert(offsetof(BP_CustomCar_C_GetForwardSpeed, Param_Speed) == 0x000000, "Member 'BP_CustomCar_C_GetForwardSpeed::Param_Speed' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_GetForwardSpeed, CallFunc_GetForwardVector_ReturnValue) == 0x000008, "Member 'BP_CustomCar_C_GetForwardSpeed::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_GetForwardSpeed, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000020, "Member 'BP_CustomCar_C_GetForwardSpeed::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_GetForwardSpeed, CallFunc_Dot_VectorVector_ReturnValue) == 0x000038, "Member 'BP_CustomCar_C_GetForwardSpeed::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.GetRadialVelocityZ
// 0x0038 (0x0038 - 0x0000)
struct BP_CustomCar_C_GetRadialVelocityZ final
{
public:
	double                                        Vel;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue; // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_GetRadialVelocityZ) == 0x000008, "Wrong alignment on BP_CustomCar_C_GetRadialVelocityZ");
static_assert(sizeof(BP_CustomCar_C_GetRadialVelocityZ) == 0x000038, "Wrong size on BP_CustomCar_C_GetRadialVelocityZ");
static_assert(offsetof(BP_CustomCar_C_GetRadialVelocityZ, Vel) == 0x000000, "Member 'BP_CustomCar_C_GetRadialVelocityZ::Vel' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_GetRadialVelocityZ, CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue) == 0x000008, "Member 'BP_CustomCar_C_GetRadialVelocityZ::CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_GetRadialVelocityZ, CallFunc_BreakVector_X) == 0x000020, "Member 'BP_CustomCar_C_GetRadialVelocityZ::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_GetRadialVelocityZ, CallFunc_BreakVector_Y) == 0x000028, "Member 'BP_CustomCar_C_GetRadialVelocityZ::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_GetRadialVelocityZ, CallFunc_BreakVector_Z) == 0x000030, "Member 'BP_CustomCar_C_GetRadialVelocityZ::CallFunc_BreakVector_Z' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.GetRootMesh
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomCar_C_GetRootMesh final
{
public:
	class UPrimitiveComponent*                    Mesh;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_GetRootMesh) == 0x000008, "Wrong alignment on BP_CustomCar_C_GetRootMesh");
static_assert(sizeof(BP_CustomCar_C_GetRootMesh) == 0x000008, "Wrong size on BP_CustomCar_C_GetRootMesh");
static_assert(offsetof(BP_CustomCar_C_GetRootMesh, Mesh) == 0x000000, "Member 'BP_CustomCar_C_GetRootMesh::Mesh' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.HorseGrounded
// 0x0001 (0x0001 - 0x0000)
struct BP_CustomCar_C_HorseGrounded final
{
public:
	bool                                          Param_Grounded;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_HorseGrounded) == 0x000001, "Wrong alignment on BP_CustomCar_C_HorseGrounded");
static_assert(sizeof(BP_CustomCar_C_HorseGrounded) == 0x000001, "Wrong size on BP_CustomCar_C_HorseGrounded");
static_assert(offsetof(BP_CustomCar_C_HorseGrounded, Param_Grounded) == 0x000000, "Member 'BP_CustomCar_C_HorseGrounded::Param_Grounded' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.Hover
// 0x0600 (0x0600 - 0x0000)
struct BP_CustomCar_C_Hover final
{
public:
	bool                                          Param_Grounded;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FrontLocal;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GroundedLocal;                                     // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353C[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   LocalTag;                                          // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353D[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ArrowLoc;                                          // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353E[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue; // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0068(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue_1;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353F[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               CallFunc_TraceVisibility_Result;                   // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               CallFunc_TraceVisibility_Result_1;                 // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3540[0x2];                                     // 0x015E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3541[0x2];                                     // 0x01A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3542[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x01B0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3543[0x5];                                     // 0x01C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0200(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3544[0x1];                                     // 0x02EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3545[0x4];                                     // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0368(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3546[0x4];                                     // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x03C0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x04A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x04AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x04AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3547[0x4];                                     // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x04E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0500(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0518(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0520(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0528(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3548[0x4];                                     // 0x054C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0550(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0568(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0580(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0598(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x05C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x05E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast;         // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast_1;       // 0x05FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_Hover) == 0x000008, "Wrong alignment on BP_CustomCar_C_Hover");
static_assert(sizeof(BP_CustomCar_C_Hover) == 0x000600, "Wrong size on BP_CustomCar_C_Hover");
static_assert(offsetof(BP_CustomCar_C_Hover, Param_Grounded) == 0x000000, "Member 'BP_CustomCar_C_Hover::Param_Grounded' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, FrontLocal) == 0x000001, "Member 'BP_CustomCar_C_Hover::FrontLocal' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, GroundedLocal) == 0x000002, "Member 'BP_CustomCar_C_Hover::GroundedLocal' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, LocalTag) == 0x000004, "Member 'BP_CustomCar_C_Hover::LocalTag' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, ArrowLoc) == 0x000010, "Member 'BP_CustomCar_C_Hover::ArrowLoc' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_CustomCar_C_Hover::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000030, "Member 'BP_CustomCar_C_Hover::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue) == 0x000038, "Member 'BP_CustomCar_C_Hover::CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_VInterpTo_ReturnValue) == 0x000050, "Member 'BP_CustomCar_C_Hover::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, Temp_object_Variable) == 0x000068, "Member 'BP_CustomCar_C_Hover::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000078, "Member 'BP_CustomCar_C_Hover::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000080, "Member 'BP_CustomCar_C_Hover::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_VInterpTo_ReturnValue_1) == 0x000098, "Member 'BP_CustomCar_C_Hover::CallFunc_VInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_Conv_NameToString_ReturnValue) == 0x0000B0, "Member 'BP_CustomCar_C_Hover::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_Contains_ReturnValue) == 0x0000C0, "Member 'BP_CustomCar_C_Hover::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'BP_CustomCar_C_Hover::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_GetUpVector_ReturnValue) == 0x0000D0, "Member 'BP_CustomCar_C_Hover::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'BP_CustomCar_C_Hover::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_GetForwardVector_ReturnValue) == 0x0000F0, "Member 'BP_CustomCar_C_Hover::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_Array_Get_Item_1) == 0x000108, "Member 'BP_CustomCar_C_Hover::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000110, "Member 'BP_CustomCar_C_Hover::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_Add_VectorVector_ReturnValue) == 0x000128, "Member 'BP_CustomCar_C_Hover::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000140, "Member 'BP_CustomCar_C_Hover::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_Array_Length_ReturnValue) == 0x000158, "Member 'BP_CustomCar_C_Hover::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_TraceVisibility_Result) == 0x00015C, "Member 'BP_CustomCar_C_Hover::CallFunc_TraceVisibility_Result' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_TraceVisibility_Result_1) == 0x00015D, "Member 'BP_CustomCar_C_Hover::CallFunc_TraceVisibility_Result_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_SelectFloat_ReturnValue) == 0x000160, "Member 'BP_CustomCar_C_Hover::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_SelectFloat_ReturnValue_1) == 0x000168, "Member 'BP_CustomCar_C_Hover::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000170, "Member 'BP_CustomCar_C_Hover::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000188, "Member 'BP_CustomCar_C_Hover::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, Temp_int_Loop_Counter_Variable) == 0x0001A0, "Member 'BP_CustomCar_C_Hover::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0001A4, "Member 'BP_CustomCar_C_Hover::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_Less_IntInt_ReturnValue) == 0x0001A5, "Member 'BP_CustomCar_C_Hover::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_Add_IntInt_ReturnValue) == 0x0001A8, "Member 'BP_CustomCar_C_Hover::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, Temp_object_Variable_1) == 0x0001B0, "Member 'BP_CustomCar_C_Hover::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0001C0, "Member 'BP_CustomCar_C_Hover::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x0001C1, "Member 'BP_CustomCar_C_Hover::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, K2Node_SwitchName_CmpSuccess) == 0x0001C2, "Member 'BP_CustomCar_C_Hover::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_SelectFloat_ReturnValue_2) == 0x0001C8, "Member 'BP_CustomCar_C_Hover::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0001D0, "Member 'BP_CustomCar_C_Hover::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001E8, "Member 'BP_CustomCar_C_Hover::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_SphereTraceSingle_OutHit) == 0x000200, "Member 'BP_CustomCar_C_Hover::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_SphereTraceSingle_ReturnValue) == 0x0002E8, "Member 'BP_CustomCar_C_Hover::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_bBlockingHit) == 0x0002E9, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002EA, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_Time) == 0x0002EC, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_Distance) == 0x0002F0, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_Location) == 0x0002F8, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_ImpactPoint) == 0x000310, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_Normal) == 0x000328, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_ImpactNormal) == 0x000340, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_PhysMat) == 0x000358, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_HitActor) == 0x000360, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_HitComponent) == 0x000368, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_HitBoneName) == 0x000370, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_BoneName) == 0x000378, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_HitItem) == 0x000380, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_ElementIndex) == 0x000384, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_FaceIndex) == 0x000388, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_TraceStart) == 0x000390, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_TraceEnd) == 0x0003A8, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_LineTraceSingle_OutHit) == 0x0003C0, "Member 'BP_CustomCar_C_Hover::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_LineTraceSingle_ReturnValue) == 0x0004A8, "Member 'BP_CustomCar_C_Hover::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, K2Node_SwitchEnum_CmpSuccess) == 0x0004A9, "Member 'BP_CustomCar_C_Hover::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0004AA, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0004AB, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_Time_1) == 0x0004AC, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_Distance_1) == 0x0004B0, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_Location_1) == 0x0004B8, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0004D0, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_Normal_1) == 0x0004E8, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000500, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_PhysMat_1) == 0x000518, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_HitActor_1) == 0x000520, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_HitComponent_1) == 0x000528, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_HitBoneName_1) == 0x000530, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_BoneName_1) == 0x000538, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_HitItem_1) == 0x000540, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_ElementIndex_1) == 0x000544, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_FaceIndex_1) == 0x000548, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_TraceStart_1) == 0x000550, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_BreakHitResult_TraceEnd_1) == 0x000568, "Member 'BP_CustomCar_C_Hover::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000580, "Member 'BP_CustomCar_C_Hover::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000598, "Member 'BP_CustomCar_C_Hover::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_VSize_ReturnValue) == 0x0005B0, "Member 'BP_CustomCar_C_Hover::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0005B8, "Member 'BP_CustomCar_C_Hover::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_Lerp_ReturnValue) == 0x0005C0, "Member 'BP_CustomCar_C_Hover::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0005C8, "Member 'BP_CustomCar_C_Hover::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x0005E0, "Member 'BP_CustomCar_C_Hover::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_VInterpTo_DeltaTime_ImplicitCast) == 0x0005F8, "Member 'BP_CustomCar_C_Hover::CallFunc_VInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Hover, CallFunc_VInterpTo_DeltaTime_ImplicitCast_1) == 0x0005FC, "Member 'BP_CustomCar_C_Hover::CallFunc_VInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.IsCarosse
// 0x0001 (0x0001 - 0x0000)
struct BP_CustomCar_C_IsCarosse final
{
public:
	bool                                          Param_Carosse;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_IsCarosse) == 0x000001, "Wrong alignment on BP_CustomCar_C_IsCarosse");
static_assert(sizeof(BP_CustomCar_C_IsCarosse) == 0x000001, "Wrong size on BP_CustomCar_C_IsCarosse");
static_assert(offsetof(BP_CustomCar_C_IsCarosse, Param_Carosse) == 0x000000, "Member 'BP_CustomCar_C_IsCarosse::Param_Carosse' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.IsCarVisible
// 0x0002 (0x0002 - 0x0000)
struct BP_CustomCar_C_IsCarVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_IsCarVisible) == 0x000001, "Wrong alignment on BP_CustomCar_C_IsCarVisible");
static_assert(sizeof(BP_CustomCar_C_IsCarVisible) == 0x000002, "Wrong size on BP_CustomCar_C_IsCarVisible");
static_assert(offsetof(BP_CustomCar_C_IsCarVisible, Visible) == 0x000000, "Member 'BP_CustomCar_C_IsCarVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_IsCarVisible, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'BP_CustomCar_C_IsCarVisible::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.IsDriverEmpty
// 0x0002 (0x0002 - 0x0000)
struct BP_CustomCar_C_IsDriverEmpty final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_IsDriverEmpty) == 0x000001, "Wrong alignment on BP_CustomCar_C_IsDriverEmpty");
static_assert(sizeof(BP_CustomCar_C_IsDriverEmpty) == 0x000002, "Wrong size on BP_CustomCar_C_IsDriverEmpty");
static_assert(offsetof(BP_CustomCar_C_IsDriverEmpty, ReturnValue) == 0x000000, "Member 'BP_CustomCar_C_IsDriverEmpty::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_IsDriverEmpty, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_CustomCar_C_IsDriverEmpty::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.IsPossessed
// 0x0001 (0x0001 - 0x0000)
struct BP_CustomCar_C_IsPossessed final
{
public:
	bool                                          Possessed;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_IsPossessed) == 0x000001, "Wrong alignment on BP_CustomCar_C_IsPossessed");
static_assert(sizeof(BP_CustomCar_C_IsPossessed) == 0x000001, "Wrong size on BP_CustomCar_C_IsPossessed");
static_assert(offsetof(BP_CustomCar_C_IsPossessed, Possessed) == 0x000000, "Member 'BP_CustomCar_C_IsPossessed::Possessed' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.LimitVelocity
// 0x0038 (0x0038 - 0x0000)
struct BP_CustomCar_C_LimitVelocity final
{
public:
	double                                        Max;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_LimitVelocity) == 0x000008, "Wrong alignment on BP_CustomCar_C_LimitVelocity");
static_assert(sizeof(BP_CustomCar_C_LimitVelocity) == 0x000038, "Wrong size on BP_CustomCar_C_LimitVelocity");
static_assert(offsetof(BP_CustomCar_C_LimitVelocity, Max) == 0x000000, "Member 'BP_CustomCar_C_LimitVelocity::Max' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_LimitVelocity, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000008, "Member 'BP_CustomCar_C_LimitVelocity::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_LimitVelocity, CallFunc_ClampVectorSize_ReturnValue) == 0x000020, "Member 'BP_CustomCar_C_LimitVelocity::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.LookRight
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomCar_C_LookRight final
{
public:
	double                                        Axis;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_LookRight) == 0x000008, "Wrong alignment on BP_CustomCar_C_LookRight");
static_assert(sizeof(BP_CustomCar_C_LookRight) == 0x000008, "Wrong size on BP_CustomCar_C_LookRight");
static_assert(offsetof(BP_CustomCar_C_LookRight, Axis) == 0x000000, "Member 'BP_CustomCar_C_LookRight::Axis' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.LookUp
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomCar_C_LookUp final
{
public:
	double                                        Axis;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_LookUp) == 0x000008, "Wrong alignment on BP_CustomCar_C_LookUp");
static_assert(sizeof(BP_CustomCar_C_LookUp) == 0x000008, "Wrong size on BP_CustomCar_C_LookUp");
static_assert(offsetof(BP_CustomCar_C_LookUp, Axis) == 0x000000, "Member 'BP_CustomCar_C_LookUp::Axis' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.MoveForward
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomCar_C_MoveForward final
{
public:
	double                                        Axis;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_MoveForward) == 0x000008, "Wrong alignment on BP_CustomCar_C_MoveForward");
static_assert(sizeof(BP_CustomCar_C_MoveForward) == 0x000008, "Wrong size on BP_CustomCar_C_MoveForward");
static_assert(offsetof(BP_CustomCar_C_MoveForward, Axis) == 0x000000, "Member 'BP_CustomCar_C_MoveForward::Axis' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.MoveForwardEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomCar_C_MoveForwardEvent final
{
public:
	double                                        Param_MoveForwardAxis;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_MoveForwardEvent) == 0x000008, "Wrong alignment on BP_CustomCar_C_MoveForwardEvent");
static_assert(sizeof(BP_CustomCar_C_MoveForwardEvent) == 0x000008, "Wrong size on BP_CustomCar_C_MoveForwardEvent");
static_assert(offsetof(BP_CustomCar_C_MoveForwardEvent, Param_MoveForwardAxis) == 0x000000, "Member 'BP_CustomCar_C_MoveForwardEvent::Param_MoveForwardAxis' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.MoveFwdAll
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomCar_C_MoveFwdAll final
{
public:
	double                                        Axis;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_MoveFwdAll) == 0x000008, "Wrong alignment on BP_CustomCar_C_MoveFwdAll");
static_assert(sizeof(BP_CustomCar_C_MoveFwdAll) == 0x000008, "Wrong size on BP_CustomCar_C_MoveFwdAll");
static_assert(offsetof(BP_CustomCar_C_MoveFwdAll, Axis) == 0x000000, "Member 'BP_CustomCar_C_MoveFwdAll::Axis' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.MoveFwdSRV
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomCar_C_MoveFwdSRV final
{
public:
	double                                        Axis;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_MoveFwdSRV) == 0x000008, "Wrong alignment on BP_CustomCar_C_MoveFwdSRV");
static_assert(sizeof(BP_CustomCar_C_MoveFwdSRV) == 0x000008, "Wrong size on BP_CustomCar_C_MoveFwdSRV");
static_assert(offsetof(BP_CustomCar_C_MoveFwdSRV, Axis) == 0x000000, "Member 'BP_CustomCar_C_MoveFwdSRV::Axis' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.MovementReplication
// 0x02A0 (0x02A0 - 0x0000)
struct BP_CustomCar_C_MovementReplication final
{
public:
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0000(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3549[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354A[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x00A0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_TInterpTo_ReturnValue;                    // 0x0100(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0160(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354B[0x7];                                     // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue_1;   // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354C[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TInterpTo_DeltaTime_ImplicitCast;         // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast;         // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_MovementReplication) == 0x000010, "Wrong alignment on BP_CustomCar_C_MovementReplication");
static_assert(sizeof(BP_CustomCar_C_MovementReplication) == 0x0002A0, "Wrong size on BP_CustomCar_C_MovementReplication");
static_assert(offsetof(BP_CustomCar_C_MovementReplication, CallFunc_GetTransform_ReturnValue) == 0x000000, "Member 'BP_CustomCar_C_MovementReplication::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_MovementReplication, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000060, "Member 'BP_CustomCar_C_MovementReplication::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_MovementReplication, CallFunc_IsLocallyControlled_ReturnValue) == 0x000078, "Member 'BP_CustomCar_C_MovementReplication::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_MovementReplication, CallFunc_GetController_ReturnValue) == 0x000080, "Member 'BP_CustomCar_C_MovementReplication::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_MovementReplication, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000088, "Member 'BP_CustomCar_C_MovementReplication::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_MovementReplication, K2Node_DynamicCast_AsPlayer_Controller) == 0x000090, "Member 'BP_CustomCar_C_MovementReplication::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_MovementReplication, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BP_CustomCar_C_MovementReplication::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_MovementReplication, CallFunc_GetTransform_ReturnValue_1) == 0x0000A0, "Member 'BP_CustomCar_C_MovementReplication::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_MovementReplication, CallFunc_TInterpTo_ReturnValue) == 0x000100, "Member 'BP_CustomCar_C_MovementReplication::CallFunc_TInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_MovementReplication, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000160, "Member 'BP_CustomCar_C_MovementReplication::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_MovementReplication, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000248, "Member 'BP_CustomCar_C_MovementReplication::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_MovementReplication, CallFunc_GetPhysicsLinearVelocity_ReturnValue_1) == 0x000250, "Member 'BP_CustomCar_C_MovementReplication::CallFunc_GetPhysicsLinearVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_MovementReplication, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000268, "Member 'BP_CustomCar_C_MovementReplication::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_MovementReplication, CallFunc_HasAuthority_ReturnValue) == 0x000270, "Member 'BP_CustomCar_C_MovementReplication::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_MovementReplication, CallFunc_VInterpTo_ReturnValue) == 0x000278, "Member 'BP_CustomCar_C_MovementReplication::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_MovementReplication, CallFunc_TInterpTo_DeltaTime_ImplicitCast) == 0x000290, "Member 'BP_CustomCar_C_MovementReplication::CallFunc_TInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_MovementReplication, CallFunc_VInterpTo_DeltaTime_ImplicitCast) == 0x000294, "Member 'BP_CustomCar_C_MovementReplication::CallFunc_VInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.MoveRight
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomCar_C_MoveRight final
{
public:
	double                                        Axis;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_MoveRight) == 0x000008, "Wrong alignment on BP_CustomCar_C_MoveRight");
static_assert(sizeof(BP_CustomCar_C_MoveRight) == 0x000008, "Wrong size on BP_CustomCar_C_MoveRight");
static_assert(offsetof(BP_CustomCar_C_MoveRight, Axis) == 0x000000, "Member 'BP_CustomCar_C_MoveRight::Axis' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.MoveRightAll
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomCar_C_MoveRightAll final
{
public:
	double                                        Axis;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_MoveRightAll) == 0x000008, "Wrong alignment on BP_CustomCar_C_MoveRightAll");
static_assert(sizeof(BP_CustomCar_C_MoveRightAll) == 0x000008, "Wrong size on BP_CustomCar_C_MoveRightAll");
static_assert(offsetof(BP_CustomCar_C_MoveRightAll, Axis) == 0x000000, "Member 'BP_CustomCar_C_MoveRightAll::Axis' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.MoveRightSRV
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomCar_C_MoveRightSRV final
{
public:
	double                                        Axis;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_MoveRightSRV) == 0x000008, "Wrong alignment on BP_CustomCar_C_MoveRightSRV");
static_assert(sizeof(BP_CustomCar_C_MoveRightSRV) == 0x000008, "Wrong size on BP_CustomCar_C_MoveRightSRV");
static_assert(offsetof(BP_CustomCar_C_MoveRightSRV, Axis) == 0x000000, "Member 'BP_CustomCar_C_MoveRightSRV::Axis' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.OnRep_Driver
// 0x0001 (0x0001 - 0x0000)
struct BP_CustomCar_C_OnRep_Driver final
{
public:
	bool                                          CallFunc_IsDriverEmpty_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_OnRep_Driver) == 0x000001, "Wrong alignment on BP_CustomCar_C_OnRep_Driver");
static_assert(sizeof(BP_CustomCar_C_OnRep_Driver) == 0x000001, "Wrong size on BP_CustomCar_C_OnRep_Driver");
static_assert(offsetof(BP_CustomCar_C_OnRep_Driver, CallFunc_IsDriverEmpty_ReturnValue) == 0x000000, "Member 'BP_CustomCar_C_OnRep_Driver::CallFunc_IsDriverEmpty_ReturnValue' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomCar_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_ReceivePossessed) == 0x000008, "Wrong alignment on BP_CustomCar_C_ReceivePossessed");
static_assert(sizeof(BP_CustomCar_C_ReceivePossessed) == 0x000008, "Wrong size on BP_CustomCar_C_ReceivePossessed");
static_assert(offsetof(BP_CustomCar_C_ReceivePossessed, NewController) == 0x000000, "Member 'BP_CustomCar_C_ReceivePossessed::NewController' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_CustomCar_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_CustomCar_C_ReceiveTick");
static_assert(sizeof(BP_CustomCar_C_ReceiveTick) == 0x000004, "Wrong size on BP_CustomCar_C_ReceiveTick");
static_assert(offsetof(BP_CustomCar_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_CustomCar_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.Refresh Skin
// 0x0080 (0x0080 - 0x0000)
struct BP_CustomCar_C_Refresh_Skin final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_ChoosenChar                                 Character;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354D[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 MeshComponentLocal;                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorLocal;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354E[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354F[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3550[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3551[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetCharacterColor_Color;                  // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_Refresh_Skin) == 0x000008, "Wrong alignment on BP_CustomCar_C_Refresh_Skin");
static_assert(sizeof(BP_CustomCar_C_Refresh_Skin) == 0x000080, "Wrong size on BP_CustomCar_C_Refresh_Skin");
static_assert(offsetof(BP_CustomCar_C_Refresh_Skin, Mesh) == 0x000000, "Member 'BP_CustomCar_C_Refresh_Skin::Mesh' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Refresh_Skin, Character) == 0x000008, "Member 'BP_CustomCar_C_Refresh_Skin::Character' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Refresh_Skin, MeshComponentLocal) == 0x000010, "Member 'BP_CustomCar_C_Refresh_Skin::MeshComponentLocal' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Refresh_Skin, ColorLocal) == 0x000018, "Member 'BP_CustomCar_C_Refresh_Skin::ColorLocal' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Refresh_Skin, CallFunc_GetChildrenComponents_Children) == 0x000028, "Member 'BP_CustomCar_C_Refresh_Skin::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Refresh_Skin, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_CustomCar_C_Refresh_Skin::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Refresh_Skin, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_CustomCar_C_Refresh_Skin::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Refresh_Skin, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'BP_CustomCar_C_Refresh_Skin::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Refresh_Skin, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_CustomCar_C_Refresh_Skin::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Refresh_Skin, CallFunc_Max_ReturnValue) == 0x000050, "Member 'BP_CustomCar_C_Refresh_Skin::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Refresh_Skin, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000058, "Member 'BP_CustomCar_C_Refresh_Skin::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Refresh_Skin, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_CustomCar_C_Refresh_Skin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Refresh_Skin, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_CustomCar_C_Refresh_Skin::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Refresh_Skin, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_CustomCar_C_Refresh_Skin::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Refresh_Skin, K2Node_SwitchEnum_CmpSuccess) == 0x00006C, "Member 'BP_CustomCar_C_Refresh_Skin::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Refresh_Skin, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00006D, "Member 'BP_CustomCar_C_Refresh_Skin::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Refresh_Skin, CallFunc_GetCharacterColor_Color) == 0x000070, "Member 'BP_CustomCar_C_Refresh_Skin::CallFunc_GetCharacterColor_Color' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.RefreshPassagers
// 0x0010 (0x0010 - 0x0000)
struct BP_CustomCar_C_RefreshPassagers final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_RefreshPassagers) == 0x000008, "Wrong alignment on BP_CustomCar_C_RefreshPassagers");
static_assert(sizeof(BP_CustomCar_C_RefreshPassagers) == 0x000010, "Wrong size on BP_CustomCar_C_RefreshPassagers");
static_assert(offsetof(BP_CustomCar_C_RefreshPassagers, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'BP_CustomCar_C_RefreshPassagers::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_RefreshPassagers, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_CustomCar_C_RefreshPassagers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_RefreshPassagers, K2Node_SwitchInteger_CmpSuccess) == 0x00000C, "Member 'BP_CustomCar_C_RefreshPassagers::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.RefreshSkin01All
// 0x0001 (0x0001 - 0x0000)
struct BP_CustomCar_C_RefreshSkin01All final
{
public:
	E_ChoosenChar                                 Character;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_RefreshSkin01All) == 0x000001, "Wrong alignment on BP_CustomCar_C_RefreshSkin01All");
static_assert(sizeof(BP_CustomCar_C_RefreshSkin01All) == 0x000001, "Wrong size on BP_CustomCar_C_RefreshSkin01All");
static_assert(offsetof(BP_CustomCar_C_RefreshSkin01All, Character) == 0x000000, "Member 'BP_CustomCar_C_RefreshSkin01All::Character' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.RefreshSkin02All
// 0x0001 (0x0001 - 0x0000)
struct BP_CustomCar_C_RefreshSkin02All final
{
public:
	E_ChoosenChar                                 Character;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_RefreshSkin02All) == 0x000001, "Wrong alignment on BP_CustomCar_C_RefreshSkin02All");
static_assert(sizeof(BP_CustomCar_C_RefreshSkin02All) == 0x000001, "Wrong size on BP_CustomCar_C_RefreshSkin02All");
static_assert(offsetof(BP_CustomCar_C_RefreshSkin02All, Character) == 0x000000, "Member 'BP_CustomCar_C_RefreshSkin02All::Character' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.RefreshSkin03All
// 0x0001 (0x0001 - 0x0000)
struct BP_CustomCar_C_RefreshSkin03All final
{
public:
	E_ChoosenChar                                 Character;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_RefreshSkin03All) == 0x000001, "Wrong alignment on BP_CustomCar_C_RefreshSkin03All");
static_assert(sizeof(BP_CustomCar_C_RefreshSkin03All) == 0x000001, "Wrong size on BP_CustomCar_C_RefreshSkin03All");
static_assert(offsetof(BP_CustomCar_C_RefreshSkin03All, Character) == 0x000000, "Member 'BP_CustomCar_C_RefreshSkin03All::Character' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.ReplicateMov
// 0x0080 (0x0080 - 0x0000)
struct BP_CustomCar_C_ReplicateMov final
{
public:
	struct FTransform                             Param_RepTransform;                                // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param_ServerVelocity;                              // 0x0060(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_ReplicateMov) == 0x000010, "Wrong alignment on BP_CustomCar_C_ReplicateMov");
static_assert(sizeof(BP_CustomCar_C_ReplicateMov) == 0x000080, "Wrong size on BP_CustomCar_C_ReplicateMov");
static_assert(offsetof(BP_CustomCar_C_ReplicateMov, Param_RepTransform) == 0x000000, "Member 'BP_CustomCar_C_ReplicateMov::Param_RepTransform' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ReplicateMov, Param_ServerVelocity) == 0x000060, "Member 'BP_CustomCar_C_ReplicateMov::Param_ServerVelocity' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.ResetAll
// 0x0060 (0x0060 - 0x0000)
struct BP_CustomCar_C_ResetAll final
{
public:
	struct FTransform                             NewTransform;                                      // 0x0000(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_ResetAll) == 0x000010, "Wrong alignment on BP_CustomCar_C_ResetAll");
static_assert(sizeof(BP_CustomCar_C_ResetAll) == 0x000060, "Wrong size on BP_CustomCar_C_ResetAll");
static_assert(offsetof(BP_CustomCar_C_ResetAll, NewTransform) == 0x000000, "Member 'BP_CustomCar_C_ResetAll::NewTransform' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.ResetWheelLocationByTag
// 0x03B0 (0x03B0 - 0x0000)
struct BP_CustomCar_C_ResetWheelLocationByTag final
{
public:
	class FName                                   Selection;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3552[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0010(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x00F8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x01E0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_3;  // 0x02C8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_CustomCar_C_ResetWheelLocationByTag) == 0x000008, "Wrong alignment on BP_CustomCar_C_ResetWheelLocationByTag");
static_assert(sizeof(BP_CustomCar_C_ResetWheelLocationByTag) == 0x0003B0, "Wrong size on BP_CustomCar_C_ResetWheelLocationByTag");
static_assert(offsetof(BP_CustomCar_C_ResetWheelLocationByTag, Selection) == 0x000000, "Member 'BP_CustomCar_C_ResetWheelLocationByTag::Selection' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ResetWheelLocationByTag, K2Node_SwitchName_CmpSuccess) == 0x000008, "Member 'BP_CustomCar_C_ResetWheelLocationByTag::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ResetWheelLocationByTag, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000010, "Member 'BP_CustomCar_C_ResetWheelLocationByTag::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ResetWheelLocationByTag, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x0000F8, "Member 'BP_CustomCar_C_ResetWheelLocationByTag::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ResetWheelLocationByTag, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x0001E0, "Member 'BP_CustomCar_C_ResetWheelLocationByTag::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_ResetWheelLocationByTag, CallFunc_K2_SetRelativeLocation_SweepHitResult_3) == 0x0002C8, "Member 'BP_CustomCar_C_ResetWheelLocationByTag::CallFunc_K2_SetRelativeLocation_SweepHitResult_3' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.SetWheelLoc
// 0x0108 (0x0108 - 0x0000)
struct BP_CustomCar_C_SetWheelLoc final
{
public:
	class USceneComponent*                        WheelMesh;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InVec;                                             // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0020(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_CustomCar_C_SetWheelLoc) == 0x000008, "Wrong alignment on BP_CustomCar_C_SetWheelLoc");
static_assert(sizeof(BP_CustomCar_C_SetWheelLoc) == 0x000108, "Wrong size on BP_CustomCar_C_SetWheelLoc");
static_assert(offsetof(BP_CustomCar_C_SetWheelLoc, WheelMesh) == 0x000000, "Member 'BP_CustomCar_C_SetWheelLoc::WheelMesh' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_SetWheelLoc, InVec) == 0x000008, "Member 'BP_CustomCar_C_SetWheelLoc::InVec' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_SetWheelLoc, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000020, "Member 'BP_CustomCar_C_SetWheelLoc::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.Sprint
// 0x0001 (0x0001 - 0x0000)
struct BP_CustomCar_C_Sprint final
{
public:
	bool                                          Param_Sprint;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_Sprint) == 0x000001, "Wrong alignment on BP_CustomCar_C_Sprint");
static_assert(sizeof(BP_CustomCar_C_Sprint) == 0x000001, "Wrong size on BP_CustomCar_C_Sprint");
static_assert(offsetof(BP_CustomCar_C_Sprint, Param_Sprint) == 0x000000, "Member 'BP_CustomCar_C_Sprint::Param_Sprint' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.Stabilize
// 0x0048 (0x0048 - 0x0000)
struct BP_CustomCar_C_Stabilize final
{
public:
	double                                        InterpSpeed;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_InterpSpeed_ImplicitCast;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_Stabilize) == 0x000008, "Wrong alignment on BP_CustomCar_C_Stabilize");
static_assert(sizeof(BP_CustomCar_C_Stabilize) == 0x000048, "Wrong size on BP_CustomCar_C_Stabilize");
static_assert(offsetof(BP_CustomCar_C_Stabilize, InterpSpeed) == 0x000000, "Member 'BP_CustomCar_C_Stabilize::InterpSpeed' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Stabilize, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'BP_CustomCar_C_Stabilize::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Stabilize, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000010, "Member 'BP_CustomCar_C_Stabilize::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Stabilize, CallFunc_VInterpTo_ReturnValue) == 0x000028, "Member 'BP_CustomCar_C_Stabilize::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Stabilize, CallFunc_VInterpTo_InterpSpeed_ImplicitCast) == 0x000040, "Member 'BP_CustomCar_C_Stabilize::CallFunc_VInterpTo_InterpSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Stabilize, CallFunc_VInterpTo_DeltaTime_ImplicitCast) == 0x000044, "Member 'BP_CustomCar_C_Stabilize::CallFunc_VInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.SwitchCarVisibility
// 0x0006 (0x0006 - 0x0000)
struct BP_CustomCar_C_SwitchCarVisibility final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_SwitchCarVisibility) == 0x000001, "Wrong alignment on BP_CustomCar_C_SwitchCarVisibility");
static_assert(sizeof(BP_CustomCar_C_SwitchCarVisibility) == 0x000006, "Wrong size on BP_CustomCar_C_SwitchCarVisibility");
static_assert(offsetof(BP_CustomCar_C_SwitchCarVisibility, bNewVisibility) == 0x000000, "Member 'BP_CustomCar_C_SwitchCarVisibility::bNewVisibility' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_SwitchCarVisibility, Temp_bool_Variable) == 0x000001, "Member 'BP_CustomCar_C_SwitchCarVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_SwitchCarVisibility, Temp_byte_Variable) == 0x000002, "Member 'BP_CustomCar_C_SwitchCarVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_SwitchCarVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'BP_CustomCar_C_SwitchCarVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_SwitchCarVisibility, K2Node_Select_Default) == 0x000004, "Member 'BP_CustomCar_C_SwitchCarVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_SwitchCarVisibility, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_CustomCar_C_SwitchCarVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.Transfer Chains to Human (Srv)
// 0x0020 (0x0020 - 0x0000)
struct BP_CustomCar_C_Transfer_Chains_to_Human__Srv_ final
{
public:
	const class APawn*                            InDriver;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_NewChain_C*                         CurrentChain;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  NewPlayer02;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  NewPlayer01;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_Transfer_Chains_to_Human__Srv_) == 0x000008, "Wrong alignment on BP_CustomCar_C_Transfer_Chains_to_Human__Srv_");
static_assert(sizeof(BP_CustomCar_C_Transfer_Chains_to_Human__Srv_) == 0x000020, "Wrong size on BP_CustomCar_C_Transfer_Chains_to_Human__Srv_");
static_assert(offsetof(BP_CustomCar_C_Transfer_Chains_to_Human__Srv_, InDriver) == 0x000000, "Member 'BP_CustomCar_C_Transfer_Chains_to_Human__Srv_::InDriver' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Transfer_Chains_to_Human__Srv_, CurrentChain) == 0x000008, "Member 'BP_CustomCar_C_Transfer_Chains_to_Human__Srv_::CurrentChain' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Transfer_Chains_to_Human__Srv_, NewPlayer02) == 0x000010, "Member 'BP_CustomCar_C_Transfer_Chains_to_Human__Srv_::NewPlayer02' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Transfer_Chains_to_Human__Srv_, NewPlayer01) == 0x000018, "Member 'BP_CustomCar_C_Transfer_Chains_to_Human__Srv_::NewPlayer01' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.Transfer Chains to Vehicle (Srv)
// 0x0020 (0x0020 - 0x0000)
struct BP_CustomCar_C_Transfer_Chains_to_Vehicle__Srv_ final
{
public:
	const class UObject*                          InDriver;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_NewChain_C*                         CurrentChain;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  NewPlayer02;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  NewPlayer01;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_Transfer_Chains_to_Vehicle__Srv_) == 0x000008, "Wrong alignment on BP_CustomCar_C_Transfer_Chains_to_Vehicle__Srv_");
static_assert(sizeof(BP_CustomCar_C_Transfer_Chains_to_Vehicle__Srv_) == 0x000020, "Wrong size on BP_CustomCar_C_Transfer_Chains_to_Vehicle__Srv_");
static_assert(offsetof(BP_CustomCar_C_Transfer_Chains_to_Vehicle__Srv_, InDriver) == 0x000000, "Member 'BP_CustomCar_C_Transfer_Chains_to_Vehicle__Srv_::InDriver' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Transfer_Chains_to_Vehicle__Srv_, CurrentChain) == 0x000008, "Member 'BP_CustomCar_C_Transfer_Chains_to_Vehicle__Srv_::CurrentChain' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Transfer_Chains_to_Vehicle__Srv_, NewPlayer02) == 0x000010, "Member 'BP_CustomCar_C_Transfer_Chains_to_Vehicle__Srv_::NewPlayer02' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Transfer_Chains_to_Vehicle__Srv_, NewPlayer01) == 0x000018, "Member 'BP_CustomCar_C_Transfer_Chains_to_Vehicle__Srv_::NewPlayer01' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.TransferLoggedPlayerToCar
// 0x0090 (0x0090 - 0x0000)
struct BP_CustomCar_C_TransferLoggedPlayerToCar final
{
public:
	class AController*                            Param_Controller;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_VehicleCamera_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_TransferLoggedPlayerToCar) == 0x000010, "Wrong alignment on BP_CustomCar_C_TransferLoggedPlayerToCar");
static_assert(sizeof(BP_CustomCar_C_TransferLoggedPlayerToCar) == 0x000090, "Wrong size on BP_CustomCar_C_TransferLoggedPlayerToCar");
static_assert(offsetof(BP_CustomCar_C_TransferLoggedPlayerToCar, Param_Controller) == 0x000000, "Member 'BP_CustomCar_C_TransferLoggedPlayerToCar::Param_Controller' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferLoggedPlayerToCar, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_CustomCar_C_TransferLoggedPlayerToCar::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferLoggedPlayerToCar, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BP_CustomCar_C_TransferLoggedPlayerToCar::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferLoggedPlayerToCar, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000080, "Member 'BP_CustomCar_C_TransferLoggedPlayerToCar::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferLoggedPlayerToCar, CallFunc_FinishSpawningActor_ReturnValue) == 0x000088, "Member 'BP_CustomCar_C_TransferLoggedPlayerToCar::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.TransferOtherPlayersToCar
// 0x0170 (0x0170 - 0x0000)
struct BP_CustomCar_C_TransferOtherPlayersToCar final
{
public:
	class UObject*                                DriverController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3553[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3554[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_MultiGate_FirstRun;                         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3555[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_MultiGate_Data;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_MultiGate_ScratchBool;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3556[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_MultiGate_ScratchIndex;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3557[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerController*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0058(0x0010)(ReferenceParm)
	uint8                                         Pad_3558[0x8];                                     // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_Array_Get_Item;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3559[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VehicleCamera_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x00F8(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355A[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character;                // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355B[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ChoosenChar                                 CallFunc_GetCharacter_Character;                   // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355C[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355D[0x3];                                     // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355E[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors_1;    // 0x0148(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_TransferOtherPlayersToCar) == 0x000010, "Wrong alignment on BP_CustomCar_C_TransferOtherPlayersToCar");
static_assert(sizeof(BP_CustomCar_C_TransferOtherPlayersToCar) == 0x000170, "Wrong size on BP_CustomCar_C_TransferOtherPlayersToCar");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, DriverController) == 0x000000, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::DriverController' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000024, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, Temp_int_Array_Index_Variable_2) == 0x000028, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, K2Node_MultiGate_FirstRun) == 0x00002C, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::K2Node_MultiGate_FirstRun' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, K2Node_MultiGate_Data) == 0x000030, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::K2Node_MultiGate_Data' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, K2Node_MultiGate_ScratchBool) == 0x000034, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::K2Node_MultiGate_ScratchBool' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, K2Node_MultiGate_ScratchIndex) == 0x000038, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::K2Node_MultiGate_ScratchIndex' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_GetAllActorsOfClass_OutActors) == 0x000058, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000D8, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000E0, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000E8, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, Temp_int_Loop_Counter_Variable_2) == 0x0000F4, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_GetAllActorsWithInterface_OutActors) == 0x0000F8, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_Array_Get_Item_1) == 0x000108, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_Array_Length_ReturnValue_1) == 0x000110, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, K2Node_DynamicCast_AsBPI_Character) == 0x000118, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::K2Node_DynamicCast_AsBPI_Character' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00012C, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_GetCharacter_Character) == 0x000130, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_GetCharacter_Character' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_Max_ReturnValue) == 0x000134, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_Array_Add_ReturnValue) == 0x000138, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_Less_IntInt_ReturnValue) == 0x00013C, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_Add_IntInt_ReturnValue) == 0x000140, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_GetAllActorsWithInterface_OutActors_1) == 0x000148, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_GetAllActorsWithInterface_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_Array_Get_Item_2) == 0x000158, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_Array_Length_ReturnValue_2) == 0x000160, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000164, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_TransferOtherPlayersToCar, CallFunc_Max_ReturnValue_1) == 0x000168, "Member 'BP_CustomCar_C_TransferOtherPlayersToCar::CallFunc_Max_ReturnValue_1' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.Update Driver Hands
// 0x0038 (0x0038 - 0x0000)
struct BP_CustomCar_C_Update_Driver_Hands final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDriverEmpty_ReturnValue;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_Update_Driver_Hands) == 0x000008, "Wrong alignment on BP_CustomCar_C_Update_Driver_Hands");
static_assert(sizeof(BP_CustomCar_C_Update_Driver_Hands) == 0x000038, "Wrong size on BP_CustomCar_C_Update_Driver_Hands");
static_assert(offsetof(BP_CustomCar_C_Update_Driver_Hands, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'BP_CustomCar_C_Update_Driver_Hands::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Update_Driver_Hands, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000018, "Member 'BP_CustomCar_C_Update_Driver_Hands::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Update_Driver_Hands, CallFunc_IsDriverEmpty_ReturnValue) == 0x000030, "Member 'BP_CustomCar_C_Update_Driver_Hands::CallFunc_IsDriverEmpty_ReturnValue' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.UpdateDamping
// 0x0018 (0x0018 - 0x0000)
struct BP_CustomCar_C_UpdateDamping final
{
public:
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLinearDamping_InDamping_ImplicitCast;  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAngularDamping_InDamping_ImplicitCast; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_UpdateDamping) == 0x000008, "Wrong alignment on BP_CustomCar_C_UpdateDamping");
static_assert(sizeof(BP_CustomCar_C_UpdateDamping) == 0x000018, "Wrong size on BP_CustomCar_C_UpdateDamping");
static_assert(offsetof(BP_CustomCar_C_UpdateDamping, CallFunc_SelectFloat_ReturnValue) == 0x000000, "Member 'BP_CustomCar_C_UpdateDamping::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateDamping, CallFunc_SelectFloat_ReturnValue_1) == 0x000008, "Member 'BP_CustomCar_C_UpdateDamping::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateDamping, CallFunc_SetLinearDamping_InDamping_ImplicitCast) == 0x000010, "Member 'BP_CustomCar_C_UpdateDamping::CallFunc_SetLinearDamping_InDamping_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateDamping, CallFunc_SetAngularDamping_InDamping_ImplicitCast) == 0x000014, "Member 'BP_CustomCar_C_UpdateDamping::CallFunc_SetAngularDamping_InDamping_ImplicitCast' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.UpdateMoveForward
// 0x0018 (0x0018 - 0x0000)
struct BP_CustomCar_C_UpdateMoveForward final
{
public:
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_UpdateMoveForward) == 0x000008, "Wrong alignment on BP_CustomCar_C_UpdateMoveForward");
static_assert(sizeof(BP_CustomCar_C_UpdateMoveForward) == 0x000018, "Wrong size on BP_CustomCar_C_UpdateMoveForward");
static_assert(offsetof(BP_CustomCar_C_UpdateMoveForward, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000000, "Member 'BP_CustomCar_C_UpdateMoveForward::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateMoveForward, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'BP_CustomCar_C_UpdateMoveForward::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateMoveForward, CallFunc_FInterpTo_ReturnValue) == 0x000010, "Member 'BP_CustomCar_C_UpdateMoveForward::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.UpdateSound
// 0x0050 (0x0050 - 0x0000)
struct BP_CustomCar_C_UpdateSound final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3560[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast;   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_UpdateSound) == 0x000008, "Wrong alignment on BP_CustomCar_C_UpdateSound");
static_assert(sizeof(BP_CustomCar_C_UpdateSound) == 0x000050, "Wrong size on BP_CustomCar_C_UpdateSound");
static_assert(offsetof(BP_CustomCar_C_UpdateSound, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_CustomCar_C_UpdateSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateSound, CallFunc_GetForwardVector_ReturnValue) == 0x000008, "Member 'BP_CustomCar_C_UpdateSound::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateSound, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000020, "Member 'BP_CustomCar_C_UpdateSound::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateSound, CallFunc_Dot_VectorVector_ReturnValue) == 0x000038, "Member 'BP_CustomCar_C_UpdateSound::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateSound, CallFunc_Abs_ReturnValue) == 0x000040, "Member 'BP_CustomCar_C_UpdateSound::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateSound, CallFunc_SetFloatParameter_InFloat_ImplicitCast) == 0x000048, "Member 'BP_CustomCar_C_UpdateSound::CallFunc_SetFloatParameter_InFloat_ImplicitCast' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.UpdateSpeed
// 0x0040 (0x0040 - 0x0000)
struct BP_CustomCar_C_UpdateSpeed final
{
public:
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3561[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_UpdateSpeed) == 0x000008, "Wrong alignment on BP_CustomCar_C_UpdateSpeed");
static_assert(sizeof(BP_CustomCar_C_UpdateSpeed) == 0x000040, "Wrong size on BP_CustomCar_C_UpdateSpeed");
static_assert(offsetof(BP_CustomCar_C_UpdateSpeed, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000000, "Member 'BP_CustomCar_C_UpdateSpeed::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateSpeed, CallFunc_BreakRotator_Roll) == 0x000018, "Member 'BP_CustomCar_C_UpdateSpeed::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateSpeed, CallFunc_BreakRotator_Pitch) == 0x00001C, "Member 'BP_CustomCar_C_UpdateSpeed::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateSpeed, CallFunc_BreakRotator_Yaw) == 0x000020, "Member 'BP_CustomCar_C_UpdateSpeed::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateSpeed, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'BP_CustomCar_C_UpdateSpeed::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_CustomCar_C_UpdateSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateSpeed, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000038, "Member 'BP_CustomCar_C_UpdateSpeed::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.UpdateSteerFromVelocity
// 0x0080 (0x0080 - 0x0000)
struct BP_CustomCar_C_UpdateSteerFromVelocity final
{
public:
	double                                        Steer;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewSteer;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3562[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3563[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_UpdateSteerFromVelocity) == 0x000008, "Wrong alignment on BP_CustomCar_C_UpdateSteerFromVelocity");
static_assert(sizeof(BP_CustomCar_C_UpdateSteerFromVelocity) == 0x000080, "Wrong size on BP_CustomCar_C_UpdateSteerFromVelocity");
static_assert(offsetof(BP_CustomCar_C_UpdateSteerFromVelocity, Steer) == 0x000000, "Member 'BP_CustomCar_C_UpdateSteerFromVelocity::Steer' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateSteerFromVelocity, NewSteer) == 0x000008, "Member 'BP_CustomCar_C_UpdateSteerFromVelocity::NewSteer' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateSteerFromVelocity, CallFunc_GetForwardVector_ReturnValue) == 0x000010, "Member 'BP_CustomCar_C_UpdateSteerFromVelocity::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateSteerFromVelocity, CallFunc_GetComponentVelocity_ReturnValue) == 0x000028, "Member 'BP_CustomCar_C_UpdateSteerFromVelocity::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateSteerFromVelocity, CallFunc_Dot_VectorVector_ReturnValue) == 0x000040, "Member 'BP_CustomCar_C_UpdateSteerFromVelocity::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateSteerFromVelocity, CallFunc_Abs_ReturnValue) == 0x000048, "Member 'BP_CustomCar_C_UpdateSteerFromVelocity::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateSteerFromVelocity, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'BP_CustomCar_C_UpdateSteerFromVelocity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateSteerFromVelocity, CallFunc_GetFloatValue_ReturnValue) == 0x000058, "Member 'BP_CustomCar_C_UpdateSteerFromVelocity::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateSteerFromVelocity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000060, "Member 'BP_CustomCar_C_UpdateSteerFromVelocity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateSteerFromVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_CustomCar_C_UpdateSteerFromVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateSteerFromVelocity, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000070, "Member 'BP_CustomCar_C_UpdateSteerFromVelocity::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UpdateSteerFromVelocity, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000078, "Member 'BP_CustomCar_C_UpdateSteerFromVelocity::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.Use
// 0x0010 (0x0010 - 0x0000)
struct BP_CustomCar_C_Use final
{
public:
	class AController*                            Param_Controller;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ControlledActor;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_Use) == 0x000008, "Wrong alignment on BP_CustomCar_C_Use");
static_assert(sizeof(BP_CustomCar_C_Use) == 0x000010, "Wrong size on BP_CustomCar_C_Use");
static_assert(offsetof(BP_CustomCar_C_Use, Param_Controller) == 0x000000, "Member 'BP_CustomCar_C_Use::Param_Controller' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_Use, ControlledActor) == 0x000008, "Member 'BP_CustomCar_C_Use::ControlledActor' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.UserConstructionScript
// 0x0070 (0x0070 - 0x0000)
struct BP_CustomCar_C_UserConstructionScript final
{
public:
	TArray<class UArrowComponent*>                CallFunc_GetArrows_Array;                          // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_CustomCar_C_UserConstructionScript");
static_assert(sizeof(BP_CustomCar_C_UserConstructionScript) == 0x000070, "Wrong size on BP_CustomCar_C_UserConstructionScript");
static_assert(offsetof(BP_CustomCar_C_UserConstructionScript, CallFunc_GetArrows_Array) == 0x000000, "Member 'BP_CustomCar_C_UserConstructionScript::CallFunc_GetArrows_Array' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_UserConstructionScript, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BP_CustomCar_C_UserConstructionScript::CallFunc_GetTransform_ReturnValue' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.WheelLeftRight
// 0x0120 (0x0120 - 0x0000)
struct BP_CustomCar_C_WheelLeftRight final
{
public:
	double                                        NewRotation_Yaw;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3564[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0030(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_WheelLeftRight) == 0x000008, "Wrong alignment on BP_CustomCar_C_WheelLeftRight");
static_assert(sizeof(BP_CustomCar_C_WheelLeftRight) == 0x000120, "Wrong size on BP_CustomCar_C_WheelLeftRight");
static_assert(offsetof(BP_CustomCar_C_WheelLeftRight, NewRotation_Yaw) == 0x000000, "Member 'BP_CustomCar_C_WheelLeftRight::NewRotation_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelLeftRight, CallFunc_BreakRotator_Roll) == 0x000008, "Member 'BP_CustomCar_C_WheelLeftRight::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelLeftRight, CallFunc_BreakRotator_Pitch) == 0x00000C, "Member 'BP_CustomCar_C_WheelLeftRight::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelLeftRight, CallFunc_BreakRotator_Yaw) == 0x000010, "Member 'BP_CustomCar_C_WheelLeftRight::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelLeftRight, CallFunc_MakeRotator_ReturnValue) == 0x000018, "Member 'BP_CustomCar_C_WheelLeftRight::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelLeftRight, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000030, "Member 'BP_CustomCar_C_WheelLeftRight::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelLeftRight, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000118, "Member 'BP_CustomCar_C_WheelLeftRight::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_CustomCar.BP_CustomCar_C.WheelRotation
// 0x0578 (0x0578 - 0x0000)
struct BP_CustomCar_C_WheelRotation final
{
public:
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0050(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x0190(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult_1;     // 0x0278(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult_2;     // 0x0390(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult_3;     // 0x0478(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_1;          // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_2;          // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_3;          // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomCar_C_WheelRotation) == 0x000008, "Wrong alignment on BP_CustomCar_C_WheelRotation");
static_assert(sizeof(BP_CustomCar_C_WheelRotation) == 0x000578, "Wrong size on BP_CustomCar_C_WheelRotation");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_GetForwardVector_ReturnValue) == 0x000000, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000018, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_Lerp_ReturnValue) == 0x000028, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_Lerp_ReturnValue_1) == 0x000030, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_MakeRotator_ReturnValue) == 0x000038, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000050, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_FInterpTo_ReturnValue) == 0x000138, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_Dot_VectorVector_ReturnValue) == 0x000140, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000148, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000150, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000158, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_MakeRotator_ReturnValue_1) == 0x000160, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_MakeRotator_ReturnValue_2) == 0x000178, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x000190, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_K2_AddLocalRotation_SweepHitResult_1) == 0x000278, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_K2_AddLocalRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_MakeRotator_ReturnValue_3) == 0x000360, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_MakeRotator_ReturnValue_4) == 0x000378, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_K2_AddLocalRotation_SweepHitResult_2) == 0x000390, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_K2_AddLocalRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_K2_AddLocalRotation_SweepHitResult_3) == 0x000478, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_K2_AddLocalRotation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000560, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000564, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_MakeRotator_Roll_ImplicitCast_1) == 0x000568, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_MakeRotator_Roll_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_MakeRotator_Roll_ImplicitCast_2) == 0x00056C, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_MakeRotator_Roll_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_CustomCar_C_WheelRotation, CallFunc_MakeRotator_Roll_ImplicitCast_3) == 0x000570, "Member 'BP_CustomCar_C_WheelRotation::CallFunc_MakeRotator_Roll_ImplicitCast_3' has a wrong offset!");

}

