#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ElevatorTruck

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ElevatorTruck.BP_ElevatorTruck_C.DetectCimentPile
// 0x0248 (0x0248 - 0x0000)
struct BP_ElevatorTruck_C_DetectCimentPile final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0078(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3C[0x1];                                     // 0x0163(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3D[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3E[0x4];                                     // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CimentPile_C*                       K2Node_DynamicCast_AsBP_Ciment_Pile;               // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ElevatorTruck_C_DetectCimentPile) == 0x000008, "Wrong alignment on BP_ElevatorTruck_C_DetectCimentPile");
static_assert(sizeof(BP_ElevatorTruck_C_DetectCimentPile) == 0x000248, "Wrong size on BP_ElevatorTruck_C_DetectCimentPile");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, Temp_object_Variable) == 0x000008, "Member 'BP_ElevatorTruck_C_DetectCimentPile::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_GetForwardVector_ReturnValue) == 0x000030, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000048, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_Add_VectorVector_ReturnValue) == 0x000060, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_SphereTraceSingle_OutHit) == 0x000078, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_SphereTraceSingle_ReturnValue) == 0x000160, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_BreakHitResult_bBlockingHit) == 0x000161, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_BreakHitResult_bInitialOverlap) == 0x000162, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_BreakHitResult_Time) == 0x000164, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_BreakHitResult_Distance) == 0x000168, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_BreakHitResult_Location) == 0x000170, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_BreakHitResult_ImpactPoint) == 0x000188, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_BreakHitResult_Normal) == 0x0001A0, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_BreakHitResult_ImpactNormal) == 0x0001B8, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_BreakHitResult_PhysMat) == 0x0001D0, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_BreakHitResult_HitActor) == 0x0001D8, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_BreakHitResult_HitComponent) == 0x0001E0, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_BreakHitResult_HitBoneName) == 0x0001E8, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_BreakHitResult_BoneName) == 0x0001F0, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_BreakHitResult_HitItem) == 0x0001F8, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_BreakHitResult_ElementIndex) == 0x0001FC, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_BreakHitResult_FaceIndex) == 0x000200, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_BreakHitResult_TraceStart) == 0x000208, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, CallFunc_BreakHitResult_TraceEnd) == 0x000220, "Member 'BP_ElevatorTruck_C_DetectCimentPile::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, K2Node_DynamicCast_AsBP_Ciment_Pile) == 0x000238, "Member 'BP_ElevatorTruck_C_DetectCimentPile::K2Node_DynamicCast_AsBP_Ciment_Pile' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_DetectCimentPile, K2Node_DynamicCast_bSuccess) == 0x000240, "Member 'BP_ElevatorTruck_C_DetectCimentPile::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_ElevatorTruck.BP_ElevatorTruck_C.ExecuteUbergraph_BP_ElevatorTruck
// 0x0150 (0x0150 - 0x0000)
struct BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CimentPile_C*                       K2Node_CustomEvent_Target;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A40[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0060(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck) == 0x000008, "Wrong alignment on BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck");
static_assert(sizeof(BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck) == 0x000150, "Wrong size on BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck");
static_assert(offsetof(BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck, EntryPoint) == 0x000000, "Member 'BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck, K2Node_CustomEvent_Target) == 0x000008, "Member 'BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck, CallFunc_HasAuthority_ReturnValue) == 0x000010, "Member 'BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck, CallFunc_BreakVector_X) == 0x000018, "Member 'BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck, CallFunc_BreakVector_Y) == 0x000020, "Member 'BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck, CallFunc_BreakVector_Z) == 0x000028, "Member 'BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck, CallFunc_VLerp_ReturnValue) == 0x000048, "Member 'BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000060, "Member 'BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck, CallFunc_Not_PreBool_ReturnValue) == 0x000148, "Member 'BP_ElevatorTruck_C_ExecuteUbergraph_BP_ElevatorTruck::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_ElevatorTruck.BP_ElevatorTruck_C.GrabCimentPileAll
// 0x0008 (0x0008 - 0x0000)
struct BP_ElevatorTruck_C_GrabCimentPileAll final
{
public:
	class ABP_CimentPile_C*                       Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ElevatorTruck_C_GrabCimentPileAll) == 0x000008, "Wrong alignment on BP_ElevatorTruck_C_GrabCimentPileAll");
static_assert(sizeof(BP_ElevatorTruck_C_GrabCimentPileAll) == 0x000008, "Wrong size on BP_ElevatorTruck_C_GrabCimentPileAll");
static_assert(offsetof(BP_ElevatorTruck_C_GrabCimentPileAll, Target) == 0x000000, "Member 'BP_ElevatorTruck_C_GrabCimentPileAll::Target' has a wrong offset!");

// Function BP_ElevatorTruck.BP_ElevatorTruck_C.PlaySound
// 0x0028 (0x0028 - 0x0000)
struct BP_ElevatorTruck_C_PlaySound final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A41[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ElevatorTruck_C_PlaySound) == 0x000008, "Wrong alignment on BP_ElevatorTruck_C_PlaySound");
static_assert(sizeof(BP_ElevatorTruck_C_PlaySound) == 0x000028, "Wrong size on BP_ElevatorTruck_C_PlaySound");
static_assert(offsetof(BP_ElevatorTruck_C_PlaySound, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_ElevatorTruck_C_PlaySound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_PlaySound, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_ElevatorTruck_C_PlaySound::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorTruck_C_PlaySound, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000020, "Member 'BP_ElevatorTruck_C_PlaySound::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");

}

