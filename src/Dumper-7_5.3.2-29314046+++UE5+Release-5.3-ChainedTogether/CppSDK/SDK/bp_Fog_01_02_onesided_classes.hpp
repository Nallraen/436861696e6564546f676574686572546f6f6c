#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: bp_Fog_01_02_onesided

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass bp_Fog_01_02_onesided.bp_Fog_01_02_onesided_C
// 0x0060 (0x02F8 - 0x0298)
class Abp_Fog_01_02_onesided_C final : public AActor
{
public:
	class UStaticMeshComponent*                   FogPlane;                                          // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Fog;                                               // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceConstant*              MaterialBase;                                      // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MaterialDynamic;                                   // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Opacity;                                           // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FadeDistance;                                      // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TileMainMask;                                      // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DepthFadeDistance;                                 // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"bp_Fog_01_02_onesided_C">();
	}
	static class Abp_Fog_01_02_onesided_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<Abp_Fog_01_02_onesided_C>();
	}
};
static_assert(alignof(Abp_Fog_01_02_onesided_C) == 0x000008, "Wrong alignment on Abp_Fog_01_02_onesided_C");
static_assert(sizeof(Abp_Fog_01_02_onesided_C) == 0x0002F8, "Wrong size on Abp_Fog_01_02_onesided_C");
static_assert(offsetof(Abp_Fog_01_02_onesided_C, FogPlane) == 0x000298, "Member 'Abp_Fog_01_02_onesided_C::FogPlane' has a wrong offset!");
static_assert(offsetof(Abp_Fog_01_02_onesided_C, Fog) == 0x0002A0, "Member 'Abp_Fog_01_02_onesided_C::Fog' has a wrong offset!");
static_assert(offsetof(Abp_Fog_01_02_onesided_C, DefaultSceneRoot) == 0x0002A8, "Member 'Abp_Fog_01_02_onesided_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(Abp_Fog_01_02_onesided_C, MaterialBase) == 0x0002B0, "Member 'Abp_Fog_01_02_onesided_C::MaterialBase' has a wrong offset!");
static_assert(offsetof(Abp_Fog_01_02_onesided_C, MaterialDynamic) == 0x0002B8, "Member 'Abp_Fog_01_02_onesided_C::MaterialDynamic' has a wrong offset!");
static_assert(offsetof(Abp_Fog_01_02_onesided_C, Opacity) == 0x0002C0, "Member 'Abp_Fog_01_02_onesided_C::Opacity' has a wrong offset!");
static_assert(offsetof(Abp_Fog_01_02_onesided_C, FadeDistance) == 0x0002C8, "Member 'Abp_Fog_01_02_onesided_C::FadeDistance' has a wrong offset!");
static_assert(offsetof(Abp_Fog_01_02_onesided_C, Color) == 0x0002D0, "Member 'Abp_Fog_01_02_onesided_C::Color' has a wrong offset!");
static_assert(offsetof(Abp_Fog_01_02_onesided_C, TileMainMask) == 0x0002E0, "Member 'Abp_Fog_01_02_onesided_C::TileMainMask' has a wrong offset!");
static_assert(offsetof(Abp_Fog_01_02_onesided_C, DepthFadeDistance) == 0x0002E8, "Member 'Abp_Fog_01_02_onesided_C::DepthFadeDistance' has a wrong offset!");
static_assert(offsetof(Abp_Fog_01_02_onesided_C, Speed) == 0x0002F0, "Member 'Abp_Fog_01_02_onesided_C::Speed' has a wrong offset!");

}

