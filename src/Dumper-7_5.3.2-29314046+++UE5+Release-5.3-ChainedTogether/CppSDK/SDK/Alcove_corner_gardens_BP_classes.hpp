#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Alcove_corner_gardens_BP

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass alcove_corner_gardens_BP.alcove_corner_gardens_BP_C
// 0x0150 (0x03E8 - 0x0298)
class AAlcove_corner_gardens_BP_C final : public AActor
{
public:
	class UStaticMeshComponent*                   Wall_Bowl_03;                                      // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Wall_Bowl_04;                                      // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Wall_Bowl_01;                                      // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Wall_Bowl_02;                                      // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Fleur_de_lis3;                                     // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Fleur_de_lis2;                                     // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Fleur_de_lis;                                      // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Fleur_de_lis1;                                     // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Moonflower_05;                                     // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Moonflower_04;                                     // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Moonflower_03;                                     // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Moonflower_02;                                     // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Moonflower_01;                                     // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Hedge_straight1;                                   // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Hedge_straight;                                    // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Lion_low_poly1;                                    // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Lion_low_poly;                                     // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Trim_crown_end;                                    // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Square_pillar1;                                    // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Square_pillar;                                     // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   banister_end;                                      // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Top_trim1;                                         // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Alcove_wall1;                                      // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar_04;                                         // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar_03;                                         // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Floor_tile_1x1;                                    // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Top_trim;                                          // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Alcove_wall;                                       // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar_02;                                         // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar_01;                                         // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SharedRoot;                                        // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMesh*>                    Ivy_array;                                         // 0x0390(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRandomStream                          Stream;                                            // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor)
	TArray<class UStaticMesh*>                    Ivy_array_corner_01;                               // 0x03A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UStaticMesh*>                    Ivy_array_corner_02;                               // 0x03B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UStaticMesh*>                    Flower_bowl_array;                                 // 0x03C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRandomStream                          Flower_pot_stream;                                 // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor)
	bool                                          Pots_switch;                                       // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"alcove_corner_gardens_BP_C">();
	}
	static class AAlcove_corner_gardens_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAlcove_corner_gardens_BP_C>();
	}
};
static_assert(alignof(AAlcove_corner_gardens_BP_C) == 0x000008, "Wrong alignment on AAlcove_corner_gardens_BP_C");
static_assert(sizeof(AAlcove_corner_gardens_BP_C) == 0x0003E8, "Wrong size on AAlcove_corner_gardens_BP_C");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Wall_Bowl_03) == 0x000298, "Member 'AAlcove_corner_gardens_BP_C::Wall_Bowl_03' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Wall_Bowl_04) == 0x0002A0, "Member 'AAlcove_corner_gardens_BP_C::Wall_Bowl_04' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Wall_Bowl_01) == 0x0002A8, "Member 'AAlcove_corner_gardens_BP_C::Wall_Bowl_01' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Wall_Bowl_02) == 0x0002B0, "Member 'AAlcove_corner_gardens_BP_C::Wall_Bowl_02' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Fleur_de_lis3) == 0x0002B8, "Member 'AAlcove_corner_gardens_BP_C::Fleur_de_lis3' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Fleur_de_lis2) == 0x0002C0, "Member 'AAlcove_corner_gardens_BP_C::Fleur_de_lis2' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Fleur_de_lis) == 0x0002C8, "Member 'AAlcove_corner_gardens_BP_C::Fleur_de_lis' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Fleur_de_lis1) == 0x0002D0, "Member 'AAlcove_corner_gardens_BP_C::Fleur_de_lis1' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Moonflower_05) == 0x0002D8, "Member 'AAlcove_corner_gardens_BP_C::Moonflower_05' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Moonflower_04) == 0x0002E0, "Member 'AAlcove_corner_gardens_BP_C::Moonflower_04' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Moonflower_03) == 0x0002E8, "Member 'AAlcove_corner_gardens_BP_C::Moonflower_03' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Moonflower_02) == 0x0002F0, "Member 'AAlcove_corner_gardens_BP_C::Moonflower_02' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Moonflower_01) == 0x0002F8, "Member 'AAlcove_corner_gardens_BP_C::Moonflower_01' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Hedge_straight1) == 0x000300, "Member 'AAlcove_corner_gardens_BP_C::Hedge_straight1' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Hedge_straight) == 0x000308, "Member 'AAlcove_corner_gardens_BP_C::Hedge_straight' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Lion_low_poly1) == 0x000310, "Member 'AAlcove_corner_gardens_BP_C::Lion_low_poly1' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Lion_low_poly) == 0x000318, "Member 'AAlcove_corner_gardens_BP_C::Lion_low_poly' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Trim_crown_end) == 0x000320, "Member 'AAlcove_corner_gardens_BP_C::Trim_crown_end' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Square_pillar1) == 0x000328, "Member 'AAlcove_corner_gardens_BP_C::Square_pillar1' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Square_pillar) == 0x000330, "Member 'AAlcove_corner_gardens_BP_C::Square_pillar' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, banister_end) == 0x000338, "Member 'AAlcove_corner_gardens_BP_C::banister_end' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Top_trim1) == 0x000340, "Member 'AAlcove_corner_gardens_BP_C::Top_trim1' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Alcove_wall1) == 0x000348, "Member 'AAlcove_corner_gardens_BP_C::Alcove_wall1' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Pillar_04) == 0x000350, "Member 'AAlcove_corner_gardens_BP_C::Pillar_04' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Pillar_03) == 0x000358, "Member 'AAlcove_corner_gardens_BP_C::Pillar_03' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Floor_tile_1x1) == 0x000360, "Member 'AAlcove_corner_gardens_BP_C::Floor_tile_1x1' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Top_trim) == 0x000368, "Member 'AAlcove_corner_gardens_BP_C::Top_trim' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Alcove_wall) == 0x000370, "Member 'AAlcove_corner_gardens_BP_C::Alcove_wall' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Pillar_02) == 0x000378, "Member 'AAlcove_corner_gardens_BP_C::Pillar_02' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Pillar_01) == 0x000380, "Member 'AAlcove_corner_gardens_BP_C::Pillar_01' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, SharedRoot) == 0x000388, "Member 'AAlcove_corner_gardens_BP_C::SharedRoot' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Ivy_array) == 0x000390, "Member 'AAlcove_corner_gardens_BP_C::Ivy_array' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Stream) == 0x0003A0, "Member 'AAlcove_corner_gardens_BP_C::Stream' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Ivy_array_corner_01) == 0x0003A8, "Member 'AAlcove_corner_gardens_BP_C::Ivy_array_corner_01' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Ivy_array_corner_02) == 0x0003B8, "Member 'AAlcove_corner_gardens_BP_C::Ivy_array_corner_02' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Flower_bowl_array) == 0x0003C8, "Member 'AAlcove_corner_gardens_BP_C::Flower_bowl_array' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Flower_pot_stream) == 0x0003D8, "Member 'AAlcove_corner_gardens_BP_C::Flower_pot_stream' has a wrong offset!");
static_assert(offsetof(AAlcove_corner_gardens_BP_C, Pots_switch) == 0x0003E0, "Member 'AAlcove_corner_gardens_BP_C::Pots_switch' has a wrong offset!");

}

