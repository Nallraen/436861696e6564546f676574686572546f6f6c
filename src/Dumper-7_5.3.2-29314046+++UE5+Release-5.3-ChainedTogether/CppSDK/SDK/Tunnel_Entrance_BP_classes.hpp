#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Tunnel_Entrance_BP

#include "Basic.hpp"

#include "Tunnel_Entrance_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ConnectorsNum_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Tunnel_Entrance_BP.Tunnel_Entrance_BP_C
// 0x0180 (0x0418 - 0x0298)
class ATunnel_Entrance_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextRenderComponent*                   Con_3;                                             // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Spline;                                            // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Center;                                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   Con_2;                                             // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   Con_1;                                             // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Entrance_Mesh;                                     // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Road_to_Connect;                                   // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          Spawn_at_all_Con;                                  // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Con_Text_Visibility;                               // 0x02E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Move_Road_At_Con_Location;                         // 0x02E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Connect_Road_At_Con_Location;                      // 0x02E3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETunnel_Entrance                              Select_Tunnel_Entrance;                            // 0x02E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConnectorsNum                                Choose_Connector;                                  // 0x02E5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C2[0x2];                                     // 0x02E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Splines_Index_To_Connect;                          // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C3[0x4];                                     // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Trace_Radius;                                      // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Con_1_Location;                                    // 0x02F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Can_2_Location;                                    // 0x0310(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARoad_BP_C*                             HitActor;                                          // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Con_1_Rot;                                         // 0x0330(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Can_Override_Material_;                            // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Override_Sidewalk_Material;                    // 0x0349(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C4[0x6];                                     // 0x034A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Material_0;                                        // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Material_1;                                        // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Con_2_Rot;                                         // 0x0360(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        Spline_Tangent_Lenght_At_Con_Location;             // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALandscapeProxy*                        Landscape;                                         // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          Raise_Terrain;                                     // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lower_Terrain;                                     // 0x0389(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C5[0x6];                                     // 0x038A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Side_Falloff;                                      // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Num_Of_Iteration;                                  // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Number_of_Subdivisions_to_be_added;                // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Layer_To_Apply;                                    // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C6[0x4];                                     // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Con_Location_3;                                    // 0x03A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Con_3_Rot;                                         // 0x03C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                     Material_2;                                        // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Material_3;                                        // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Material_4;                                        // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Material_5;                                        // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Material_6;                                        // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Material_7;                                        // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Sidewalk_Material_0;                               // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Sidewalk_Material_1;                               // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void Add_sidewalk(const struct FVector& Location, class UStaticMesh* Mesh);
	void Connect_Road_To_(const struct FVector& Location, const struct FRotator& Con_Rotation);
	void ExecuteUbergraph_Tunnel_Entrance_BP(int32 EntryPoint);
	void Move_Road_At_Con();
	void Move_Road_At_Con_();
	void Perform_Landscape_Adjustation();
	void Perform_Landscape_Adjustation_();
	void ReceiveBeginPlay();
	void Set_Road_Location(const struct FVector& Location, class AActor* Param_HitActor, const struct FRotator& Rotation);
	void Spawn_New_Road();
	void SpawnNewRoadBP();
	void SpawnRoadAtAllCOn();
	void SpawnRoadAtAllCon_();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Tunnel_Entrance_BP_C">();
	}
	static class ATunnel_Entrance_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATunnel_Entrance_BP_C>();
	}
};
static_assert(alignof(ATunnel_Entrance_BP_C) == 0x000008, "Wrong alignment on ATunnel_Entrance_BP_C");
static_assert(sizeof(ATunnel_Entrance_BP_C) == 0x000418, "Wrong size on ATunnel_Entrance_BP_C");
static_assert(offsetof(ATunnel_Entrance_BP_C, UberGraphFrame) == 0x000298, "Member 'ATunnel_Entrance_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Con_3) == 0x0002A0, "Member 'ATunnel_Entrance_BP_C::Con_3' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Spline) == 0x0002A8, "Member 'ATunnel_Entrance_BP_C::Spline' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Center) == 0x0002B0, "Member 'ATunnel_Entrance_BP_C::Center' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Con_2) == 0x0002B8, "Member 'ATunnel_Entrance_BP_C::Con_2' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Con_1) == 0x0002C0, "Member 'ATunnel_Entrance_BP_C::Con_1' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Entrance_Mesh) == 0x0002C8, "Member 'ATunnel_Entrance_BP_C::Entrance_Mesh' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, DefaultSceneRoot) == 0x0002D0, "Member 'ATunnel_Entrance_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Road_to_Connect) == 0x0002D8, "Member 'ATunnel_Entrance_BP_C::Road_to_Connect' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Spawn_at_all_Con) == 0x0002E0, "Member 'ATunnel_Entrance_BP_C::Spawn_at_all_Con' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Con_Text_Visibility) == 0x0002E1, "Member 'ATunnel_Entrance_BP_C::Con_Text_Visibility' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Move_Road_At_Con_Location) == 0x0002E2, "Member 'ATunnel_Entrance_BP_C::Move_Road_At_Con_Location' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Connect_Road_At_Con_Location) == 0x0002E3, "Member 'ATunnel_Entrance_BP_C::Connect_Road_At_Con_Location' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Select_Tunnel_Entrance) == 0x0002E4, "Member 'ATunnel_Entrance_BP_C::Select_Tunnel_Entrance' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Choose_Connector) == 0x0002E5, "Member 'ATunnel_Entrance_BP_C::Choose_Connector' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Splines_Index_To_Connect) == 0x0002E8, "Member 'ATunnel_Entrance_BP_C::Splines_Index_To_Connect' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Trace_Radius) == 0x0002F0, "Member 'ATunnel_Entrance_BP_C::Trace_Radius' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Con_1_Location) == 0x0002F8, "Member 'ATunnel_Entrance_BP_C::Con_1_Location' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Can_2_Location) == 0x000310, "Member 'ATunnel_Entrance_BP_C::Can_2_Location' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, HitActor) == 0x000328, "Member 'ATunnel_Entrance_BP_C::HitActor' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Con_1_Rot) == 0x000330, "Member 'ATunnel_Entrance_BP_C::Con_1_Rot' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Can_Override_Material_) == 0x000348, "Member 'ATunnel_Entrance_BP_C::Can_Override_Material_' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Can_Override_Sidewalk_Material) == 0x000349, "Member 'ATunnel_Entrance_BP_C::Can_Override_Sidewalk_Material' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Material_0) == 0x000350, "Member 'ATunnel_Entrance_BP_C::Material_0' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Material_1) == 0x000358, "Member 'ATunnel_Entrance_BP_C::Material_1' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Con_2_Rot) == 0x000360, "Member 'ATunnel_Entrance_BP_C::Con_2_Rot' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Spline_Tangent_Lenght_At_Con_Location) == 0x000378, "Member 'ATunnel_Entrance_BP_C::Spline_Tangent_Lenght_At_Con_Location' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Landscape) == 0x000380, "Member 'ATunnel_Entrance_BP_C::Landscape' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Raise_Terrain) == 0x000388, "Member 'ATunnel_Entrance_BP_C::Raise_Terrain' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Lower_Terrain) == 0x000389, "Member 'ATunnel_Entrance_BP_C::Lower_Terrain' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Side_Falloff) == 0x000390, "Member 'ATunnel_Entrance_BP_C::Side_Falloff' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Num_Of_Iteration) == 0x000398, "Member 'ATunnel_Entrance_BP_C::Num_Of_Iteration' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Number_of_Subdivisions_to_be_added) == 0x00039C, "Member 'ATunnel_Entrance_BP_C::Number_of_Subdivisions_to_be_added' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Layer_To_Apply) == 0x0003A0, "Member 'ATunnel_Entrance_BP_C::Layer_To_Apply' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Con_Location_3) == 0x0003A8, "Member 'ATunnel_Entrance_BP_C::Con_Location_3' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Con_3_Rot) == 0x0003C0, "Member 'ATunnel_Entrance_BP_C::Con_3_Rot' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Material_2) == 0x0003D8, "Member 'ATunnel_Entrance_BP_C::Material_2' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Material_3) == 0x0003E0, "Member 'ATunnel_Entrance_BP_C::Material_3' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Material_4) == 0x0003E8, "Member 'ATunnel_Entrance_BP_C::Material_4' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Material_5) == 0x0003F0, "Member 'ATunnel_Entrance_BP_C::Material_5' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Material_6) == 0x0003F8, "Member 'ATunnel_Entrance_BP_C::Material_6' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Material_7) == 0x000400, "Member 'ATunnel_Entrance_BP_C::Material_7' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Sidewalk_Material_0) == 0x000408, "Member 'ATunnel_Entrance_BP_C::Sidewalk_Material_0' has a wrong offset!");
static_assert(offsetof(ATunnel_Entrance_BP_C, Sidewalk_Material_1) == 0x000410, "Member 'ATunnel_Entrance_BP_C::Sidewalk_Material_1' has a wrong offset!");

}

