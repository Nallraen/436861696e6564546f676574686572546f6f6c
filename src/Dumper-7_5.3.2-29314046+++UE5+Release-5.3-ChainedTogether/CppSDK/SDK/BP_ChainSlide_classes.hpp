#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChainSlide

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ChainSlide.BP_ChainSlide_C
// 0x0070 (0x0308 - 0x0298)
class ABP_ChainSlide_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh3;                                       // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh6;                                       // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh5;                                       // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh2;                                       // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cylinder1;                                         // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box1;                                              // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cylinder;                                          // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          AddForceToPlayers;                                 // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_ChainSlide_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_ChainSlide_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ExecuteUbergraph_BP_ChainSlide(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ChainSlide_C">();
	}
	static class ABP_ChainSlide_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ChainSlide_C>();
	}
};
static_assert(alignof(ABP_ChainSlide_C) == 0x000008, "Wrong alignment on ABP_ChainSlide_C");
static_assert(sizeof(ABP_ChainSlide_C) == 0x000308, "Wrong size on ABP_ChainSlide_C");
static_assert(offsetof(ABP_ChainSlide_C, UberGraphFrame) == 0x000298, "Member 'ABP_ChainSlide_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ChainSlide_C, StaticMesh3) == 0x0002A0, "Member 'ABP_ChainSlide_C::StaticMesh3' has a wrong offset!");
static_assert(offsetof(ABP_ChainSlide_C, StaticMesh6) == 0x0002A8, "Member 'ABP_ChainSlide_C::StaticMesh6' has a wrong offset!");
static_assert(offsetof(ABP_ChainSlide_C, StaticMesh5) == 0x0002B0, "Member 'ABP_ChainSlide_C::StaticMesh5' has a wrong offset!");
static_assert(offsetof(ABP_ChainSlide_C, StaticMesh2) == 0x0002B8, "Member 'ABP_ChainSlide_C::StaticMesh2' has a wrong offset!");
static_assert(offsetof(ABP_ChainSlide_C, Cylinder1) == 0x0002C0, "Member 'ABP_ChainSlide_C::Cylinder1' has a wrong offset!");
static_assert(offsetof(ABP_ChainSlide_C, StaticMesh1) == 0x0002C8, "Member 'ABP_ChainSlide_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(ABP_ChainSlide_C, Box1) == 0x0002D0, "Member 'ABP_ChainSlide_C::Box1' has a wrong offset!");
static_assert(offsetof(ABP_ChainSlide_C, Arrow) == 0x0002D8, "Member 'ABP_ChainSlide_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_ChainSlide_C, Box) == 0x0002E0, "Member 'ABP_ChainSlide_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_ChainSlide_C, StaticMesh) == 0x0002E8, "Member 'ABP_ChainSlide_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_ChainSlide_C, Cylinder) == 0x0002F0, "Member 'ABP_ChainSlide_C::Cylinder' has a wrong offset!");
static_assert(offsetof(ABP_ChainSlide_C, DefaultSceneRoot) == 0x0002F8, "Member 'ABP_ChainSlide_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ChainSlide_C, AddForceToPlayers) == 0x000300, "Member 'ABP_ChainSlide_C::AddForceToPlayers' has a wrong offset!");

}

