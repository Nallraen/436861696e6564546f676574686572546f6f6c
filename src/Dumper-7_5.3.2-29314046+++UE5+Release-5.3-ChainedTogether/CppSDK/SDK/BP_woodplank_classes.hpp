#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_woodplank

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_woodplank.BP_woodplank_C
// 0x0038 (0x02D0 - 0x0298)
class ABP_woodplank_C final : public AActor
{
public:
	class USplineComponent*                       Spline;                                            // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        Length;                                            // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            StaticMesh;                                        // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            StaticMesh_02;                                     // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            StaticMesh_03;                                     // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            StaticMesh_04;                                     // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_woodplank_C">();
	}
	static class ABP_woodplank_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_woodplank_C>();
	}
};
static_assert(alignof(ABP_woodplank_C) == 0x000008, "Wrong alignment on ABP_woodplank_C");
static_assert(sizeof(ABP_woodplank_C) == 0x0002D0, "Wrong size on ABP_woodplank_C");
static_assert(offsetof(ABP_woodplank_C, Spline) == 0x000298, "Member 'ABP_woodplank_C::Spline' has a wrong offset!");
static_assert(offsetof(ABP_woodplank_C, DefaultSceneRoot) == 0x0002A0, "Member 'ABP_woodplank_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_woodplank_C, Length) == 0x0002A8, "Member 'ABP_woodplank_C::Length' has a wrong offset!");
static_assert(offsetof(ABP_woodplank_C, StaticMesh) == 0x0002B0, "Member 'ABP_woodplank_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_woodplank_C, StaticMesh_02) == 0x0002B8, "Member 'ABP_woodplank_C::StaticMesh_02' has a wrong offset!");
static_assert(offsetof(ABP_woodplank_C, StaticMesh_03) == 0x0002C0, "Member 'ABP_woodplank_C::StaticMesh_03' has a wrong offset!");
static_assert(offsetof(ABP_woodplank_C, StaticMesh_04) == 0x0002C8, "Member 'ABP_woodplank_C::StaticMesh_04' has a wrong offset!");

}

