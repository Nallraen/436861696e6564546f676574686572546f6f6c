#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OmbrelleRebondissante

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_OmbrelleRebondissante.BP_OmbrelleRebondissante_C.BndEvt__BP_OmbrelleRebondissante_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_OmbrelleRebondissante_C_BndEvt__BP_OmbrelleRebondissante_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3820[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_OmbrelleRebondissante_C_BndEvt__BP_OmbrelleRebondissante_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_OmbrelleRebondissante_C_BndEvt__BP_OmbrelleRebondissante_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_OmbrelleRebondissante_C_BndEvt__BP_OmbrelleRebondissante_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_OmbrelleRebondissante_C_BndEvt__BP_OmbrelleRebondissante_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_OmbrelleRebondissante_C_BndEvt__BP_OmbrelleRebondissante_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_OmbrelleRebondissante_C_BndEvt__BP_OmbrelleRebondissante_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_BndEvt__BP_OmbrelleRebondissante_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_OmbrelleRebondissante_C_BndEvt__BP_OmbrelleRebondissante_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_BndEvt__BP_OmbrelleRebondissante_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_OmbrelleRebondissante_C_BndEvt__BP_OmbrelleRebondissante_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_BndEvt__BP_OmbrelleRebondissante_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_OmbrelleRebondissante_C_BndEvt__BP_OmbrelleRebondissante_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_BndEvt__BP_OmbrelleRebondissante_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_OmbrelleRebondissante_C_BndEvt__BP_OmbrelleRebondissante_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_BndEvt__BP_OmbrelleRebondissante_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_OmbrelleRebondissante_C_BndEvt__BP_OmbrelleRebondissante_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_OmbrelleRebondissante.BP_OmbrelleRebondissante_C.ExecuteUbergraph_BP_OmbrelleRebondissante
// 0x02B8 (0x02B8 - 0x0000)
struct BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3821[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3822[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3823[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0030(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Character_C>      K2Node_DynamicCast_AsBPI_Character;                // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3824[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3825[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult;    // 0x0160(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante) == 0x000008, "Wrong alignment on BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante");
static_assert(sizeof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante) == 0x0002B8, "Wrong size on BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, EntryPoint) == 0x000000, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000010, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, K2Node_ComponentBoundEvent_OtherActor) == 0x000018, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, K2Node_ComponentBoundEvent_OtherComp) == 0x000020, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000028, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, K2Node_ComponentBoundEvent_bFromSweep) == 0x00002C, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, K2Node_ComponentBoundEvent_SweepResult) == 0x000030, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000118, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, K2Node_DynamicCast_AsBPI_Character) == 0x000120, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::K2Node_DynamicCast_AsBPI_Character' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, CallFunc_MakeRotator_ReturnValue) == 0x000138, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, K2Node_DynamicCast_AsPawn) == 0x000150, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, K2Node_DynamicCast_bSuccess_1) == 0x000158, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, CallFunc_K2_AddRelativeRotation_SweepHitResult) == 0x000160, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::CallFunc_K2_AddRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000248, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, CallFunc_BreakVector_X) == 0x000260, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, CallFunc_BreakVector_Y) == 0x000268, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, CallFunc_BreakVector_Z) == 0x000270, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, CallFunc_MakeVector_ReturnValue) == 0x000278, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, CallFunc_VLerp_ReturnValue) == 0x000290, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0002A8, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0002B0, "Member 'BP_OmbrelleRebondissante_C_ExecuteUbergraph_BP_OmbrelleRebondissante::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_OmbrelleRebondissante.BP_OmbrelleRebondissante_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_OmbrelleRebondissante_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OmbrelleRebondissante_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_OmbrelleRebondissante_C_ReceiveTick");
static_assert(sizeof(BP_OmbrelleRebondissante_C_ReceiveTick) == 0x000004, "Wrong size on BP_OmbrelleRebondissante_C_ReceiveTick");
static_assert(offsetof(BP_OmbrelleRebondissante_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_OmbrelleRebondissante_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_OmbrelleRebondissante.BP_OmbrelleRebondissante_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct BP_OmbrelleRebondissante_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OmbrelleRebondissante_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_OmbrelleRebondissante_C_UserConstructionScript");
static_assert(sizeof(BP_OmbrelleRebondissante_C_UserConstructionScript) == 0x000001, "Wrong size on BP_OmbrelleRebondissante_C_UserConstructionScript");
static_assert(offsetof(BP_OmbrelleRebondissante_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000000, "Member 'BP_OmbrelleRebondissante_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

}

