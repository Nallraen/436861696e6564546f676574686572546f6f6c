#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Bind

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_BindParams_structs.hpp"
#include "InputCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Bind.W_Bind_C
// 0x00A0 (0x0360 - 0x02C0)
class UW_Bind_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UInputKeySelector*                      InputKeySelector_97;                               // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        StepSize;                                          // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        MinValue;                                          // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        MaxValue;                                          // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnValueChanged;                                    // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FString                                 Identifier;                                        // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   Input_Name;                                        // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_BindParams                          Bind_Settings;                                     // 0x0310(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FName                                   Mapping_Name;                                      // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   SelectedKey;                                       // 0x0348(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void BndEvt__W_Bind_InputKeySelector_97_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature(const struct FInputChord& Param_SelectedKey);
	void ExecuteUbergraph_W_Bind(int32 EntryPoint);
	bool GetAxisByPositive(TArray<struct FInputAxisKeyMapping>& Array, bool IsPositive, struct FInputAxisKeyMapping* Array_Element);
	void OnValueChanged__DelegateSignature(double Value, const class FString& Setting);
	void RefreshAction(const struct FInputChord& InputChord);
	void RefreshAxis(const struct FInputChord& InputChord);
	void RefreshBind(const struct FPlayerKeyMapping& Key);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Bind_C">();
	}
	static class UW_Bind_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Bind_C>();
	}
};
static_assert(alignof(UW_Bind_C) == 0x000008, "Wrong alignment on UW_Bind_C");
static_assert(sizeof(UW_Bind_C) == 0x000360, "Wrong size on UW_Bind_C");
static_assert(offsetof(UW_Bind_C, UberGraphFrame) == 0x0002C0, "Member 'UW_Bind_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Bind_C, InputKeySelector_97) == 0x0002C8, "Member 'UW_Bind_C::InputKeySelector_97' has a wrong offset!");
static_assert(offsetof(UW_Bind_C, StepSize) == 0x0002D0, "Member 'UW_Bind_C::StepSize' has a wrong offset!");
static_assert(offsetof(UW_Bind_C, MinValue) == 0x0002D8, "Member 'UW_Bind_C::MinValue' has a wrong offset!");
static_assert(offsetof(UW_Bind_C, MaxValue) == 0x0002E0, "Member 'UW_Bind_C::MaxValue' has a wrong offset!");
static_assert(offsetof(UW_Bind_C, OnValueChanged) == 0x0002E8, "Member 'UW_Bind_C::OnValueChanged' has a wrong offset!");
static_assert(offsetof(UW_Bind_C, Identifier) == 0x0002F8, "Member 'UW_Bind_C::Identifier' has a wrong offset!");
static_assert(offsetof(UW_Bind_C, Input_Name) == 0x000308, "Member 'UW_Bind_C::Input_Name' has a wrong offset!");
static_assert(offsetof(UW_Bind_C, Bind_Settings) == 0x000310, "Member 'UW_Bind_C::Bind_Settings' has a wrong offset!");
static_assert(offsetof(UW_Bind_C, Mapping_Name) == 0x000340, "Member 'UW_Bind_C::Mapping_Name' has a wrong offset!");
static_assert(offsetof(UW_Bind_C, SelectedKey) == 0x000348, "Member 'UW_Bind_C::SelectedKey' has a wrong offset!");

}

