#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpawningPad

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SpawningPad.BP_SpawningPad_C
// 0x0050 (0x02E8 - 0x0298)
class ABP_SpawningPad_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          AntiBugBox;                                        // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_SpawningPad_C*                      PadSuivant;                                        // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          InitiallySpawned;                                  // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3A4A[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               ScreenMat;                                         // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          RequestSpawn;                                      // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4B[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SpawningPad_C*                      PadPrecedent;                                      // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void BndEvt__BP_SpawningPad_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_SpawningPad_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void Despawn();
	void ExecuteUbergraph_BP_SpawningPad(int32 EntryPoint);
	void IsEmpty(bool* Empty);
	void ReceiveBeginPlay();
	void Spawn();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SpawningPad_C">();
	}
	static class ABP_SpawningPad_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SpawningPad_C>();
	}
};
static_assert(alignof(ABP_SpawningPad_C) == 0x000008, "Wrong alignment on ABP_SpawningPad_C");
static_assert(sizeof(ABP_SpawningPad_C) == 0x0002E8, "Wrong size on ABP_SpawningPad_C");
static_assert(offsetof(ABP_SpawningPad_C, UberGraphFrame) == 0x000298, "Member 'ABP_SpawningPad_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SpawningPad_C, AntiBugBox) == 0x0002A0, "Member 'ABP_SpawningPad_C::AntiBugBox' has a wrong offset!");
static_assert(offsetof(ABP_SpawningPad_C, Box) == 0x0002A8, "Member 'ABP_SpawningPad_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_SpawningPad_C, StaticMesh) == 0x0002B0, "Member 'ABP_SpawningPad_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_SpawningPad_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_SpawningPad_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_SpawningPad_C, PadSuivant) == 0x0002C0, "Member 'ABP_SpawningPad_C::PadSuivant' has a wrong offset!");
static_assert(offsetof(ABP_SpawningPad_C, InitiallySpawned) == 0x0002C8, "Member 'ABP_SpawningPad_C::InitiallySpawned' has a wrong offset!");
static_assert(offsetof(ABP_SpawningPad_C, ScreenMat) == 0x0002D0, "Member 'ABP_SpawningPad_C::ScreenMat' has a wrong offset!");
static_assert(offsetof(ABP_SpawningPad_C, RequestSpawn) == 0x0002D8, "Member 'ABP_SpawningPad_C::RequestSpawn' has a wrong offset!");
static_assert(offsetof(ABP_SpawningPad_C, PadPrecedent) == 0x0002E0, "Member 'ABP_SpawningPad_C::PadPrecedent' has a wrong offset!");

}

