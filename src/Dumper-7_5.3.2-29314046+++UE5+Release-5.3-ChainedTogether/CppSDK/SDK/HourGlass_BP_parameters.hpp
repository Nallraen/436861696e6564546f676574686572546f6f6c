#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HourGlass_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function HourGlass_BP.HourGlass_BP_C.ExecuteUbergraph_HourGlass_BP
// 0x0108 (0x0108 - 0x0000)
struct HourGlass_BP_C_ExecuteUbergraph_HourGlass_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B12[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_CustomEvent_NewRotation;                    // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0020(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(HourGlass_BP_C_ExecuteUbergraph_HourGlass_BP) == 0x000008, "Wrong alignment on HourGlass_BP_C_ExecuteUbergraph_HourGlass_BP");
static_assert(sizeof(HourGlass_BP_C_ExecuteUbergraph_HourGlass_BP) == 0x000108, "Wrong size on HourGlass_BP_C_ExecuteUbergraph_HourGlass_BP");
static_assert(offsetof(HourGlass_BP_C_ExecuteUbergraph_HourGlass_BP, EntryPoint) == 0x000000, "Member 'HourGlass_BP_C_ExecuteUbergraph_HourGlass_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(HourGlass_BP_C_ExecuteUbergraph_HourGlass_BP, K2Node_CustomEvent_NewRotation) == 0x000008, "Member 'HourGlass_BP_C_ExecuteUbergraph_HourGlass_BP::K2Node_CustomEvent_NewRotation' has a wrong offset!");
static_assert(offsetof(HourGlass_BP_C_ExecuteUbergraph_HourGlass_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000020, "Member 'HourGlass_BP_C_ExecuteUbergraph_HourGlass_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function HourGlass_BP.HourGlass_BP_C.SetHourglassRelativeRot
// 0x0018 (0x0018 - 0x0000)
struct HourGlass_BP_C_SetHourglassRelativeRot final
{
public:
	struct FRotator                               NewRotation;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HourGlass_BP_C_SetHourglassRelativeRot) == 0x000008, "Wrong alignment on HourGlass_BP_C_SetHourglassRelativeRot");
static_assert(sizeof(HourGlass_BP_C_SetHourglassRelativeRot) == 0x000018, "Wrong size on HourGlass_BP_C_SetHourglassRelativeRot");
static_assert(offsetof(HourGlass_BP_C_SetHourglassRelativeRot, NewRotation) == 0x000000, "Member 'HourGlass_BP_C_SetHourglassRelativeRot::NewRotation' has a wrong offset!");

}

