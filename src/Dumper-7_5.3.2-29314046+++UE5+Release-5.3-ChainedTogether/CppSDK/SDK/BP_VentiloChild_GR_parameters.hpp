#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VentiloChild_GR

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_VentiloChild_GR.BP_VentiloChild_GR_C.ExecuteUbergraph_BP_VentiloChild_GR
// 0x0130 (0x0130 - 0x0000)
struct BP_VentiloChild_GR_C_ExecuteUbergraph_BP_VentiloChild_GR final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1D[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0048(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_VentiloChild_GR_C_ExecuteUbergraph_BP_VentiloChild_GR) == 0x000008, "Wrong alignment on BP_VentiloChild_GR_C_ExecuteUbergraph_BP_VentiloChild_GR");
static_assert(sizeof(BP_VentiloChild_GR_C_ExecuteUbergraph_BP_VentiloChild_GR) == 0x000130, "Wrong size on BP_VentiloChild_GR_C_ExecuteUbergraph_BP_VentiloChild_GR");
static_assert(offsetof(BP_VentiloChild_GR_C_ExecuteUbergraph_BP_VentiloChild_GR, EntryPoint) == 0x000000, "Member 'BP_VentiloChild_GR_C_ExecuteUbergraph_BP_VentiloChild_GR::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VentiloChild_GR_C_ExecuteUbergraph_BP_VentiloChild_GR, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_VentiloChild_GR_C_ExecuteUbergraph_BP_VentiloChild_GR::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_VentiloChild_GR_C_ExecuteUbergraph_BP_VentiloChild_GR, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000008, "Member 'BP_VentiloChild_GR_C_ExecuteUbergraph_BP_VentiloChild_GR::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VentiloChild_GR_C_ExecuteUbergraph_BP_VentiloChild_GR, CallFunc_BreakRotator_Roll) == 0x000020, "Member 'BP_VentiloChild_GR_C_ExecuteUbergraph_BP_VentiloChild_GR::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_VentiloChild_GR_C_ExecuteUbergraph_BP_VentiloChild_GR, CallFunc_BreakRotator_Pitch) == 0x000024, "Member 'BP_VentiloChild_GR_C_ExecuteUbergraph_BP_VentiloChild_GR::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_VentiloChild_GR_C_ExecuteUbergraph_BP_VentiloChild_GR, CallFunc_BreakRotator_Yaw) == 0x000028, "Member 'BP_VentiloChild_GR_C_ExecuteUbergraph_BP_VentiloChild_GR::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_VentiloChild_GR_C_ExecuteUbergraph_BP_VentiloChild_GR, CallFunc_MakeRotator_ReturnValue) == 0x000030, "Member 'BP_VentiloChild_GR_C_ExecuteUbergraph_BP_VentiloChild_GR::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VentiloChild_GR_C_ExecuteUbergraph_BP_VentiloChild_GR, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000048, "Member 'BP_VentiloChild_GR_C_ExecuteUbergraph_BP_VentiloChild_GR::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

// Function BP_VentiloChild_GR.BP_VentiloChild_GR_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_VentiloChild_GR_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VentiloChild_GR_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_VentiloChild_GR_C_ReceiveTick");
static_assert(sizeof(BP_VentiloChild_GR_C_ReceiveTick) == 0x000004, "Wrong size on BP_VentiloChild_GR_C_ReceiveTick");
static_assert(offsetof(BP_VentiloChild_GR_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_VentiloChild_GR_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

