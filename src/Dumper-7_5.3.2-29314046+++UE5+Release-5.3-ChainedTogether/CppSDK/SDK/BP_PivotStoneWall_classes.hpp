#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PivotStoneWall

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PivotStoneWall.BP_PivotStoneWall_C
// 0x00A8 (0x0340 - 0x0298)
class ABP_PivotStoneWall_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UC_VinceSync_C*                         C_VinceSync;                                       // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UC_TickOptimizer_C*                     C_TickOptimizer;                                   // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Placer;                                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_25EF2C4A428BA1E35822C4830024A9DA; // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_25EF2C4A428BA1E35822C4830024A9DA; // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AAE[0x3];                                     // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        OpenHeight;                                        // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class AActor*>                         Targets;                                           // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, ExposeOnSpawn)
	int32                                         TargetsDown;                                       // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AAF[0x4];                                     // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Start;                                             // 0x02F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0310(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Open;                                              // 0x0328(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB0[0x7];                                     // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        OpenMin;                                           // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReplicateLocation;                                 // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void CheckDoorOpen();
	void ExecuteUbergraph_BP_PivotStoneWall(int32 EntryPoint);
	void GetPivotAlpha(double* Alpha);
	void IsActivated(bool* Activated);
	void OnPivot(double Axis);
	void OnRep_Open();
	void OpenDoor();
	void Pushed();
	void ReceiveBeginPlay();
	void Released();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PivotStoneWall_C">();
	}
	static class ABP_PivotStoneWall_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PivotStoneWall_C>();
	}
};
static_assert(alignof(ABP_PivotStoneWall_C) == 0x000008, "Wrong alignment on ABP_PivotStoneWall_C");
static_assert(sizeof(ABP_PivotStoneWall_C) == 0x000340, "Wrong size on ABP_PivotStoneWall_C");
static_assert(offsetof(ABP_PivotStoneWall_C, UberGraphFrame) == 0x000298, "Member 'ABP_PivotStoneWall_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PivotStoneWall_C, C_VinceSync) == 0x0002A0, "Member 'ABP_PivotStoneWall_C::C_VinceSync' has a wrong offset!");
static_assert(offsetof(ABP_PivotStoneWall_C, C_TickOptimizer) == 0x0002A8, "Member 'ABP_PivotStoneWall_C::C_TickOptimizer' has a wrong offset!");
static_assert(offsetof(ABP_PivotStoneWall_C, Placer) == 0x0002B0, "Member 'ABP_PivotStoneWall_C::Placer' has a wrong offset!");
static_assert(offsetof(ABP_PivotStoneWall_C, StaticMesh) == 0x0002B8, "Member 'ABP_PivotStoneWall_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_PivotStoneWall_C, DefaultSceneRoot) == 0x0002C0, "Member 'ABP_PivotStoneWall_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_PivotStoneWall_C, Timeline_0_NewTrack_0_25EF2C4A428BA1E35822C4830024A9DA) == 0x0002C8, "Member 'ABP_PivotStoneWall_C::Timeline_0_NewTrack_0_25EF2C4A428BA1E35822C4830024A9DA' has a wrong offset!");
static_assert(offsetof(ABP_PivotStoneWall_C, Timeline_0__Direction_25EF2C4A428BA1E35822C4830024A9DA) == 0x0002CC, "Member 'ABP_PivotStoneWall_C::Timeline_0__Direction_25EF2C4A428BA1E35822C4830024A9DA' has a wrong offset!");
static_assert(offsetof(ABP_PivotStoneWall_C, Timeline_0) == 0x0002D0, "Member 'ABP_PivotStoneWall_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_PivotStoneWall_C, OpenHeight) == 0x0002D8, "Member 'ABP_PivotStoneWall_C::OpenHeight' has a wrong offset!");
static_assert(offsetof(ABP_PivotStoneWall_C, Targets) == 0x0002E0, "Member 'ABP_PivotStoneWall_C::Targets' has a wrong offset!");
static_assert(offsetof(ABP_PivotStoneWall_C, TargetsDown) == 0x0002F0, "Member 'ABP_PivotStoneWall_C::TargetsDown' has a wrong offset!");
static_assert(offsetof(ABP_PivotStoneWall_C, Start) == 0x0002F8, "Member 'ABP_PivotStoneWall_C::Start' has a wrong offset!");
static_assert(offsetof(ABP_PivotStoneWall_C, End) == 0x000310, "Member 'ABP_PivotStoneWall_C::End' has a wrong offset!");
static_assert(offsetof(ABP_PivotStoneWall_C, Open) == 0x000328, "Member 'ABP_PivotStoneWall_C::Open' has a wrong offset!");
static_assert(offsetof(ABP_PivotStoneWall_C, OpenMin) == 0x000330, "Member 'ABP_PivotStoneWall_C::OpenMin' has a wrong offset!");
static_assert(offsetof(ABP_PivotStoneWall_C, ReplicateLocation) == 0x000338, "Member 'ABP_PivotStoneWall_C::ReplicateLocation' has a wrong offset!");

}

