#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Pivot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Pivot.BP_Pivot_C.ExecuteUbergraph_BP_Pivot
// 0x02E0 (0x02E0 - 0x0000)
struct BP_Pivot_C_ExecuteUbergraph_BP_Pivot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PivotAction_C>    K2Node_DynamicCast_AsBPI_Pivot_Action;             // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC2[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetPivotAlpha_Alpha;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC3[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PivotAction_C>    K2Node_DynamicCast_AsBPI_Pivot_Action_1;           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC4[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetPivotAlpha_Alpha_1;                    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC5[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC6[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x0090(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_UpdateTurn_TurnRate;                      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult_1;     // 0x01B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC7[0x7];                                     // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumPlayers_ReturnValue;                // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC8[0x2];                                     // 0x02C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot) == 0x000008, "Wrong alignment on BP_Pivot_C_ExecuteUbergraph_BP_Pivot");
static_assert(sizeof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot) == 0x0002E0, "Wrong size on BP_Pivot_C_ExecuteUbergraph_BP_Pivot");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, EntryPoint) == 0x000000, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, K2Node_DynamicCast_AsBPI_Pivot_Action) == 0x000010, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::K2Node_DynamicCast_AsBPI_Pivot_Action' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_GetPivotAlpha_Alpha) == 0x000028, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_GetPivotAlpha_Alpha' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, K2Node_DynamicCast_AsBPI_Pivot_Action_1) == 0x000038, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::K2Node_DynamicCast_AsBPI_Pivot_Action_1' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_GetPivotAlpha_Alpha_1) == 0x000050, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_GetPivotAlpha_Alpha_1' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000058, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_MakeRotator_ReturnValue) == 0x000070, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x000090, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_UpdateTurn_TurnRate) == 0x000178, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_UpdateTurn_TurnRate' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000180, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x000188, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000190, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_SelectFloat_ReturnValue) == 0x000198, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_MakeRotator_ReturnValue_1) == 0x0001A0, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_K2_AddLocalRotation_SweepHitResult_1) == 0x0001B8, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_K2_AddLocalRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0002A0, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_SelectFloat_ReturnValue_1) == 0x0002A8, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_SelectFloat_ReturnValue_2) == 0x0002B0, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_FInterpTo_ReturnValue) == 0x0002B8, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_GetNumPlayers_ReturnValue) == 0x0002C0, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_GetNumPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_HasAuthority_ReturnValue) == 0x0002C4, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_Greater_IntInt_ReturnValue) == 0x0002C5, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_SelectFloat_ReturnValue_3) == 0x0002C8, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_SelectFloat_ReturnValue_4) == 0x0002D0, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0002D8, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_ExecuteUbergraph_BP_Pivot, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x0002DC, "Member 'BP_Pivot_C_ExecuteUbergraph_BP_Pivot::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");

// Function BP_Pivot.BP_Pivot_C.IsSomeoneInside
// 0x0040 (0x0040 - 0x0000)
struct BP_Pivot_C_IsSomeoneInside final
{
public:
	TArray<class UBoxComponent*>                  Boxes;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC9[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ACA[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pivot_C_IsSomeoneInside) == 0x000008, "Wrong alignment on BP_Pivot_C_IsSomeoneInside");
static_assert(sizeof(BP_Pivot_C_IsSomeoneInside) == 0x000040, "Wrong size on BP_Pivot_C_IsSomeoneInside");
static_assert(offsetof(BP_Pivot_C_IsSomeoneInside, Boxes) == 0x000000, "Member 'BP_Pivot_C_IsSomeoneInside::Boxes' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_IsSomeoneInside, ReturnValue) == 0x000010, "Member 'BP_Pivot_C_IsSomeoneInside::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_IsSomeoneInside, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_Pivot_C_IsSomeoneInside::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_IsSomeoneInside, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_Pivot_C_IsSomeoneInside::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_IsSomeoneInside, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_Pivot_C_IsSomeoneInside::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_IsSomeoneInside, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_Pivot_C_IsSomeoneInside::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_IsSomeoneInside, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000028, "Member 'BP_Pivot_C_IsSomeoneInside::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_IsSomeoneInside, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_Pivot_C_IsSomeoneInside::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_IsSomeoneInside, CallFunc_Array_IsEmpty_ReturnValue) == 0x000039, "Member 'BP_Pivot_C_IsSomeoneInside::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_IsSomeoneInside, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_Pivot_C_IsSomeoneInside::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Pivot.BP_Pivot_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Pivot_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pivot_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Pivot_C_ReceiveTick");
static_assert(sizeof(BP_Pivot_C_ReceiveTick) == 0x000004, "Wrong size on BP_Pivot_C_ReceiveTick");
static_assert(offsetof(BP_Pivot_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Pivot_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Pivot.BP_Pivot_C.UpdateActorToInteractWith
// 0x0058 (0x0058 - 0x0000)
struct BP_Pivot_C_UpdateActorToInteractWith final
{
public:
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue; // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PivotAction_C>    K2Node_DynamicCast_AsBPI_Pivot_Action;             // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ACB[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pivot_C_UpdateActorToInteractWith) == 0x000008, "Wrong alignment on BP_Pivot_C_UpdateActorToInteractWith");
static_assert(sizeof(BP_Pivot_C_UpdateActorToInteractWith) == 0x000058, "Wrong size on BP_Pivot_C_UpdateActorToInteractWith");
static_assert(offsetof(BP_Pivot_C_UpdateActorToInteractWith, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'BP_Pivot_C_UpdateActorToInteractWith::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_UpdateActorToInteractWith, CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue) == 0x000008, "Member 'BP_Pivot_C_UpdateActorToInteractWith::CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_UpdateActorToInteractWith, K2Node_DynamicCast_AsBPI_Pivot_Action) == 0x000020, "Member 'BP_Pivot_C_UpdateActorToInteractWith::K2Node_DynamicCast_AsBPI_Pivot_Action' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_UpdateActorToInteractWith, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Pivot_C_UpdateActorToInteractWith::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_UpdateActorToInteractWith, CallFunc_BreakVector_X) == 0x000038, "Member 'BP_Pivot_C_UpdateActorToInteractWith::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_UpdateActorToInteractWith, CallFunc_BreakVector_Y) == 0x000040, "Member 'BP_Pivot_C_UpdateActorToInteractWith::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_UpdateActorToInteractWith, CallFunc_BreakVector_Z) == 0x000048, "Member 'BP_Pivot_C_UpdateActorToInteractWith::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_UpdateActorToInteractWith, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_Pivot_C_UpdateActorToInteractWith::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_Pivot.BP_Pivot_C.UpdateTurn
// 0x0048 (0x0048 - 0x0000)
struct BP_Pivot_C_UpdateTurn final
{
public:
	double                                        Param_TurnRate;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewLocalVar;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBoxComponent*>                  K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsSomeoneInside_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ACC[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBoxComponent*>                  K2Node_MakeArray_Array_1;                          // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsSomeoneInside_ReturnValue_1;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pivot_C_UpdateTurn) == 0x000008, "Wrong alignment on BP_Pivot_C_UpdateTurn");
static_assert(sizeof(BP_Pivot_C_UpdateTurn) == 0x000048, "Wrong size on BP_Pivot_C_UpdateTurn");
static_assert(offsetof(BP_Pivot_C_UpdateTurn, Param_TurnRate) == 0x000000, "Member 'BP_Pivot_C_UpdateTurn::Param_TurnRate' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_UpdateTurn, NewLocalVar) == 0x000008, "Member 'BP_Pivot_C_UpdateTurn::NewLocalVar' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_UpdateTurn, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_Pivot_C_UpdateTurn::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_UpdateTurn, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_Pivot_C_UpdateTurn::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_UpdateTurn, CallFunc_IsSomeoneInside_ReturnValue) == 0x000028, "Member 'BP_Pivot_C_UpdateTurn::CallFunc_IsSomeoneInside_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_UpdateTurn, K2Node_MakeArray_Array_1) == 0x000030, "Member 'BP_Pivot_C_UpdateTurn::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_UpdateTurn, CallFunc_IsSomeoneInside_ReturnValue_1) == 0x000040, "Member 'BP_Pivot_C_UpdateTurn::CallFunc_IsSomeoneInside_ReturnValue_1' has a wrong offset!");

// Function BP_Pivot.BP_Pivot_C.UserConstructionScript
// 0x0038 (0x0038 - 0x0000)
struct BP_Pivot_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ACD[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBoxComponent*>                  K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ACE[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pivot_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Pivot_C_UserConstructionScript");
static_assert(sizeof(BP_Pivot_C_UserConstructionScript) == 0x000038, "Wrong size on BP_Pivot_C_UserConstructionScript");
static_assert(offsetof(BP_Pivot_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Pivot_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Pivot_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Pivot_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_Pivot_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_Pivot_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_Pivot_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Pivot_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_Pivot_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

