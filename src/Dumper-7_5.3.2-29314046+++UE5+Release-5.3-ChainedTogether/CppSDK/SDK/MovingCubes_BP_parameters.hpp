#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MovingCubes_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function MovingCubes_BP.MovingCubes_BP_C.ExecuteUbergraph_MovingCubes_BP
// 0x03F0 (0x03F0 - 0x0000)
struct MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Temp_struct_Variable;                              // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_1;                            // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_2;                            // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_3;                            // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Start;                          // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B5B[0x1];                                     // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x01A0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B5C[0x4];                                     // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_CustomEvent_CurrentRot;                     // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_CustomEvent_NewRot;                         // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default;                             // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0308(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP) == 0x000008, "Wrong alignment on MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP");
static_assert(sizeof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP) == 0x0003F0, "Wrong size on MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, EntryPoint) == 0x000000, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, Temp_int_Variable) == 0x000004, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, Temp_struct_Variable) == 0x000008, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, Temp_struct_Variable_1) == 0x000020, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, Temp_struct_Variable_2) == 0x000038, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, Temp_struct_Variable_3) == 0x000050, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, Temp_bool_Variable) == 0x000068, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, CallFunc_Not_PreBool_ReturnValue) == 0x000069, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, CallFunc_HasAuthority_ReturnValue) == 0x00006A, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, CallFunc_HasAuthority_ReturnValue_1) == 0x00006B, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, CallFunc_HasAuthority_ReturnValue_2) == 0x00006C, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, K2Node_CustomEvent_Start) == 0x00006D, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::K2Node_CustomEvent_Start' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, CallFunc_HasAuthority_ReturnValue_3) == 0x00006E, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000070, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000088, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, CallFunc_VLerp_ReturnValue) == 0x0000A0, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000B8, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0001A0, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000288, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, K2Node_CustomEvent_CurrentRot) == 0x000290, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::K2Node_CustomEvent_CurrentRot' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, K2Node_CustomEvent_NewRot) == 0x0002A8, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::K2Node_CustomEvent_NewRot' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, CallFunc_ComposeRotators_ReturnValue) == 0x0002C0, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, K2Node_Select_Default) == 0x0002D8, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, CallFunc_RLerp_ReturnValue) == 0x0002F0, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000308, "Member 'MovingCubes_BP_C_ExecuteUbergraph_MovingCubes_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");

// Function MovingCubes_BP.MovingCubes_BP_C.Movesrv
// 0x0001 (0x0001 - 0x0000)
struct MovingCubes_BP_C_Movesrv final
{
public:
	bool                                          Start;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MovingCubes_BP_C_Movesrv) == 0x000001, "Wrong alignment on MovingCubes_BP_C_Movesrv");
static_assert(sizeof(MovingCubes_BP_C_Movesrv) == 0x000001, "Wrong size on MovingCubes_BP_C_Movesrv");
static_assert(offsetof(MovingCubes_BP_C_Movesrv, Start) == 0x000000, "Member 'MovingCubes_BP_C_Movesrv::Start' has a wrong offset!");

// Function MovingCubes_BP.MovingCubes_BP_C.RotateAll
// 0x0030 (0x0030 - 0x0000)
struct MovingCubes_BP_C_RotateAll final
{
public:
	struct FRotator                               CurrentRot;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               NewRot;                                            // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MovingCubes_BP_C_RotateAll) == 0x000008, "Wrong alignment on MovingCubes_BP_C_RotateAll");
static_assert(sizeof(MovingCubes_BP_C_RotateAll) == 0x000030, "Wrong size on MovingCubes_BP_C_RotateAll");
static_assert(offsetof(MovingCubes_BP_C_RotateAll, CurrentRot) == 0x000000, "Member 'MovingCubes_BP_C_RotateAll::CurrentRot' has a wrong offset!");
static_assert(offsetof(MovingCubes_BP_C_RotateAll, NewRot) == 0x000018, "Member 'MovingCubes_BP_C_RotateAll::NewRot' has a wrong offset!");

// Function MovingCubes_BP.MovingCubes_BP_C.UserConstructionScript
// 0x00E8 (0x00E8 - 0x0000)
struct MovingCubes_BP_C_UserConstructionScript final
{
public:
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0000(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MovingCubes_BP_C_UserConstructionScript) == 0x000008, "Wrong alignment on MovingCubes_BP_C_UserConstructionScript");
static_assert(sizeof(MovingCubes_BP_C_UserConstructionScript) == 0x0000E8, "Wrong size on MovingCubes_BP_C_UserConstructionScript");
static_assert(offsetof(MovingCubes_BP_C_UserConstructionScript, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000000, "Member 'MovingCubes_BP_C_UserConstructionScript::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

}

