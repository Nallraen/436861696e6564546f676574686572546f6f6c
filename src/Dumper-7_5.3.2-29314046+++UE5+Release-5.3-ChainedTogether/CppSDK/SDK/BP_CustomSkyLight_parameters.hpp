#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CustomSkyLight

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_CustomSkyLight.BP_CustomSkyLight_C.ExecuteUbergraph_BP_CustomSkyLight
// 0x0058 (0x0058 - 0x0000)
struct BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Hell;                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3839[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCubemapBlend_InBlendFraction_ImplicitCast; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight) == 0x000008, "Wrong alignment on BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight");
static_assert(sizeof(BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight) == 0x000058, "Wrong size on BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight");
static_assert(offsetof(BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight, EntryPoint) == 0x000000, "Member 'BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight, K2Node_CustomEvent_Hell) == 0x000010, "Member 'BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight::K2Node_CustomEvent_Hell' has a wrong offset!");
static_assert(offsetof(BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight, CallFunc_BreakVector_X) == 0x000030, "Member 'BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight, CallFunc_BreakVector_Y) == 0x000038, "Member 'BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight, CallFunc_BreakVector_Z) == 0x000040, "Member 'BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight, CallFunc_MapRangeClamped_ReturnValue) == 0x000048, "Member 'BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight, CallFunc_SetCubemapBlend_InBlendFraction_ImplicitCast) == 0x000050, "Member 'BP_CustomSkyLight_C_ExecuteUbergraph_BP_CustomSkyLight::CallFunc_SetCubemapBlend_InBlendFraction_ImplicitCast' has a wrong offset!");

// Function BP_CustomSkyLight.BP_CustomSkyLight_C.HellOverride
// 0x0001 (0x0001 - 0x0000)
struct BP_CustomSkyLight_C_HellOverride final
{
public:
	bool                                          Hell;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomSkyLight_C_HellOverride) == 0x000001, "Wrong alignment on BP_CustomSkyLight_C_HellOverride");
static_assert(sizeof(BP_CustomSkyLight_C_HellOverride) == 0x000001, "Wrong size on BP_CustomSkyLight_C_HellOverride");
static_assert(offsetof(BP_CustomSkyLight_C_HellOverride, Hell) == 0x000000, "Member 'BP_CustomSkyLight_C_HellOverride::Hell' has a wrong offset!");

// Function BP_CustomSkyLight.BP_CustomSkyLight_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_CustomSkyLight_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomSkyLight_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_CustomSkyLight_C_ReceiveTick");
static_assert(sizeof(BP_CustomSkyLight_C_ReceiveTick) == 0x000004, "Wrong size on BP_CustomSkyLight_C_ReceiveTick");
static_assert(offsetof(BP_CustomSkyLight_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_CustomSkyLight_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

