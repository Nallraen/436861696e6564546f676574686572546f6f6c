#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Debris

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Debris.BP_Debris_C
// 0x0040 (0x02D8 - 0x0298)
class ABP_Debris_C final : public AActor
{
public:
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Mesh;                                              // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                Impulse;                                           // 0x02A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Duration;                                          // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Collide;                                           // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3A79[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      Destructible;                                      // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Debris_C">();
	}
	static class ABP_Debris_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Debris_C>();
	}
};
static_assert(alignof(ABP_Debris_C) == 0x000008, "Wrong alignment on ABP_Debris_C");
static_assert(sizeof(ABP_Debris_C) == 0x0002D8, "Wrong size on ABP_Debris_C");
static_assert(offsetof(ABP_Debris_C, DefaultSceneRoot) == 0x000298, "Member 'ABP_Debris_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Debris_C, Mesh) == 0x0002A0, "Member 'ABP_Debris_C::Mesh' has a wrong offset!");
static_assert(offsetof(ABP_Debris_C, Impulse) == 0x0002A8, "Member 'ABP_Debris_C::Impulse' has a wrong offset!");
static_assert(offsetof(ABP_Debris_C, Duration) == 0x0002C0, "Member 'ABP_Debris_C::Duration' has a wrong offset!");
static_assert(offsetof(ABP_Debris_C, Collide) == 0x0002C8, "Member 'ABP_Debris_C::Collide' has a wrong offset!");
static_assert(offsetof(ABP_Debris_C, Destructible) == 0x0002D0, "Member 'ABP_Debris_C::Destructible' has a wrong offset!");

}

