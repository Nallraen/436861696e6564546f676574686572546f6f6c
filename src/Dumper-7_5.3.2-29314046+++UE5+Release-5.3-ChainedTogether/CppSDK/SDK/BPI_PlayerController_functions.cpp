#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_PlayerController

#include "Basic.hpp"

#include "BPI_PlayerController_classes.hpp"
#include "BPI_PlayerController_parameters.hpp"


namespace SDK
{

// Function BPI_PlayerController.BPI_PlayerController_C.GetAudioDevices
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   Devices                                                (Parm, OutParm)

void IBPI_PlayerController_C::GetAudioDevices(TArray<class FString>* Devices)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerController_C", "GetAudioDevices");

	Params::BPI_PlayerController_C_GetAudioDevices Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Devices != nullptr)
		*Devices = std::move(Parms.Devices);
}


// Function BPI_PlayerController.BPI_PlayerController_C.GetControlledActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerController_C::GetControlledActor(class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerController_C", "GetControlledActor");

	Params::BPI_PlayerController_C_GetControlledActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}


// Function BPI_PlayerController.BPI_PlayerController_C.PlayAudioComponent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAudioComponent*                  AudioComponent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerController_C::PlayAudioComponent(class UAudioComponent* AudioComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerController_C", "PlayAudioComponent");

	Params::BPI_PlayerController_C_PlayAudioComponent Parms{};

	Parms.AudioComponent = AudioComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerController.BPI_PlayerController_C.PlaySound
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundWave*                       Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerController_C::PlaySound(class USoundWave* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerController_C", "PlaySound");

	Params::BPI_PlayerController_C_PlaySound Parms{};

	Parms.Sound = Sound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerController.BPI_PlayerController_C.RefreshTestControlChar
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_PlayerController_C::RefreshTestControlChar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerController_C", "RefreshTestControlChar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_PlayerController.BPI_PlayerController_C.RequestCharacterSpawnSRV
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_PlayerController_C::RequestCharacterSpawnSRV()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerController_C", "RequestCharacterSpawnSRV");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_PlayerController.BPI_PlayerController_C.Rescue(Srv)
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              RescueComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ExitingCar                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerController_C::Rescue_Srv_(class UPrimitiveComponent* RescueComponent, bool ExitingCar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerController_C", "Rescue(Srv)");

	Params::BPI_PlayerController_C_Rescue_Srv_ Parms{};

	Parms.RescueComponent = RescueComponent;
	Parms.ExitingCar = ExitingCar;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerController.BPI_PlayerController_C.SendMessageClient
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void IBPI_PlayerController_C::SendMessageClient(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerController_C", "SendMessageClient");

	Params::BPI_PlayerController_C_SendMessageClient Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerController.BPI_PlayerController_C.SetAudioDevice
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Device                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void IBPI_PlayerController_C::SetAudioDevice(const class FString& Device)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerController_C", "SetAudioDevice");

	Params::BPI_PlayerController_C_SetAudioDevice Parms{};

	Parms.Device = std::move(Device);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerController.BPI_PlayerController_C.SetControlledPawn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerController_C::SetControlledPawn(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerController_C", "SetControlledPawn");

	Params::BPI_PlayerController_C_SetControlledPawn Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerController.BPI_PlayerController_C.SetLocalMpChosenChar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ChoosenChar                           Char                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerController_C::SetLocalMpChosenChar(E_ChoosenChar Char)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerController_C", "SetLocalMpChosenChar");

	Params::BPI_PlayerController_C_SetLocalMpChosenChar Parms{};

	Parms.Char = Char;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerController.BPI_PlayerController_C.ShowTchatUI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RefreshTchat                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerController_C::ShowTchatUI(bool RefreshTchat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerController_C", "ShowTchatUI");

	Params::BPI_PlayerController_C_ShowTchatUI Parms{};

	Parms.RefreshTchat = RefreshTchat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerController.BPI_PlayerController_C.SpawnCharacter(Srv)
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_PlayerController_C::SpawnCharacter_Srv_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerController_C", "SpawnCharacter(Srv)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_PlayerController.BPI_PlayerController_C.Trigger Moving Object
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_MovingObject_C*               MovingObject                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerController_C::Trigger_Moving_Object(class ABP_MovingObject_C* MovingObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerController_C", "Trigger Moving Object");

	Params::BPI_PlayerController_C_Trigger_Moving_Object Parms{};

	Parms.MovingObject = MovingObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerController.BPI_PlayerController_C.UpdateCanEscape
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanEscape                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerController_C::UpdateCanEscape(bool CanEscape)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerController_C", "UpdateCanEscape");

	Params::BPI_PlayerController_C_UpdateCanEscape Parms{};

	Parms.CanEscape = CanEscape;

	UObject::ProcessEvent(Func, &Parms);
}

}

