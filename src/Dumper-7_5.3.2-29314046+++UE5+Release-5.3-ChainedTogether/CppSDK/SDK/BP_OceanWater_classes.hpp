#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OceanWater

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_OceanWater.BP_OceanWater_C
// 0x0058 (0x02F0 - 0x0298)
class ABP_OceanWater_C final : public AActor
{
public:
	class UStaticMeshComponent*                   WaterSurface;                                      // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Ocean_Material;                                    // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Water_Scale_X;                                     // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Water_Scale_Y;                                     // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Water_Material;                                    // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Overall_Water_Scale;                               // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Displacement;                                      // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Tesselation_Factor;                                // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Overall_Water_Speed;                               // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Amplify_Large_Normals;                             // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Amplify_Small_Normals;                             // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_OceanWater_C">();
	}
	static class ABP_OceanWater_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_OceanWater_C>();
	}
};
static_assert(alignof(ABP_OceanWater_C) == 0x000008, "Wrong alignment on ABP_OceanWater_C");
static_assert(sizeof(ABP_OceanWater_C) == 0x0002F0, "Wrong size on ABP_OceanWater_C");
static_assert(offsetof(ABP_OceanWater_C, WaterSurface) == 0x000298, "Member 'ABP_OceanWater_C::WaterSurface' has a wrong offset!");
static_assert(offsetof(ABP_OceanWater_C, Ocean_Material) == 0x0002A0, "Member 'ABP_OceanWater_C::Ocean_Material' has a wrong offset!");
static_assert(offsetof(ABP_OceanWater_C, Water_Scale_X) == 0x0002A8, "Member 'ABP_OceanWater_C::Water_Scale_X' has a wrong offset!");
static_assert(offsetof(ABP_OceanWater_C, Water_Scale_Y) == 0x0002B0, "Member 'ABP_OceanWater_C::Water_Scale_Y' has a wrong offset!");
static_assert(offsetof(ABP_OceanWater_C, Water_Material) == 0x0002B8, "Member 'ABP_OceanWater_C::Water_Material' has a wrong offset!");
static_assert(offsetof(ABP_OceanWater_C, Overall_Water_Scale) == 0x0002C0, "Member 'ABP_OceanWater_C::Overall_Water_Scale' has a wrong offset!");
static_assert(offsetof(ABP_OceanWater_C, Displacement) == 0x0002C8, "Member 'ABP_OceanWater_C::Displacement' has a wrong offset!");
static_assert(offsetof(ABP_OceanWater_C, Tesselation_Factor) == 0x0002D0, "Member 'ABP_OceanWater_C::Tesselation_Factor' has a wrong offset!");
static_assert(offsetof(ABP_OceanWater_C, Overall_Water_Speed) == 0x0002D8, "Member 'ABP_OceanWater_C::Overall_Water_Speed' has a wrong offset!");
static_assert(offsetof(ABP_OceanWater_C, Amplify_Large_Normals) == 0x0002E0, "Member 'ABP_OceanWater_C::Amplify_Large_Normals' has a wrong offset!");
static_assert(offsetof(ABP_OceanWater_C, Amplify_Small_Normals) == 0x0002E8, "Member 'ABP_OceanWater_C::Amplify_Small_Normals' has a wrong offset!");

}

