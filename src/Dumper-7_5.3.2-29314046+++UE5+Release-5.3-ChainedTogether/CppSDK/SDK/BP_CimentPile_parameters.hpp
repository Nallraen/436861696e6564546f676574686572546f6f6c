#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CimentPile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_CimentPile.BP_CimentPile_C.Attach
// 0x0008 (0x0008 - 0x0000)
struct BP_CimentPile_C_Attach final
{
public:
	class UPrimitiveComponent*                    Parent;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CimentPile_C_Attach) == 0x000008, "Wrong alignment on BP_CimentPile_C_Attach");
static_assert(sizeof(BP_CimentPile_C_Attach) == 0x000008, "Wrong size on BP_CimentPile_C_Attach");
static_assert(offsetof(BP_CimentPile_C_Attach, Parent) == 0x000000, "Member 'BP_CimentPile_C_Attach::Parent' has a wrong offset!");

// Function BP_CimentPile.BP_CimentPile_C.Detachment
// 0x0358 (0x0358 - 0x0000)
struct BP_CimentPile_C_Detachment final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3603[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	EDrawDebugTrace                               CallFunc_TraceVisibility_Result;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3604[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0080(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3605[0x1];                                     // 0x016B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3606[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3607[0x4];                                     // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0270(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_CimentPile_C_Detachment) == 0x000008, "Wrong alignment on BP_CimentPile_C_Detachment");
static_assert(sizeof(BP_CimentPile_C_Detachment) == 0x000358, "Wrong size on BP_CimentPile_C_Detachment");
static_assert(offsetof(BP_CimentPile_C_Detachment, ReturnValue) == 0x000000, "Member 'BP_CimentPile_C_Detachment::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, Temp_object_Variable) == 0x000008, "Member 'BP_CimentPile_C_Detachment::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_TraceVisibility_Result) == 0x000018, "Member 'BP_CimentPile_C_Detachment::CallFunc_TraceVisibility_Result' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'BP_CimentPile_C_Detachment::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000038, "Member 'BP_CimentPile_C_Detachment::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000050, "Member 'BP_CimentPile_C_Detachment::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakVector_X) == 0x000068, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakVector_Y) == 0x000070, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakVector_Z) == 0x000078, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_LineTraceSingle_OutHit) == 0x000080, "Member 'BP_CimentPile_C_Detachment::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_LineTraceSingle_ReturnValue) == 0x000168, "Member 'BP_CimentPile_C_Detachment::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakHitResult_bBlockingHit) == 0x000169, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakHitResult_bInitialOverlap) == 0x00016A, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakHitResult_Time) == 0x00016C, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakHitResult_Distance) == 0x000170, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakHitResult_Location) == 0x000178, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakHitResult_ImpactPoint) == 0x000190, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakHitResult_Normal) == 0x0001A8, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakHitResult_ImpactNormal) == 0x0001C0, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakHitResult_PhysMat) == 0x0001D8, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakHitResult_HitActor) == 0x0001E0, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakHitResult_HitComponent) == 0x0001E8, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakHitResult_HitBoneName) == 0x0001F0, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakHitResult_BoneName) == 0x0001F8, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakHitResult_HitItem) == 0x000200, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakHitResult_ElementIndex) == 0x000204, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakHitResult_FaceIndex) == 0x000208, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakHitResult_TraceStart) == 0x000210, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakHitResult_TraceEnd) == 0x000228, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakVector_X_1) == 0x000240, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakVector_Y_1) == 0x000248, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_BreakVector_Z_1) == 0x000250, "Member 'BP_CimentPile_C_Detachment::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_MakeVector_ReturnValue) == 0x000258, "Member 'BP_CimentPile_C_Detachment::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_Detachment, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000270, "Member 'BP_CimentPile_C_Detachment::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BP_CimentPile.BP_CimentPile_C.ExecuteUbergraph_BP_CimentPile
// 0x0018 (0x0018 - 0x0000)
struct BP_CimentPile_C_ExecuteUbergraph_BP_CimentPile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3608[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_Parent;                         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CimentPile_C_ExecuteUbergraph_BP_CimentPile) == 0x000008, "Wrong alignment on BP_CimentPile_C_ExecuteUbergraph_BP_CimentPile");
static_assert(sizeof(BP_CimentPile_C_ExecuteUbergraph_BP_CimentPile) == 0x000018, "Wrong size on BP_CimentPile_C_ExecuteUbergraph_BP_CimentPile");
static_assert(offsetof(BP_CimentPile_C_ExecuteUbergraph_BP_CimentPile, EntryPoint) == 0x000000, "Member 'BP_CimentPile_C_ExecuteUbergraph_BP_CimentPile::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_ExecuteUbergraph_BP_CimentPile, K2Node_CustomEvent_Parent) == 0x000008, "Member 'BP_CimentPile_C_ExecuteUbergraph_BP_CimentPile::K2Node_CustomEvent_Parent' has a wrong offset!");
static_assert(offsetof(BP_CimentPile_C_ExecuteUbergraph_BP_CimentPile, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000010, "Member 'BP_CimentPile_C_ExecuteUbergraph_BP_CimentPile::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

}

