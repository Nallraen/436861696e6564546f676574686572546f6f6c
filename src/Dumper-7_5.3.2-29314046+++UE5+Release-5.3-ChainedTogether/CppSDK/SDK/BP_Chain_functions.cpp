#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Chain

#include "Basic.hpp"

#include "BP_Chain_classes.hpp"
#include "BP_Chain_parameters.hpp"


namespace SDK
{

// Function BP_Chain.BP_Chain_C.AdaptCosmeticChain
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Chain_C::AdaptCosmeticChain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "AdaptCosmeticChain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chain.BP_Chain_C.AddCaspule
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HideInGame                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMeshComponent*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UStaticMeshComponent* ABP_Chain_C::AddCaspule(int32 Param_Index, bool HideInGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "AddCaspule");

	Params::BP_Chain_C_AddCaspule Parms{};

	Parms.Param_Index = Param_Index;
	Parms.HideInGame = HideInGame;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Chain.BP_Chain_C.AddChainConstraint
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Component1                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Component2                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::AddChainConstraint(class UPrimitiveComponent* Component1, class UPrimitiveComponent* Component2, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "AddChainConstraint");

	Params::BP_Chain_C_AddChainConstraint Parms{};

	Parms.Component1 = Component1;
	Parms.Component2 = Component2;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.AddCubeSocket
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Relative_Transform_Location                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewHidden                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMeshComponent*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UStaticMeshComponent* ABP_Chain_C::AddCubeSocket(const struct FVector& Relative_Transform_Location, bool NewHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "AddCubeSocket");

	Params::BP_Chain_C_AddCubeSocket Parms{};

	Parms.Relative_Transform_Location = std::move(Relative_Transform_Location);
	Parms.NewHidden = NewHidden;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Chain.BP_Chain_C.AddFakeChain
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::AddFakeChain(int32 Param_Index, bool Start)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "AddFakeChain");

	Params::BP_Chain_C_AddFakeChain Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Start = Start;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.AddImpulseOnSocket
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::AddImpulseOnSocket(class UPrimitiveComponent* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "AddImpulseOnSocket");

	Params::BP_Chain_C_AddImpulseOnSocket Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.Adjust Chains Location
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Chain_C::Adjust_Chains_Location()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "Adjust Chains Location");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chain.BP_Chain_C.AttachChainsToCharacters
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Chain_C::AttachChainsToCharacters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "AttachChainsToCharacters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chain.BP_Chain_C.Bounce
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::Bounce(const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "Bounce");

	Params::BP_Chain_C_Bounce Parms{};

	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.CalculateChainDistance
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::CalculateChainDistance(double* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "CalculateChainDistance");

	Params::BP_Chain_C_CalculateChainDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Chain.BP_Chain_C.CanFollow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UActorComponent*                  Self2                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Chain_C::CanFollow(class UActorComponent* Self2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "CanFollow");

	Params::BP_Chain_C_CanFollow Parms{};

	Parms.Self2 = Self2;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Chain.BP_Chain_C.ChainStabilize_TL__FinishedFunc
// (BlueprintEvent)

void ABP_Chain_C::ChainStabilize_TL__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "ChainStabilize_TL__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chain.BP_Chain_C.ChainStabilize_TL__UpdateFunc
// (BlueprintEvent)

void ABP_Chain_C::ChainStabilize_TL__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "ChainStabilize_TL__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chain.BP_Chain_C.DissolveChain
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PlaySound                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::DissolveChain(double PlayRate, bool PlaySound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "DissolveChain");

	Params::BP_Chain_C_DissolveChain Parms{};

	Parms.PlayRate = PlayRate;
	Parms.PlaySound = PlaySound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.ExecuteUbergraph_BP_Chain
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::ExecuteUbergraph_BP_Chain(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "ExecuteUbergraph_BP_Chain");

	Params::BP_Chain_C_ExecuteUbergraph_BP_Chain Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.Get Chain
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   InInt                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMeshComponent*             Output                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::Get_Chain(int32 InInt, class UStaticMeshComponent** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "Get Chain");

	Params::BP_Chain_C_Get_Chain Parms{};

	Parms.InInt = InInt;

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_Chain.BP_Chain_C.Get Cosmetics Maillons
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UStaticMeshComponent*>     Maillons                                               (Parm, OutParm, ContainsInstancedReference)

void ABP_Chain_C::Get_Cosmetics_Maillons(TArray<class UStaticMeshComponent*>* Maillons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "Get Cosmetics Maillons");

	Params::BP_Chain_C_Get_Cosmetics_Maillons Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Maillons != nullptr)
		*Maillons = std::move(Parms.Maillons);
}


// Function BP_Chain.BP_Chain_C.GetAttachedChars
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   AttachedChars                                          (Parm, OutParm)

void ABP_Chain_C::GetAttachedChars(TArray<class AActor*>* AttachedChars)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "GetAttachedChars");

	Params::BP_Chain_C_GetAttachedChars Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttachedChars != nullptr)
		*AttachedChars = std::move(Parms.AttachedChars);
}


// Function BP_Chain.BP_Chain_C.GetBeforeLastSphere
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UStaticMeshComponent*             Output                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::GetBeforeLastSphere(class UStaticMeshComponent** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "GetBeforeLastSphere");

	Params::BP_Chain_C_GetBeforeLastSphere Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_Chain.BP_Chain_C.GetCurrentChainDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  CurrentChainDistance                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::GetCurrentChainDistance(double* CurrentChainDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "GetCurrentChainDistance");

	Params::BP_Chain_C_GetCurrentChainDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentChainDistance != nullptr)
		*CurrentChainDistance = Parms.CurrentChainDistance;
}


// Function BP_Chain.BP_Chain_C.GetFakeChain
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   InInt                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMeshComponent*             Output                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::GetFakeChain(int32 InInt, class UStaticMeshComponent** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "GetFakeChain");

	Params::BP_Chain_C_GetFakeChain Parms{};

	Parms.InInt = InInt;

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_Chain.BP_Chain_C.GetFirstSphere
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UStaticMeshComponent*             Output                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::GetFirstSphere(class UStaticMeshComponent** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "GetFirstSphere");

	Params::BP_Chain_C_GetFirstSphere Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_Chain.BP_Chain_C.GetLastSphere
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UStaticMeshComponent*             Output                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::GetLastSphere(class UStaticMeshComponent** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "GetLastSphere");

	Params::BP_Chain_C_GetLastSphere Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_Chain.BP_Chain_C.GetMiddleLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_Chain_C::GetMiddleLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "GetMiddleLocation");

	Params::BP_Chain_C_GetMiddleLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Chain.BP_Chain_C.GetSecondSphere
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UStaticMeshComponent*             Output                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::GetSecondSphere(class UStaticMeshComponent** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "GetSecondSphere");

	Params::BP_Chain_C_GetSecondSphere Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_Chain.BP_Chain_C.GetSnapTips
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_SnapTips                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::GetSnapTips(bool* Param_SnapTips)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "GetSnapTips");

	Params::BP_Chain_C_GetSnapTips Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_SnapTips != nullptr)
		*Param_SnapTips = Parms.Param_SnapTips;
}


// Function BP_Chain.BP_Chain_C.GetSocketLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Attached                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_Chain_C::GetSocketLocation(class AActor* Attached)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "GetSocketLocation");

	Params::BP_Chain_C_GetSocketLocation Parms{};

	Parms.Attached = Attached;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Chain.BP_Chain_C.GetTension
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Float                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::GetTension(double* Float)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "GetTension");

	Params::BP_Chain_C_GetTension Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Float != nullptr)
		*Float = Parms.Float;
}


// Function BP_Chain.BP_Chain_C.ImpulseOnMaillons
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Impulse                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::ImpulseOnMaillons(const struct FVector& Impulse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "ImpulseOnMaillons");

	Params::BP_Chain_C_ImpulseOnMaillons Parms{};

	Parms.Impulse = std::move(Impulse);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.InitChain
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Chain_C::InitChain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "InitChain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chain.BP_Chain_C.Jump
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::Jump(class AActor* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "Jump");

	Params::BP_Chain_C_Jump Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.JumpAll
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::JumpAll(class UObject* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "JumpAll");

	Params::BP_Chain_C_JumpAll Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.LinkCharacters
// (BlueprintCallable, BlueprintEvent)

void ABP_Chain_C::LinkCharacters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "LinkCharacters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chain.BP_Chain_C.OnRep_Attached01
// (BlueprintCallable, BlueprintEvent)

void ABP_Chain_C::OnRep_Attached01()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "OnRep_Attached01");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chain.BP_Chain_C.OnRep_Attached02
// (BlueprintCallable, BlueprintEvent)

void ABP_Chain_C::OnRep_Attached02()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "OnRep_Attached02");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chain.BP_Chain_C.OnRep_Cosmetics
// (BlueprintCallable, BlueprintEvent)

void ABP_Chain_C::OnRep_Cosmetics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "OnRep_Cosmetics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chain.BP_Chain_C.Pull01
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Puller                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::Pull01(class AActor* Puller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "Pull01");

	Params::BP_Chain_C_Pull01 Parms{};

	Parms.Puller = Puller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.Pull02
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Puller                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::Pull02(class AActor* Puller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "Pull02");

	Params::BP_Chain_C_Pull02 Parms{};

	Parms.Puller = Puller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.PullChain
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Puller                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::PullChain(class APawn* Puller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "PullChain");

	Params::BP_Chain_C_PullChain Parms{};

	Parms.Puller = Puller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.Reattach Cube Socket to Chain
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              CubeSocket                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::Reattach_Cube_Socket_to_Chain(class UPrimitiveComponent* CubeSocket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "Reattach Cube Socket to Chain");

	Params::BP_Chain_C_Reattach_Cube_Socket_to_Chain Parms{};

	Parms.CubeSocket = CubeSocket;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Chain_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chain.BP_Chain_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "ReceiveTick");

	Params::BP_Chain_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.Refresh Tags
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Attached                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Player01                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::Refresh_Tags(class AActor* Attached, bool Player01)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "Refresh Tags");

	Params::BP_Chain_C_Refresh_Tags Parms{};

	Parms.Attached = Attached;
	Parms.Player01 = Player01;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.RefreshChain
// (BlueprintCallable, BlueprintEvent)

void ABP_Chain_C::RefreshChain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "RefreshChain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chain.BP_Chain_C.ReinitAttachment
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewDensity                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  NewChainMass                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Human                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::ReinitAttachment(int32 NewDensity, double NewChainMass, bool Human)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "ReinitAttachment");

	Params::BP_Chain_C_ReinitAttachment Parms{};

	Parms.NewDensity = NewDensity;
	Parms.NewChainMass = NewChainMass;
	Parms.Human = Human;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.ReinitAttachmentAll
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Density                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Param_Mass_in_Kg                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::ReinitAttachmentAll(int32 Param_Density, double Param_Mass_in_Kg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "ReinitAttachmentAll");

	Params::BP_Chain_C_ReinitAttachmentAll Parms{};

	Parms.Param_Density = Param_Density;
	Parms.Param_Mass_in_Kg = Param_Mass_in_Kg;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.RemoveAllComponentsOfClass
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UActorComponent>      ComponentClass                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_Chain_C::RemoveAllComponentsOfClass(TSubclassOf<class UActorComponent> ComponentClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "RemoveAllComponentsOfClass");

	Params::BP_Chain_C_RemoveAllComponentsOfClass Parms{};

	Parms.ComponentClass = ComponentClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.RemoveCharacterConstraints
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Chain_C::RemoveCharacterConstraints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "RemoveCharacterConstraints");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chain.BP_Chain_C.ReplicateChainLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Chain_C::ReplicateChainLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "ReplicateChainLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chain.BP_Chain_C.Resync
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Chain_C::Resync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "Resync");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chain.BP_Chain_C.SetAttachedChar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Char                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::SetAttachedChar(const int32 Param_Index, class AActor* Char)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "SetAttachedChar");

	Params::BP_Chain_C_SetAttachedChar Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Char = Char;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.SetMaillonWeight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  NewWeight                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::SetMaillonWeight(double NewWeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "SetMaillonWeight");

	Params::BP_Chain_C_SetMaillonWeight Parms{};

	Parms.NewWeight = NewWeight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.SetSnapTips
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_SnapTips                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::SetSnapTips(bool Param_SnapTips)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "SetSnapTips");

	Params::BP_Chain_C_SetSnapTips Parms{};

	Parms.Param_SnapTips = Param_SnapTips;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.SetTip0Location
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Loc                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::SetTip0Location(const struct FVector& Loc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "SetTip0Location");

	Params::BP_Chain_C_SetTip0Location Parms{};

	Parms.Loc = std::move(Loc);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.SetTip1Location
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Loc                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::SetTip1Location(const struct FVector& Loc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "SetTip1Location");

	Params::BP_Chain_C_SetTip1Location Parms{};

	Parms.Loc = std::move(Loc);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Chain.BP_Chain_C.StabilizeChains
// (BlueprintCallable, BlueprintEvent)

void ABP_Chain_C::StabilizeChains()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "StabilizeChains");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chain.BP_Chain_C.TrySpawnCubeToPlayerConstraint
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACubeToPlayerConstraint_C*        CubeToPlayerConstraint                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACubeToPlayerConstraint_C*        Param_Constraint                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Chain_C::TrySpawnCubeToPlayerConstraint(class ACubeToPlayerConstraint_C*& CubeToPlayerConstraint, const struct FVector& Spawn_Transform_Location, class ACubeToPlayerConstraint_C** Param_Constraint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "TrySpawnCubeToPlayerConstraint");

	Params::BP_Chain_C_TrySpawnCubeToPlayerConstraint Parms{};

	Parms.CubeToPlayerConstraint = CubeToPlayerConstraint;
	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);

	UObject::ProcessEvent(Func, &Parms);

	CubeToPlayerConstraint = Parms.CubeToPlayerConstraint;

	if (Param_Constraint != nullptr)
		*Param_Constraint = Parms.Param_Constraint;
}


// Function BP_Chain.BP_Chain_C.UpdateSocketsLocation
// (BlueprintCallable, BlueprintEvent)

void ABP_Chain_C::UpdateSocketsLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "UpdateSocketsLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Chain.BP_Chain_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Chain_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Chain_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

