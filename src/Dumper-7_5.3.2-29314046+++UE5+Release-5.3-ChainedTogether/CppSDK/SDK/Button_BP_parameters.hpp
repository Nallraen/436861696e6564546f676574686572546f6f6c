#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Button_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Button_BP.Button_BP_C.BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37E9[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function Button_BP.Button_BP_C.BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Button_BP_C_BndEvt__Button_BP_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function Button_BP.Button_BP_C.ChangeColor
// 0x0001 (0x0001 - 0x0000)
struct Button_BP_C_ChangeColor final
{
public:
	bool                                          Green;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Button_BP_C_ChangeColor) == 0x000001, "Wrong alignment on Button_BP_C_ChangeColor");
static_assert(sizeof(Button_BP_C_ChangeColor) == 0x000001, "Wrong size on Button_BP_C_ChangeColor");
static_assert(offsetof(Button_BP_C_ChangeColor, Green) == 0x000000, "Member 'Button_BP_C_ChangeColor::Green' has a wrong offset!");

// Function Button_BP.Button_BP_C.CheckEvent
// 0x0001 (0x0001 - 0x0000)
struct Button_BP_C_CheckEvent final
{
public:
	bool                                          Push;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Button_BP_C_CheckEvent) == 0x000001, "Wrong alignment on Button_BP_C_CheckEvent");
static_assert(sizeof(Button_BP_C_CheckEvent) == 0x000001, "Wrong size on Button_BP_C_CheckEvent");
static_assert(offsetof(Button_BP_C_CheckEvent, Push) == 0x000000, "Member 'Button_BP_C_CheckEvent::Push' has a wrong offset!");

// Function Button_BP.Button_BP_C.ExecuteUbergraph_Button_BP
// 0x0308 (0x0308 - 0x0000)
struct Button_BP_C_ExecuteUbergraph_Button_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37EA[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Green;                          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37EB[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37EC[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0070(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37ED[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0178(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Push;                           // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x018E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37EE[0x1];                                     // 0x018F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0198(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37EF[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0218(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Button_BP_C_ExecuteUbergraph_Button_BP) == 0x000008, "Wrong alignment on Button_BP_C_ExecuteUbergraph_Button_BP");
static_assert(sizeof(Button_BP_C_ExecuteUbergraph_Button_BP) == 0x000308, "Wrong size on Button_BP_C_ExecuteUbergraph_Button_BP");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, EntryPoint) == 0x000000, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, Temp_bool_IsClosed_Variable) == 0x000018, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, Temp_bool_Has_Been_Initd_Variable) == 0x000019, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, Temp_bool_Has_Been_Initd_Variable_1) == 0x00001A, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, CallFunc_HasAuthority_ReturnValue) == 0x00001B, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, K2Node_CustomEvent_Green) == 0x00001C, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::K2Node_CustomEvent_Green' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, CallFunc_SelectColor_ReturnValue) == 0x000020, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, CallFunc_BreakVector_X) == 0x000030, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, CallFunc_BreakVector_Y) == 0x000038, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, CallFunc_BreakVector_Z) == 0x000040, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000050, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000058, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000060, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000068, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, K2Node_ComponentBoundEvent_bFromSweep) == 0x00006C, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, K2Node_ComponentBoundEvent_SweepResult) == 0x000070, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000158, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, K2Node_ComponentBoundEvent_OtherActor) == 0x000160, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, K2Node_ComponentBoundEvent_OtherComp) == 0x000168, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000170, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000178, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, CallFunc_Array_Length_ReturnValue) == 0x000188, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, K2Node_CustomEvent_Push) == 0x00018C, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::K2Node_CustomEvent_Push' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00018D, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, Temp_bool_IsClosed_Variable_1) == 0x00018E, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, CallFunc_RandomFloatInRange_ReturnValue) == 0x000190, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000198, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001A0, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, CallFunc_MakeVector_ReturnValue) == 0x0001B8, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x0001D0, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, CallFunc_MakeVector_ReturnValue_1) == 0x0001D8, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001F0, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, CallFunc_VLerp_ReturnValue) == 0x0001F8, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000210, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000218, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Button_BP_C_ExecuteUbergraph_Button_BP, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000300, "Member 'Button_BP_C_ExecuteUbergraph_Button_BP::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function Button_BP.Button_BP_C.UpdateVisibility
// 0x0014 (0x0014 - 0x0000)
struct Button_BP_C_UpdateVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F0[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumPlayers_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default_1;                           // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Button_BP_C_UpdateVisibility) == 0x000004, "Wrong alignment on Button_BP_C_UpdateVisibility");
static_assert(sizeof(Button_BP_C_UpdateVisibility) == 0x000014, "Wrong size on Button_BP_C_UpdateVisibility");
static_assert(offsetof(Button_BP_C_UpdateVisibility, Temp_bool_Variable) == 0x000000, "Member 'Button_BP_C_UpdateVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Button_BP_C_UpdateVisibility, Temp_byte_Variable) == 0x000001, "Member 'Button_BP_C_UpdateVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Button_BP_C_UpdateVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'Button_BP_C_UpdateVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Button_BP_C_UpdateVisibility, Temp_bool_Variable_1) == 0x000003, "Member 'Button_BP_C_UpdateVisibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Button_BP_C_UpdateVisibility, Temp_byte_Variable_2) == 0x000004, "Member 'Button_BP_C_UpdateVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Button_BP_C_UpdateVisibility, Temp_byte_Variable_3) == 0x000005, "Member 'Button_BP_C_UpdateVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Button_BP_C_UpdateVisibility, CallFunc_GetNumPlayers_ReturnValue) == 0x000008, "Member 'Button_BP_C_UpdateVisibility::CallFunc_GetNumPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(Button_BP_C_UpdateVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Button_BP_C_UpdateVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Button_BP_C_UpdateVisibility, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'Button_BP_C_UpdateVisibility::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Button_BP_C_UpdateVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'Button_BP_C_UpdateVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Button_BP_C_UpdateVisibility, K2Node_Select_Default) == 0x000012, "Member 'Button_BP_C_UpdateVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Button_BP_C_UpdateVisibility, K2Node_Select_Default_1) == 0x000013, "Member 'Button_BP_C_UpdateVisibility::K2Node_Select_Default_1' has a wrong offset!");

}

