#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WayWall_04_BPC

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "WayWall_BP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass WayWall_04_BPC.WayWall_04_BPC_C
// 0x0098 (0x0388 - 0x02F0)
class AWayWall_04_BPC_C final : public AWayWall_BP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WayWall_04_BPC_C;                   // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Scene;                                             // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_beam12;                                         // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_beam11;                                         // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_beam10;                                         // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_beam8;                                          // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_beam6;                                          // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_beam5;                                          // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_beam4;                                          // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_beam3;                                          // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_beam2;                                          // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CircleWood;                                        // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_beam1;                                          // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_beam;                                           // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RepRot;                                            // 0x0370(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)

public:
	void ExecuteUbergraph_WayWall_04_BPC(int32 EntryPoint);
	void OnRep_RepRot();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WayWall_04_BPC_C">();
	}
	static class AWayWall_04_BPC_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWayWall_04_BPC_C>();
	}
};
static_assert(alignof(AWayWall_04_BPC_C) == 0x000008, "Wrong alignment on AWayWall_04_BPC_C");
static_assert(sizeof(AWayWall_04_BPC_C) == 0x000388, "Wrong size on AWayWall_04_BPC_C");
static_assert(offsetof(AWayWall_04_BPC_C, UberGraphFrame_WayWall_04_BPC_C) == 0x0002F0, "Member 'AWayWall_04_BPC_C::UberGraphFrame_WayWall_04_BPC_C' has a wrong offset!");
static_assert(offsetof(AWayWall_04_BPC_C, Scene) == 0x0002F8, "Member 'AWayWall_04_BPC_C::Scene' has a wrong offset!");
static_assert(offsetof(AWayWall_04_BPC_C, StaticMesh) == 0x000300, "Member 'AWayWall_04_BPC_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AWayWall_04_BPC_C, SM_beam12) == 0x000308, "Member 'AWayWall_04_BPC_C::SM_beam12' has a wrong offset!");
static_assert(offsetof(AWayWall_04_BPC_C, SM_beam11) == 0x000310, "Member 'AWayWall_04_BPC_C::SM_beam11' has a wrong offset!");
static_assert(offsetof(AWayWall_04_BPC_C, SM_beam10) == 0x000318, "Member 'AWayWall_04_BPC_C::SM_beam10' has a wrong offset!");
static_assert(offsetof(AWayWall_04_BPC_C, SM_beam8) == 0x000320, "Member 'AWayWall_04_BPC_C::SM_beam8' has a wrong offset!");
static_assert(offsetof(AWayWall_04_BPC_C, SM_beam6) == 0x000328, "Member 'AWayWall_04_BPC_C::SM_beam6' has a wrong offset!");
static_assert(offsetof(AWayWall_04_BPC_C, SM_beam5) == 0x000330, "Member 'AWayWall_04_BPC_C::SM_beam5' has a wrong offset!");
static_assert(offsetof(AWayWall_04_BPC_C, SM_beam4) == 0x000338, "Member 'AWayWall_04_BPC_C::SM_beam4' has a wrong offset!");
static_assert(offsetof(AWayWall_04_BPC_C, SM_beam3) == 0x000340, "Member 'AWayWall_04_BPC_C::SM_beam3' has a wrong offset!");
static_assert(offsetof(AWayWall_04_BPC_C, SM_beam2) == 0x000348, "Member 'AWayWall_04_BPC_C::SM_beam2' has a wrong offset!");
static_assert(offsetof(AWayWall_04_BPC_C, CircleWood) == 0x000350, "Member 'AWayWall_04_BPC_C::CircleWood' has a wrong offset!");
static_assert(offsetof(AWayWall_04_BPC_C, Sphere) == 0x000358, "Member 'AWayWall_04_BPC_C::Sphere' has a wrong offset!");
static_assert(offsetof(AWayWall_04_BPC_C, SM_beam1) == 0x000360, "Member 'AWayWall_04_BPC_C::SM_beam1' has a wrong offset!");
static_assert(offsetof(AWayWall_04_BPC_C, SM_beam) == 0x000368, "Member 'AWayWall_04_BPC_C::SM_beam' has a wrong offset!");
static_assert(offsetof(AWayWall_04_BPC_C, RepRot) == 0x000370, "Member 'AWayWall_04_BPC_C::RepRot' has a wrong offset!");

}

