#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ThunderEffect

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ThunderEffect.BP_ThunderEffect_C
// 0x0058 (0x02F0 - 0x0298)
class ABP_ThunderEffect_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight;                                        // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_51B2451C4FC11C248985E3B279572AB0; // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_51B2451C4FC11C248985E3B279572AB0; // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A85[0x3];                                     // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Mat;                                               // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Intensity;                                         // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Emissive;                                          // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ThunderEffect(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ThunderEffect_C">();
	}
	static class ABP_ThunderEffect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ThunderEffect_C>();
	}
};
static_assert(alignof(ABP_ThunderEffect_C) == 0x000008, "Wrong alignment on ABP_ThunderEffect_C");
static_assert(sizeof(ABP_ThunderEffect_C) == 0x0002F0, "Wrong size on ABP_ThunderEffect_C");
static_assert(offsetof(ABP_ThunderEffect_C, UberGraphFrame) == 0x000298, "Member 'ABP_ThunderEffect_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ThunderEffect_C, PointLight) == 0x0002A0, "Member 'ABP_ThunderEffect_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_ThunderEffect_C, Plane) == 0x0002A8, "Member 'ABP_ThunderEffect_C::Plane' has a wrong offset!");
static_assert(offsetof(ABP_ThunderEffect_C, DefaultSceneRoot) == 0x0002B0, "Member 'ABP_ThunderEffect_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ThunderEffect_C, Timeline_0_NewTrack_0_51B2451C4FC11C248985E3B279572AB0) == 0x0002B8, "Member 'ABP_ThunderEffect_C::Timeline_0_NewTrack_0_51B2451C4FC11C248985E3B279572AB0' has a wrong offset!");
static_assert(offsetof(ABP_ThunderEffect_C, Timeline_0__Direction_51B2451C4FC11C248985E3B279572AB0) == 0x0002BC, "Member 'ABP_ThunderEffect_C::Timeline_0__Direction_51B2451C4FC11C248985E3B279572AB0' has a wrong offset!");
static_assert(offsetof(ABP_ThunderEffect_C, Timeline_0) == 0x0002C0, "Member 'ABP_ThunderEffect_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_ThunderEffect_C, Mat) == 0x0002C8, "Member 'ABP_ThunderEffect_C::Mat' has a wrong offset!");
static_assert(offsetof(ABP_ThunderEffect_C, Intensity) == 0x0002D0, "Member 'ABP_ThunderEffect_C::Intensity' has a wrong offset!");
static_assert(offsetof(ABP_ThunderEffect_C, Color) == 0x0002D8, "Member 'ABP_ThunderEffect_C::Color' has a wrong offset!");
static_assert(offsetof(ABP_ThunderEffect_C, Emissive) == 0x0002E8, "Member 'ABP_ThunderEffect_C::Emissive' has a wrong offset!");

}

