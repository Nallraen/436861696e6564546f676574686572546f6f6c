#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SatelliteDish

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_SatelliteDish.B_SatelliteDish_C
// 0x0058 (0x02F0 - 0x0298)
class AB_SatelliteDish_C final : public AActor
{
public:
	class UStaticMeshComponent*                   Dish;                                              // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RotatingPart;                                      // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Stand;                                             // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         Stand_Type;                                        // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Dish_Type;                                         // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Rotation;                                          // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RotationDish;                                      // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMesh*>                    StandsSM;                                          // 0x02D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UStaticMesh*>                    DishesSM;                                          // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_SatelliteDish_C">();
	}
	static class AB_SatelliteDish_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_SatelliteDish_C>();
	}
};
static_assert(alignof(AB_SatelliteDish_C) == 0x000008, "Wrong alignment on AB_SatelliteDish_C");
static_assert(sizeof(AB_SatelliteDish_C) == 0x0002F0, "Wrong size on AB_SatelliteDish_C");
static_assert(offsetof(AB_SatelliteDish_C, Dish) == 0x000298, "Member 'AB_SatelliteDish_C::Dish' has a wrong offset!");
static_assert(offsetof(AB_SatelliteDish_C, RotatingPart) == 0x0002A0, "Member 'AB_SatelliteDish_C::RotatingPart' has a wrong offset!");
static_assert(offsetof(AB_SatelliteDish_C, Stand) == 0x0002A8, "Member 'AB_SatelliteDish_C::Stand' has a wrong offset!");
static_assert(offsetof(AB_SatelliteDish_C, DefaultSceneRoot) == 0x0002B0, "Member 'AB_SatelliteDish_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AB_SatelliteDish_C, Stand_Type) == 0x0002B8, "Member 'AB_SatelliteDish_C::Stand_Type' has a wrong offset!");
static_assert(offsetof(AB_SatelliteDish_C, Dish_Type) == 0x0002BC, "Member 'AB_SatelliteDish_C::Dish_Type' has a wrong offset!");
static_assert(offsetof(AB_SatelliteDish_C, Rotation) == 0x0002C0, "Member 'AB_SatelliteDish_C::Rotation' has a wrong offset!");
static_assert(offsetof(AB_SatelliteDish_C, RotationDish) == 0x0002C8, "Member 'AB_SatelliteDish_C::RotationDish' has a wrong offset!");
static_assert(offsetof(AB_SatelliteDish_C, StandsSM) == 0x0002D0, "Member 'AB_SatelliteDish_C::StandsSM' has a wrong offset!");
static_assert(offsetof(AB_SatelliteDish_C, DishesSM) == 0x0002E0, "Member 'AB_SatelliteDish_C::DishesSM' has a wrong offset!");

}

