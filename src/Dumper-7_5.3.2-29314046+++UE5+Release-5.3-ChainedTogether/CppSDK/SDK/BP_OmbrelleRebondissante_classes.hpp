#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OmbrelleRebondissante

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_OmbrelleRebondissante.BP_OmbrelleRebondissante_C
// 0x0058 (0x02F0 - 0x0298)
class ABP_OmbrelleRebondissante_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UC_TickOptimizer_C*                     C_TickOptimizer;                                   // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cylinder;                                          // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_BFB1609040B7DCBAAC4BF2BDD9A2299F; // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_BFB1609040B7DCBAAC4BF2BDD9A2299F; // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381F[0x3];                                     // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            UmbrellaMesh;                                      // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                InitScale;                                         // 0x02D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Animate();
	void BndEvt__BP_OmbrelleRebondissante_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ExecuteUbergraph_BP_OmbrelleRebondissante(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_OmbrelleRebondissante_C">();
	}
	static class ABP_OmbrelleRebondissante_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_OmbrelleRebondissante_C>();
	}
};
static_assert(alignof(ABP_OmbrelleRebondissante_C) == 0x000008, "Wrong alignment on ABP_OmbrelleRebondissante_C");
static_assert(sizeof(ABP_OmbrelleRebondissante_C) == 0x0002F0, "Wrong size on ABP_OmbrelleRebondissante_C");
static_assert(offsetof(ABP_OmbrelleRebondissante_C, UberGraphFrame) == 0x000298, "Member 'ABP_OmbrelleRebondissante_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_OmbrelleRebondissante_C, C_TickOptimizer) == 0x0002A0, "Member 'ABP_OmbrelleRebondissante_C::C_TickOptimizer' has a wrong offset!");
static_assert(offsetof(ABP_OmbrelleRebondissante_C, Cylinder) == 0x0002A8, "Member 'ABP_OmbrelleRebondissante_C::Cylinder' has a wrong offset!");
static_assert(offsetof(ABP_OmbrelleRebondissante_C, StaticMesh) == 0x0002B0, "Member 'ABP_OmbrelleRebondissante_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_OmbrelleRebondissante_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_OmbrelleRebondissante_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_OmbrelleRebondissante_C, Timeline_0_NewTrack_0_BFB1609040B7DCBAAC4BF2BDD9A2299F) == 0x0002C0, "Member 'ABP_OmbrelleRebondissante_C::Timeline_0_NewTrack_0_BFB1609040B7DCBAAC4BF2BDD9A2299F' has a wrong offset!");
static_assert(offsetof(ABP_OmbrelleRebondissante_C, Timeline_0__Direction_BFB1609040B7DCBAAC4BF2BDD9A2299F) == 0x0002C4, "Member 'ABP_OmbrelleRebondissante_C::Timeline_0__Direction_BFB1609040B7DCBAAC4BF2BDD9A2299F' has a wrong offset!");
static_assert(offsetof(ABP_OmbrelleRebondissante_C, Timeline_0) == 0x0002C8, "Member 'ABP_OmbrelleRebondissante_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_OmbrelleRebondissante_C, UmbrellaMesh) == 0x0002D0, "Member 'ABP_OmbrelleRebondissante_C::UmbrellaMesh' has a wrong offset!");
static_assert(offsetof(ABP_OmbrelleRebondissante_C, InitScale) == 0x0002D8, "Member 'ABP_OmbrelleRebondissante_C::InitScale' has a wrong offset!");

}

