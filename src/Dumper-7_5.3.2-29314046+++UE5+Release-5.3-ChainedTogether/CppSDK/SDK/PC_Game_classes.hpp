#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PC_Game

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "E_ChoosenChar_structs.hpp"
#include "UMG_structs.hpp"
#include "PC_WithSettings_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PC_Game.PC_Game_C
// 0x00E8 (0x0958 - 0x0870)
class APC_Game_C final : public APC_WithSettings_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_PC_Game_C;                          // 0x0870(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class APawn*                                  ControlledActor;                                   // 0x0878(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, RepNotify, NoDestructor, HasGetValueTypeHash)
	class UW_Tchat_C*                             Tchat;                                             // 0x0880(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class APawn*>                          ControlledTestActors;                              // 0x0888(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance)
	class AActor*                                 CharacterToPull;                                   // 0x0898(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 PreviousCharToPull;                                // 0x08A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CaptureDevices;                                    // 0x08A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<uint8>                                 Voice_Data;                                        // 0x08B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          PTT;                                               // 0x08C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_332F[0x7];                                     // 0x08C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                PreviousInteractionObject;                         // 0x08D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UObject*                                InteractionObject;                                 // 0x08D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         ActiveTestControl;                                 // 0x08E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3330[0x4];                                     // 0x08E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APawn*>                          ActiveTestActor;                                   // 0x08E8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class FString                                 CurrentLevel;                                      // 0x08F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class UUserWidget*                            PullWidget_LocalMP;                                // 0x0908(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_ChoosenChar                                 LocalMpChosenChar;                                 // 0x0910(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3331[0x7];                                     // 0x0911(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ClassToRespawn;                                    // 0x0918(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UW_LocalMP_Use_C*                       UseLocalMP;                                        // 0x0920(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPressingJump;                                    // 0x0928(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3332[0x7];                                     // 0x0929(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APawn*>                          Not_Pullable_Chars;                                // 0x0930(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          OnEndScreen;                                       // 0x0940(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3333[0x7];                                     // 0x0941(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              PingStart;                                         // 0x0948(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Ping;                                              // 0x0950(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlyModeActivated;                                  // 0x0954(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BeginPull();
	void CustomEvent();
	void DetectInteraction();
	void DetectPullCharacters();
	void EndPull();
	void ExecuteUbergraph_PC_Game(int32 EntryPoint);
	void GetAudioDevices(TArray<class FString>* Devices);
	void GetControlledActor(class AActor** Actor);
	double GetDistanceToScreenMiddle(const struct FVector& WorldLocation);
	void GetNotAttachedCharacters(TArray<class APawn*>* NotAttachedChars);
	void GetSkin(E_ChoosenChar* ChosenChar);
	void InitVoice();
	void InpActEvt_betaShow_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_DriveForwardGP_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_DriveForwardGP_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_FlyMode_K2Node_EnhancedInputActionEvent_5(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_Jump_K2Node_EnhancedInputActionEvent_10(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_Jump_K2Node_EnhancedInputActionEvent_11(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_LookRight_K2Node_EnhancedInputActionEvent_17(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_LookUp_K2Node_EnhancedInputActionEvent_18(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_MoveForward_K2Node_EnhancedInputActionEvent_6(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_MoveForward_K2Node_EnhancedInputActionEvent_7(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_MoveRight_K2Node_EnhancedInputActionEvent_8(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_MoveRight_K2Node_EnhancedInputActionEvent_9(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_Pull_K2Node_EnhancedInputActionEvent_13(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_Pull_K2Node_EnhancedInputActionEvent_14(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_Sprint_K2Node_EnhancedInputActionEvent_15(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_Sprint_K2Node_EnhancedInputActionEvent_16(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_Tchat_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_Use_K2Node_EnhancedInputActionEvent_12(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_UseMonteCharge_K2Node_EnhancedInputActionEvent_4(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void LeaveCarSRV(class AActor* Car);
	void LookRight(double Axis);
	void LookUp(double Axis);
	void MonteChargeSRV(class UObject* Target);
	bool MultiPullTrace(const TArray<class AActor*>& ActorsToIgnore, const struct FVector& Start, const struct FVector& End, TArray<struct FHitResult>* HitsResult);
	void NotifyChange();
	void OnEndScreenClient();
	void OnEndScreenServer();
	void OnPossessOwner();
	void OnRep_ControlledActor();
	void PingOwner();
	void PingSRV();
	void PlayAudioComponent(class UAudioComponent* AudioComponent);
	void PlaySound(class USoundWave* Sound);
	void PullOtherCharacterSRV(class AActor* Param_ControlledActor, bool BeginPull, class AActor* Param_CharacterToPull);
	void ReceiveBeginPlay();
	void ReceivePossess(class APawn* PossessedPawn);
	void ReceiveTick(float DeltaSeconds);
	void RefreshTestControlChar();
	void ReplicateControlRot();
	void RepPseudo();
	void RequestCharacter(E_ChoosenChar Char);
	void RequestCharacterSpawnSRV();
	void RequestCharServer(E_ChoosenChar Char);
	void RequestSpawnClient();
	void Rescue_Srv_(class UPrimitiveComponent* RescueComponent, bool ExitingCar);
	void RescueOwner();
	bool SelectCharacterToPull(TArray<struct FHitResult>& Array, class UObject* ControlledPawn, class AActor** HitActor);
	void SelfPlacingBlock(const struct FVector& Location, class USceneComponent* AttachToComponent);
	void SendMessageClient(const class FString& Message);
	void SendMessageSRV(const class FString& Message);
	void SetAudioDevice(const class FString& Device);
	void SetControlledPawn(class AActor* Actor);
	void SetFlyMode(bool FlyMode);
	void SetLocalMpChosenChar(E_ChoosenChar Char);
	void SetRotationSrv(class UObject* Target, const struct FRotator& Rotation);
	void Show_Hud();
	void ShowTchat(class UW_Tchat_C** Param_Tchat);
	void ShowTchatUI(bool RefreshTchat);
	class APawn* SpawnCharacter(const struct FTransform& SpawnTransform, bool UpdateController, const class FString& FakePseudo, E_ChoosenChar Param_Character);
	void SpawnCharacter_Srv_();
	void SpawnCharacterSRV();
	void SwitchToGameMode();
	void TickAxes();
	void Trigger_Moving_Object(class ABP_MovingObject_C* MovingObject);
	void TriggerMovingObject(class ABP_MovingObject_C* MovingObject);
	void UpdateCanEscape(bool Param_CanEscape);
	void UpdateTestActor();
	void Use();
	void UseServer(class UObject* Object, class AActor* Param_ControlledActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PC_Game_C">();
	}
	static class APC_Game_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APC_Game_C>();
	}
};
static_assert(alignof(APC_Game_C) == 0x000008, "Wrong alignment on APC_Game_C");
static_assert(sizeof(APC_Game_C) == 0x000958, "Wrong size on APC_Game_C");
static_assert(offsetof(APC_Game_C, UberGraphFrame_PC_Game_C) == 0x000870, "Member 'APC_Game_C::UberGraphFrame_PC_Game_C' has a wrong offset!");
static_assert(offsetof(APC_Game_C, ControlledActor) == 0x000878, "Member 'APC_Game_C::ControlledActor' has a wrong offset!");
static_assert(offsetof(APC_Game_C, Tchat) == 0x000880, "Member 'APC_Game_C::Tchat' has a wrong offset!");
static_assert(offsetof(APC_Game_C, ControlledTestActors) == 0x000888, "Member 'APC_Game_C::ControlledTestActors' has a wrong offset!");
static_assert(offsetof(APC_Game_C, CharacterToPull) == 0x000898, "Member 'APC_Game_C::CharacterToPull' has a wrong offset!");
static_assert(offsetof(APC_Game_C, PreviousCharToPull) == 0x0008A0, "Member 'APC_Game_C::PreviousCharToPull' has a wrong offset!");
static_assert(offsetof(APC_Game_C, CaptureDevices) == 0x0008A8, "Member 'APC_Game_C::CaptureDevices' has a wrong offset!");
static_assert(offsetof(APC_Game_C, Voice_Data) == 0x0008B8, "Member 'APC_Game_C::Voice_Data' has a wrong offset!");
static_assert(offsetof(APC_Game_C, PTT) == 0x0008C8, "Member 'APC_Game_C::PTT' has a wrong offset!");
static_assert(offsetof(APC_Game_C, PreviousInteractionObject) == 0x0008D0, "Member 'APC_Game_C::PreviousInteractionObject' has a wrong offset!");
static_assert(offsetof(APC_Game_C, InteractionObject) == 0x0008D8, "Member 'APC_Game_C::InteractionObject' has a wrong offset!");
static_assert(offsetof(APC_Game_C, ActiveTestControl) == 0x0008E0, "Member 'APC_Game_C::ActiveTestControl' has a wrong offset!");
static_assert(offsetof(APC_Game_C, ActiveTestActor) == 0x0008E8, "Member 'APC_Game_C::ActiveTestActor' has a wrong offset!");
static_assert(offsetof(APC_Game_C, CurrentLevel) == 0x0008F8, "Member 'APC_Game_C::CurrentLevel' has a wrong offset!");
static_assert(offsetof(APC_Game_C, PullWidget_LocalMP) == 0x000908, "Member 'APC_Game_C::PullWidget_LocalMP' has a wrong offset!");
static_assert(offsetof(APC_Game_C, LocalMpChosenChar) == 0x000910, "Member 'APC_Game_C::LocalMpChosenChar' has a wrong offset!");
static_assert(offsetof(APC_Game_C, ClassToRespawn) == 0x000918, "Member 'APC_Game_C::ClassToRespawn' has a wrong offset!");
static_assert(offsetof(APC_Game_C, UseLocalMP) == 0x000920, "Member 'APC_Game_C::UseLocalMP' has a wrong offset!");
static_assert(offsetof(APC_Game_C, IsPressingJump) == 0x000928, "Member 'APC_Game_C::IsPressingJump' has a wrong offset!");
static_assert(offsetof(APC_Game_C, Not_Pullable_Chars) == 0x000930, "Member 'APC_Game_C::Not_Pullable_Chars' has a wrong offset!");
static_assert(offsetof(APC_Game_C, OnEndScreen) == 0x000940, "Member 'APC_Game_C::OnEndScreen' has a wrong offset!");
static_assert(offsetof(APC_Game_C, PingStart) == 0x000948, "Member 'APC_Game_C::PingStart' has a wrong offset!");
static_assert(offsetof(APC_Game_C, Ping) == 0x000950, "Member 'APC_Game_C::Ping' has a wrong offset!");
static_assert(offsetof(APC_Game_C, FlyModeActivated) == 0x000954, "Member 'APC_Game_C::FlyModeActivated' has a wrong offset!");

}

