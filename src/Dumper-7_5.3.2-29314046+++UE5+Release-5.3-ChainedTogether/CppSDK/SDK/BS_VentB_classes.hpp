#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BS_VentB

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BS_VentB.BS_VentB_C
// 0x0090 (0x0328 - 0x0298)
class ABS_VentB_C final : public AActor
{
public:
	class UStaticMeshComponent*                   Vent_0313;                                         // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vent_0312;                                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vent_0311;                                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vent_0310;                                         // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vent_039;                                          // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vent_038;                                          // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vent_037;                                          // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vent_Detail_012;                                   // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vent_036;                                          // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vent_035;                                          // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vent_034;                                          // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Smoke_01;                                          // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vent_033;                                          // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vent_Detail_011;                                   // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vent_Detail_01;                                    // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vent_032;                                          // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vent_031;                                          // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vent_03;                                           // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BS_VentB_C">();
	}
	static class ABS_VentB_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABS_VentB_C>();
	}
};
static_assert(alignof(ABS_VentB_C) == 0x000008, "Wrong alignment on ABS_VentB_C");
static_assert(sizeof(ABS_VentB_C) == 0x000328, "Wrong size on ABS_VentB_C");
static_assert(offsetof(ABS_VentB_C, Vent_0313) == 0x000298, "Member 'ABS_VentB_C::Vent_0313' has a wrong offset!");
static_assert(offsetof(ABS_VentB_C, Vent_0312) == 0x0002A0, "Member 'ABS_VentB_C::Vent_0312' has a wrong offset!");
static_assert(offsetof(ABS_VentB_C, Vent_0311) == 0x0002A8, "Member 'ABS_VentB_C::Vent_0311' has a wrong offset!");
static_assert(offsetof(ABS_VentB_C, Vent_0310) == 0x0002B0, "Member 'ABS_VentB_C::Vent_0310' has a wrong offset!");
static_assert(offsetof(ABS_VentB_C, Vent_039) == 0x0002B8, "Member 'ABS_VentB_C::Vent_039' has a wrong offset!");
static_assert(offsetof(ABS_VentB_C, Vent_038) == 0x0002C0, "Member 'ABS_VentB_C::Vent_038' has a wrong offset!");
static_assert(offsetof(ABS_VentB_C, Vent_037) == 0x0002C8, "Member 'ABS_VentB_C::Vent_037' has a wrong offset!");
static_assert(offsetof(ABS_VentB_C, Vent_Detail_012) == 0x0002D0, "Member 'ABS_VentB_C::Vent_Detail_012' has a wrong offset!");
static_assert(offsetof(ABS_VentB_C, Vent_036) == 0x0002D8, "Member 'ABS_VentB_C::Vent_036' has a wrong offset!");
static_assert(offsetof(ABS_VentB_C, Vent_035) == 0x0002E0, "Member 'ABS_VentB_C::Vent_035' has a wrong offset!");
static_assert(offsetof(ABS_VentB_C, Vent_034) == 0x0002E8, "Member 'ABS_VentB_C::Vent_034' has a wrong offset!");
static_assert(offsetof(ABS_VentB_C, Smoke_01) == 0x0002F0, "Member 'ABS_VentB_C::Smoke_01' has a wrong offset!");
static_assert(offsetof(ABS_VentB_C, Vent_033) == 0x0002F8, "Member 'ABS_VentB_C::Vent_033' has a wrong offset!");
static_assert(offsetof(ABS_VentB_C, Vent_Detail_011) == 0x000300, "Member 'ABS_VentB_C::Vent_Detail_011' has a wrong offset!");
static_assert(offsetof(ABS_VentB_C, Vent_Detail_01) == 0x000308, "Member 'ABS_VentB_C::Vent_Detail_01' has a wrong offset!");
static_assert(offsetof(ABS_VentB_C, Vent_032) == 0x000310, "Member 'ABS_VentB_C::Vent_032' has a wrong offset!");
static_assert(offsetof(ABS_VentB_C, Vent_031) == 0x000318, "Member 'ABS_VentB_C::Vent_031' has a wrong offset!");
static_assert(offsetof(ABS_VentB_C, Vent_03) == 0x000320, "Member 'ABS_VentB_C::Vent_03' has a wrong offset!");

}

