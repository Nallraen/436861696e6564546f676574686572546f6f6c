#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Carosse

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Carosse.BP_Carosse_C.ExecuteUbergraph_BP_Carosse
// 0x0160 (0x0160 - 0x0000)
struct BP_Carosse_C_ExecuteUbergraph_BP_Carosse final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHorse_AnimBP_C*                        K2Node_DynamicCast_AsHorse_Anim_BP;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3973[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0058(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            K2Node_Event_NewController;                        // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3974[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Carosse_C_ExecuteUbergraph_BP_Carosse) == 0x000008, "Wrong alignment on BP_Carosse_C_ExecuteUbergraph_BP_Carosse");
static_assert(sizeof(BP_Carosse_C_ExecuteUbergraph_BP_Carosse) == 0x000160, "Wrong size on BP_Carosse_C_ExecuteUbergraph_BP_Carosse");
static_assert(offsetof(BP_Carosse_C_ExecuteUbergraph_BP_Carosse, EntryPoint) == 0x000000, "Member 'BP_Carosse_C_ExecuteUbergraph_BP_Carosse::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_ExecuteUbergraph_BP_Carosse, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_Carosse_C_ExecuteUbergraph_BP_Carosse::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_ExecuteUbergraph_BP_Carosse, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_Carosse_C_ExecuteUbergraph_BP_Carosse::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_ExecuteUbergraph_BP_Carosse, K2Node_DynamicCast_AsHorse_Anim_BP) == 0x000010, "Member 'BP_Carosse_C_ExecuteUbergraph_BP_Carosse::K2Node_DynamicCast_AsHorse_Anim_BP' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_ExecuteUbergraph_BP_Carosse, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Carosse_C_ExecuteUbergraph_BP_Carosse::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_ExecuteUbergraph_BP_Carosse, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000020, "Member 'BP_Carosse_C_ExecuteUbergraph_BP_Carosse::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_ExecuteUbergraph_BP_Carosse, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000038, "Member 'BP_Carosse_C_ExecuteUbergraph_BP_Carosse::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_ExecuteUbergraph_BP_Carosse, CallFunc_RInterpTo_ReturnValue) == 0x000040, "Member 'BP_Carosse_C_ExecuteUbergraph_BP_Carosse::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_ExecuteUbergraph_BP_Carosse, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000058, "Member 'BP_Carosse_C_ExecuteUbergraph_BP_Carosse::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_ExecuteUbergraph_BP_Carosse, K2Node_Event_NewController) == 0x000140, "Member 'BP_Carosse_C_ExecuteUbergraph_BP_Carosse::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_ExecuteUbergraph_BP_Carosse, CallFunc_GetController_ReturnValue) == 0x000148, "Member 'BP_Carosse_C_ExecuteUbergraph_BP_Carosse::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_ExecuteUbergraph_BP_Carosse, K2Node_DynamicCast_AsPlayer_Controller) == 0x000150, "Member 'BP_Carosse_C_ExecuteUbergraph_BP_Carosse::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_ExecuteUbergraph_BP_Carosse, K2Node_DynamicCast_bSuccess_1) == 0x000158, "Member 'BP_Carosse_C_ExecuteUbergraph_BP_Carosse::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_ExecuteUbergraph_BP_Carosse, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x00015C, "Member 'BP_Carosse_C_ExecuteUbergraph_BP_Carosse::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function BP_Carosse.BP_Carosse_C.HorseGrounded
// 0x0001 (0x0001 - 0x0000)
struct BP_Carosse_C_HorseGrounded final
{
public:
	bool                                          Param_Grounded;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Carosse_C_HorseGrounded) == 0x000001, "Wrong alignment on BP_Carosse_C_HorseGrounded");
static_assert(sizeof(BP_Carosse_C_HorseGrounded) == 0x000001, "Wrong size on BP_Carosse_C_HorseGrounded");
static_assert(offsetof(BP_Carosse_C_HorseGrounded, Param_Grounded) == 0x000000, "Member 'BP_Carosse_C_HorseGrounded::Param_Grounded' has a wrong offset!");

// Function BP_Carosse.BP_Carosse_C.OnDriverCarosseInvalid
// 0x00F0 (0x00F0 - 0x0000)
struct BP_Carosse_C_OnDriverCarosseInvalid final
{
public:
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0000(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Carosse_C_OnDriverCarosseInvalid) == 0x000008, "Wrong alignment on BP_Carosse_C_OnDriverCarosseInvalid");
static_assert(sizeof(BP_Carosse_C_OnDriverCarosseInvalid) == 0x0000F0, "Wrong size on BP_Carosse_C_OnDriverCarosseInvalid");
static_assert(offsetof(BP_Carosse_C_OnDriverCarosseInvalid, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000000, "Member 'BP_Carosse_C_OnDriverCarosseInvalid::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_OnDriverCarosseInvalid, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000E8, "Member 'BP_Carosse_C_OnDriverCarosseInvalid::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_OnDriverCarosseInvalid, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x0000E9, "Member 'BP_Carosse_C_OnDriverCarosseInvalid::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");

// Function BP_Carosse.BP_Carosse_C.OnDriverCarosseValid
// 0x0002 (0x0002 - 0x0000)
struct BP_Carosse_C_OnDriverCarosseValid final
{
public:
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Carosse_C_OnDriverCarosseValid) == 0x000001, "Wrong alignment on BP_Carosse_C_OnDriverCarosseValid");
static_assert(sizeof(BP_Carosse_C_OnDriverCarosseValid) == 0x000002, "Wrong size on BP_Carosse_C_OnDriverCarosseValid");
static_assert(offsetof(BP_Carosse_C_OnDriverCarosseValid, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000000, "Member 'BP_Carosse_C_OnDriverCarosseValid::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_OnDriverCarosseValid, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000001, "Member 'BP_Carosse_C_OnDriverCarosseValid::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");

// Function BP_Carosse.BP_Carosse_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_Carosse_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Carosse_C_ReceivePossessed) == 0x000008, "Wrong alignment on BP_Carosse_C_ReceivePossessed");
static_assert(sizeof(BP_Carosse_C_ReceivePossessed) == 0x000008, "Wrong size on BP_Carosse_C_ReceivePossessed");
static_assert(offsetof(BP_Carosse_C_ReceivePossessed, NewController) == 0x000000, "Member 'BP_Carosse_C_ReceivePossessed::NewController' has a wrong offset!");

// Function BP_Carosse.BP_Carosse_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Carosse_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Carosse_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Carosse_C_ReceiveTick");
static_assert(sizeof(BP_Carosse_C_ReceiveTick) == 0x000004, "Wrong size on BP_Carosse_C_ReceiveTick");
static_assert(offsetof(BP_Carosse_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Carosse_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Carosse.BP_Carosse_C.SwitchCarVisibility
// 0x0005 (0x0005 - 0x0000)
struct BP_Carosse_C_SwitchCarVisibility final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Carosse_C_SwitchCarVisibility) == 0x000001, "Wrong alignment on BP_Carosse_C_SwitchCarVisibility");
static_assert(sizeof(BP_Carosse_C_SwitchCarVisibility) == 0x000005, "Wrong size on BP_Carosse_C_SwitchCarVisibility");
static_assert(offsetof(BP_Carosse_C_SwitchCarVisibility, bNewVisibility) == 0x000000, "Member 'BP_Carosse_C_SwitchCarVisibility::bNewVisibility' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_SwitchCarVisibility, Temp_bool_Variable) == 0x000001, "Member 'BP_Carosse_C_SwitchCarVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_SwitchCarVisibility, Temp_byte_Variable) == 0x000002, "Member 'BP_Carosse_C_SwitchCarVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_SwitchCarVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'BP_Carosse_C_SwitchCarVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_SwitchCarVisibility, K2Node_Select_Default) == 0x000004, "Member 'BP_Carosse_C_SwitchCarVisibility::K2Node_Select_Default' has a wrong offset!");

// Function BP_Carosse.BP_Carosse_C.UpdateHorseLocation
// 0x0468 (0x0468 - 0x0000)
struct BP_Carosse_C_UpdateHorseLocation final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	EDrawDebugTrace                               CallFunc_TraceVisibility_Result;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3975[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00A8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3976[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3977[0x2];                                     // 0x01BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0238(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3978[0x4];                                     // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZY_ReturnValue;                // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3979[0x4];                                     // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue_1;     // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397A[0x4];                                     // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0378(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast;         // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Carosse_C_UpdateHorseLocation) == 0x000008, "Wrong alignment on BP_Carosse_C_UpdateHorseLocation");
static_assert(sizeof(BP_Carosse_C_UpdateHorseLocation) == 0x000468, "Wrong size on BP_Carosse_C_UpdateHorseLocation");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, Temp_object_Variable) == 0x000000, "Member 'BP_Carosse_C_UpdateHorseLocation::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_TraceVisibility_Result) == 0x000010, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_TraceVisibility_Result' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_GetUpVector_ReturnValue) == 0x000030, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000048, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000078, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000090, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_LineTraceSingle_OutHit) == 0x0000A8, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_LineTraceSingle_ReturnValue) == 0x000190, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000198, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakRotator_Roll) == 0x0001B0, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakRotator_Pitch) == 0x0001B4, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakRotator_Yaw) == 0x0001B8, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x0001BC, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001BD, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakHitResult_Time) == 0x0001C0, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakHitResult_Distance) == 0x0001C4, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakHitResult_Location) == 0x0001C8, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x0001E0, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakHitResult_Normal) == 0x0001F8, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x000210, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakHitResult_PhysMat) == 0x000228, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakHitResult_HitActor) == 0x000230, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakHitResult_HitComponent) == 0x000238, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakHitResult_HitBoneName) == 0x000240, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakHitResult_BoneName) == 0x000248, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakHitResult_HitItem) == 0x000250, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakHitResult_ElementIndex) == 0x000254, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakHitResult_FaceIndex) == 0x000258, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakHitResult_TraceStart) == 0x000260, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakHitResult_TraceEnd) == 0x000278, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000290, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_GetForwardVector_ReturnValue) == 0x000298, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_MakeRotFromZY_ReturnValue) == 0x0002B0, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_MakeRotFromZY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x0002C8, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakRotator_Roll_1) == 0x0002E0, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakRotator_Pitch_1) == 0x0002E4, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakRotator_Yaw_1) == 0x0002E8, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_NormalizedDeltaRotator_ReturnValue_1) == 0x0002F0, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_NormalizedDeltaRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_MakeRotator_ReturnValue) == 0x000308, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakRotator_Roll_2) == 0x000320, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakRotator_Pitch_2) == 0x000324, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_BreakRotator_Yaw_2) == 0x000328, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_MakeRotator_ReturnValue_1) == 0x000330, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000348, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_VInterpTo_ReturnValue) == 0x000360, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000378, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateHorseLocation, CallFunc_VInterpTo_DeltaTime_ImplicitCast) == 0x000460, "Member 'BP_Carosse_C_UpdateHorseLocation::CallFunc_VInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function BP_Carosse.BP_Carosse_C.UpdateSound
// 0x0058 (0x0058 - 0x0000)
struct BP_Carosse_C_UpdateSound final
{
public:
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPitchMultiplier_NewPitchMultiplier_ImplicitCast; // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Carosse_C_UpdateSound) == 0x000008, "Wrong alignment on BP_Carosse_C_UpdateSound");
static_assert(sizeof(BP_Carosse_C_UpdateSound) == 0x000058, "Wrong size on BP_Carosse_C_UpdateSound");
static_assert(offsetof(BP_Carosse_C_UpdateSound, CallFunc_GetForwardVector_ReturnValue) == 0x000000, "Member 'BP_Carosse_C_UpdateSound::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateSound, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000018, "Member 'BP_Carosse_C_UpdateSound::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateSound, CallFunc_Dot_VectorVector_ReturnValue) == 0x000030, "Member 'BP_Carosse_C_UpdateSound::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateSound, CallFunc_Abs_ReturnValue) == 0x000038, "Member 'BP_Carosse_C_UpdateSound::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateSound, CallFunc_MapRangeClamped_ReturnValue) == 0x000040, "Member 'BP_Carosse_C_UpdateSound::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateSound, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000048, "Member 'BP_Carosse_C_UpdateSound::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateSound, CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast) == 0x000050, "Member 'BP_Carosse_C_UpdateSound::CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UpdateSound, CallFunc_SetPitchMultiplier_NewPitchMultiplier_ImplicitCast) == 0x000054, "Member 'BP_Carosse_C_UpdateSound::CallFunc_SetPitchMultiplier_NewPitchMultiplier_ImplicitCast' has a wrong offset!");

// Function BP_Carosse.BP_Carosse_C.UserConstructionScript
// 0x0070 (0x0070 - 0x0000)
struct BP_Carosse_C_UserConstructionScript final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_AddComponent_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Carosse_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_Carosse_C_UserConstructionScript");
static_assert(sizeof(BP_Carosse_C_UserConstructionScript) == 0x000070, "Wrong size on BP_Carosse_C_UserConstructionScript");
static_assert(offsetof(BP_Carosse_C_UserConstructionScript, Temp_struct_Variable) == 0x000000, "Member 'BP_Carosse_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000060, "Member 'BP_Carosse_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Carosse_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000068, "Member 'BP_Carosse_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function BP_Carosse.BP_Carosse_C.WheelLeftRight
// 0x0008 (0x0008 - 0x0000)
struct BP_Carosse_C_WheelLeftRight final
{
public:
	double                                        NewRotation_Yaw;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Carosse_C_WheelLeftRight) == 0x000008, "Wrong alignment on BP_Carosse_C_WheelLeftRight");
static_assert(sizeof(BP_Carosse_C_WheelLeftRight) == 0x000008, "Wrong size on BP_Carosse_C_WheelLeftRight");
static_assert(offsetof(BP_Carosse_C_WheelLeftRight, NewRotation_Yaw) == 0x000000, "Member 'BP_Carosse_C_WheelLeftRight::NewRotation_Yaw' has a wrong offset!");

}

