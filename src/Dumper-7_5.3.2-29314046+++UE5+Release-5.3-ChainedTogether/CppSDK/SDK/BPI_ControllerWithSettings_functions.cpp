#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_ControllerWithSettings

#include "Basic.hpp"

#include "BPI_ControllerWithSettings_classes.hpp"
#include "BPI_ControllerWithSettings_parameters.hpp"


namespace SDK
{

// Function BPI_ControllerWithSettings.BPI_ControllerWithSettings_C.CloseSettingsMenu
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_ControllerWithSettings_C::CloseSettingsMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ControllerWithSettings_C", "CloseSettingsMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_ControllerWithSettings.BPI_ControllerWithSettings_C.IsPlayerOnGamepad
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Gamepad                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ControllerWithSettings_C::IsPlayerOnGamepad(bool* Gamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ControllerWithSettings_C", "IsPlayerOnGamepad");

	Params::BPI_ControllerWithSettings_C_IsPlayerOnGamepad Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Gamepad != nullptr)
		*Gamepad = Parms.Gamepad;
}

}

