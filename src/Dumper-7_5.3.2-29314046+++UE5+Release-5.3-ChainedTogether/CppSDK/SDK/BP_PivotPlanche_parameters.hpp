#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PivotPlanche

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_PivotPlanche.BP_PivotPlanche_C.ExecuteUbergraph_BP_PivotPlanche
// 0x0278 (0x0278 - 0x0000)
struct BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AED[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AEE[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0068(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_SetRotationDeltaTarget_Delta1;            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x0178(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche) == 0x000008, "Wrong alignment on BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche");
static_assert(sizeof(BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche) == 0x000278, "Wrong size on BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche");
static_assert(offsetof(BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche, EntryPoint) == 0x000000, "Member 'BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche, CallFunc_HasAuthority_ReturnValue) == 0x000010, "Member 'BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000018, "Member 'BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x000030, "Member 'BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000048, "Member 'BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche, CallFunc_RInterpTo_ReturnValue) == 0x000050, "Member 'BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000068, "Member 'BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche, CallFunc_SetRotationDeltaTarget_Delta1) == 0x000150, "Member 'BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche::CallFunc_SetRotationDeltaTarget_Delta1' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000158, "Member 'BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche, CallFunc_MakeRotator_ReturnValue) == 0x000160, "Member 'BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x000178, "Member 'BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x000260, "Member 'BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche, CallFunc_FInterpTo_ReturnValue) == 0x000268, "Member 'BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x000270, "Member 'BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000274, "Member 'BP_PivotPlanche_C_ExecuteUbergraph_BP_PivotPlanche::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_PivotPlanche.BP_PivotPlanche_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_PivotPlanche_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PivotPlanche_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_PivotPlanche_C_ReceiveTick");
static_assert(sizeof(BP_PivotPlanche_C_ReceiveTick) == 0x000004, "Wrong size on BP_PivotPlanche_C_ReceiveTick");
static_assert(offsetof(BP_PivotPlanche_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_PivotPlanche_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_PivotPlanche.BP_PivotPlanche_C.SetRotationDeltaTarget
// 0x0068 (0x0068 - 0x0000)
struct BP_PivotPlanche_C_SetRotationDeltaTarget final
{
public:
	double                                        Delta1;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Delta;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0010(0x0010)(ReferenceParm)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_1; // 0x0020(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_1;              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AEF[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_2; // 0x0038(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_2;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF0[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_3; // 0x0050(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_3;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PivotPlanche_C_SetRotationDeltaTarget) == 0x000008, "Wrong alignment on BP_PivotPlanche_C_SetRotationDeltaTarget");
static_assert(sizeof(BP_PivotPlanche_C_SetRotationDeltaTarget) == 0x000068, "Wrong size on BP_PivotPlanche_C_SetRotationDeltaTarget");
static_assert(offsetof(BP_PivotPlanche_C_SetRotationDeltaTarget, Delta1) == 0x000000, "Member 'BP_PivotPlanche_C_SetRotationDeltaTarget::Delta1' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_SetRotationDeltaTarget, Delta) == 0x000008, "Member 'BP_PivotPlanche_C_SetRotationDeltaTarget::Delta' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_SetRotationDeltaTarget, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000010, "Member 'BP_PivotPlanche_C_SetRotationDeltaTarget::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_SetRotationDeltaTarget, CallFunc_GetOverlappingActors_OverlappingActors_1) == 0x000020, "Member 'BP_PivotPlanche_C_SetRotationDeltaTarget::CallFunc_GetOverlappingActors_OverlappingActors_1' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_SetRotationDeltaTarget, CallFunc_Array_IsEmpty_ReturnValue) == 0x000030, "Member 'BP_PivotPlanche_C_SetRotationDeltaTarget::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_SetRotationDeltaTarget, CallFunc_Array_IsEmpty_ReturnValue_1) == 0x000031, "Member 'BP_PivotPlanche_C_SetRotationDeltaTarget::CallFunc_Array_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_SetRotationDeltaTarget, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'BP_PivotPlanche_C_SetRotationDeltaTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_SetRotationDeltaTarget, CallFunc_Not_PreBool_ReturnValue_1) == 0x000033, "Member 'BP_PivotPlanche_C_SetRotationDeltaTarget::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_SetRotationDeltaTarget, CallFunc_BooleanAND_ReturnValue) == 0x000034, "Member 'BP_PivotPlanche_C_SetRotationDeltaTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_SetRotationDeltaTarget, CallFunc_GetOverlappingActors_OverlappingActors_2) == 0x000038, "Member 'BP_PivotPlanche_C_SetRotationDeltaTarget::CallFunc_GetOverlappingActors_OverlappingActors_2' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_SetRotationDeltaTarget, CallFunc_Array_IsEmpty_ReturnValue_2) == 0x000048, "Member 'BP_PivotPlanche_C_SetRotationDeltaTarget::CallFunc_Array_IsEmpty_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_SetRotationDeltaTarget, CallFunc_GetOverlappingActors_OverlappingActors_3) == 0x000050, "Member 'BP_PivotPlanche_C_SetRotationDeltaTarget::CallFunc_GetOverlappingActors_OverlappingActors_3' has a wrong offset!");
static_assert(offsetof(BP_PivotPlanche_C_SetRotationDeltaTarget, CallFunc_Array_IsEmpty_ReturnValue_3) == 0x000060, "Member 'BP_PivotPlanche_C_SetRotationDeltaTarget::CallFunc_Array_IsEmpty_ReturnValue_3' has a wrong offset!");

}

