#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TurningDoor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TurningDoor.BP_TurningDoor_C
// 0x0048 (0x02E0 - 0x0298)
class ABP_TurningDoor_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio;                                             // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UC_TickOptimizer_C*                     C_TickOptimizer;                                   // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RepRot;                                            // 0x02C8(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)

public:
	void ExecuteUbergraph_BP_TurningDoor(int32 EntryPoint);
	void OnRep_RepRot();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Rep();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TurningDoor_C">();
	}
	static class ABP_TurningDoor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TurningDoor_C>();
	}
};
static_assert(alignof(ABP_TurningDoor_C) == 0x000008, "Wrong alignment on ABP_TurningDoor_C");
static_assert(sizeof(ABP_TurningDoor_C) == 0x0002E0, "Wrong size on ABP_TurningDoor_C");
static_assert(offsetof(ABP_TurningDoor_C, UberGraphFrame) == 0x000298, "Member 'ABP_TurningDoor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_TurningDoor_C, Audio) == 0x0002A0, "Member 'ABP_TurningDoor_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_TurningDoor_C, C_TickOptimizer) == 0x0002A8, "Member 'ABP_TurningDoor_C::C_TickOptimizer' has a wrong offset!");
static_assert(offsetof(ABP_TurningDoor_C, StaticMesh) == 0x0002B0, "Member 'ABP_TurningDoor_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_TurningDoor_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_TurningDoor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_TurningDoor_C, Speed) == 0x0002C0, "Member 'ABP_TurningDoor_C::Speed' has a wrong offset!");
static_assert(offsetof(ABP_TurningDoor_C, RepRot) == 0x0002C8, "Member 'ABP_TurningDoor_C::RepRot' has a wrong offset!");

}

