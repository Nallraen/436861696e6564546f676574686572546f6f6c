#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CustomCar

#include "Basic.hpp"

#include "BP_CustomCar_classes.hpp"
#include "BP_CustomCar_parameters.hpp"


namespace SDK
{

// Function BP_CustomCar.BP_CustomCar_C.AddImpulseToVehicle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Impulse                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::AddImpulseToVehicle(const struct FVector& Impulse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "AddImpulseToVehicle");

	Params::BP_CustomCar_C_AddImpulseToVehicle Parms{};

	Parms.Impulse = std::move(Impulse);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.AdditionalGravity
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::AdditionalGravity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "AdditionalGravity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.AddPassengerCloth
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMesh*                    NewMesh                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CustomMat                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           SkeletalMesh                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               Material                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::AddPassengerCloth(class USkeletalMesh* NewMesh, const struct FLinearColor& Color, bool CustomMat, class USkeletalMeshComponent* SkeletalMesh, class UMaterialInterface* Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "AddPassengerCloth");

	Params::BP_CustomCar_C_AddPassengerCloth Parms{};

	Parms.NewMesh = NewMesh;
	Parms.Color = std::move(Color);
	Parms.CustomMat = CustomMat;
	Parms.SkeletalMesh = SkeletalMesh;
	Parms.Material = Material;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.AutoFlipCar
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::AutoFlipCar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "AutoFlipCar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.CalculateVelocity
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::CalculateVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "CalculateVelocity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.CanBeUsed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_CanBeUsed                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::CanBeUsed(bool* Param_CanBeUsed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "CanBeUsed");

	Params::BP_CustomCar_C_CanBeUsed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_CanBeUsed != nullptr)
		*Param_CanBeUsed = Parms.Param_CanBeUsed;
}


// Function BP_CustomCar.BP_CustomCar_C.CarStabilize_TL__FinishedFunc
// (BlueprintEvent)

void ABP_CustomCar_C::CarStabilize_TL__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "CarStabilize_TL__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.CarStabilize_TL__UpdateFunc
// (BlueprintEvent)

void ABP_CustomCar_C::CarStabilize_TL__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "CarStabilize_TL__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.CheckClientDriverDisconnect
// (BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::CheckClientDriverDisconnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "CheckClientDriverDisconnect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.CheckUnderLava
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::CheckUnderLava()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "CheckUnderLava");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.Constraint
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::Constraint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "Constraint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.Detected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Detected                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PC                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::Detected(bool Param_Detected, class APlayerController* PC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "Detected");

	Params::BP_CustomCar_C_Detected Parms{};

	Parms.Param_Detected = Param_Detected;
	Parms.PC = PC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.DriveForwardGP_Completed
// (BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::DriveForwardGP_Completed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "DriveForwardGP_Completed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.EventDriveForwardGP
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Axis                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::EventDriveForwardGP(double Axis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "EventDriveForwardGP");

	Params::BP_CustomCar_C_EventDriveForwardGP Parms{};

	Parms.Axis = Axis;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.ExecuteUbergraph_BP_CustomCar
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::ExecuteUbergraph_BP_CustomCar(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "ExecuteUbergraph_BP_CustomCar");

	Params::BP_CustomCar_C_ExecuteUbergraph_BP_CustomCar Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.F_MoveForward
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Param_MoveForwardAxis                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::F_MoveForward(double Param_MoveForwardAxis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "F_MoveForward");

	Params::BP_CustomCar_C_F_MoveForward Parms{};

	Parms.Param_MoveForwardAxis = Param_MoveForwardAxis;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.F_MoveRight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Param_MoveRightAxis                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::F_MoveRight(double Param_MoveRightAxis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "F_MoveRight");

	Params::BP_CustomCar_C_F_MoveRight Parms{};

	Parms.Param_MoveRightAxis = Param_MoveRightAxis;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.GetArrows
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UArrowComponent*>          Array                                                  (Parm, OutParm, ContainsInstancedReference)

void ABP_CustomCar_C::GetArrows(TArray<class UArrowComponent*>* Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "GetArrows");

	Params::BP_CustomCar_C_GetArrows Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Array != nullptr)
		*Array = std::move(Parms.Array);
}


// Function BP_CustomCar.BP_CustomCar_C.GetAttachedComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Comp                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::GetAttachedComponent(class UPrimitiveComponent** Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "GetAttachedComponent");

	Params::BP_CustomCar_C_GetAttachedComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Comp != nullptr)
		*Comp = Parms.Comp;
}


// Function BP_CustomCar.BP_CustomCar_C.GetCosmeticSocket
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Comp                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::GetCosmeticSocket(class UPrimitiveComponent** Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "GetCosmeticSocket");

	Params::BP_CustomCar_C_GetCosmeticSocket Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Comp != nullptr)
		*Comp = Parms.Comp;
}


// Function BP_CustomCar.BP_CustomCar_C.GetDriverSocket
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UPrimitiveComponent* ABP_CustomCar_C::GetDriverSocket()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "GetDriverSocket");

	Params::BP_CustomCar_C_GetDriverSocket Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_CustomCar.BP_CustomCar_C.GetForwardRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rot                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CustomCar_C::GetForwardRotation(struct FRotator* Rot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "GetForwardRotation");

	Params::BP_CustomCar_C_GetForwardRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rot != nullptr)
		*Rot = std::move(Parms.Rot);
}


// Function BP_CustomCar.BP_CustomCar_C.GetForwardSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Param_Speed                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::GetForwardSpeed(double* Param_Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "GetForwardSpeed");

	Params::BP_CustomCar_C_GetForwardSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Speed != nullptr)
		*Param_Speed = Parms.Param_Speed;
}


// Function BP_CustomCar.BP_CustomCar_C.GetRadialVelocityZ
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Vel                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::GetRadialVelocityZ(double* Vel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "GetRadialVelocityZ");

	Params::BP_CustomCar_C_GetRadialVelocityZ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Vel != nullptr)
		*Vel = Parms.Vel;
}


// Function BP_CustomCar.BP_CustomCar_C.GetRootMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Mesh                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::GetRootMesh(class UPrimitiveComponent** Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "GetRootMesh");

	Params::BP_CustomCar_C_GetRootMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Mesh != nullptr)
		*Mesh = Parms.Mesh;
}


// Function BP_CustomCar.BP_CustomCar_C.HorseGrounded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Grounded                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::HorseGrounded(bool* Param_Grounded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "HorseGrounded");

	Params::BP_CustomCar_C_HorseGrounded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Grounded != nullptr)
		*Param_Grounded = Parms.Param_Grounded;
}


// Function BP_CustomCar.BP_CustomCar_C.Hover
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Grounded                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::Hover(bool* Param_Grounded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "Hover");

	Params::BP_CustomCar_C_Hover Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Grounded != nullptr)
		*Param_Grounded = Parms.Param_Grounded;
}


// Function BP_CustomCar.BP_CustomCar_C.Input Leave Tyro
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::Input_Leave_Tyro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "Input Leave Tyro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.IsCarosse
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Carosse                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::IsCarosse(bool* Param_Carosse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "IsCarosse");

	Params::BP_CustomCar_C_IsCarosse Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Carosse != nullptr)
		*Param_Carosse = Parms.Param_Carosse;
}


// Function BP_CustomCar.BP_CustomCar_C.IsCarVisible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::IsCarVisible(bool* Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "IsCarVisible");

	Params::BP_CustomCar_C_IsCarVisible Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Visible != nullptr)
		*Visible = Parms.Visible;
}


// Function BP_CustomCar.BP_CustomCar_C.IsDriverEmpty
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_CustomCar_C::IsDriverEmpty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "IsDriverEmpty");

	Params::BP_CustomCar_C_IsDriverEmpty Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_CustomCar.BP_CustomCar_C.IsPossessed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Possessed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::IsPossessed(bool* Possessed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "IsPossessed");

	Params::BP_CustomCar_C_IsPossessed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Possessed != nullptr)
		*Possessed = Parms.Possessed;
}


// Function BP_CustomCar.BP_CustomCar_C.Jump Input
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::Jump_Input()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "Jump Input");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.LeaveVehicle
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::LeaveVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "LeaveVehicle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.LimitVelocity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::LimitVelocity(double Max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "LimitVelocity");

	Params::BP_CustomCar_C_LimitVelocity Parms{};

	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.LookRight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Axis                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::LookRight(double Axis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "LookRight");

	Params::BP_CustomCar_C_LookRight Parms{};

	Parms.Axis = Axis;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.LookUp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Axis                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::LookUp(double Axis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "LookUp");

	Params::BP_CustomCar_C_LookUp Parms{};

	Parms.Axis = Axis;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.MoveForward
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Axis                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::MoveForward(double Axis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "MoveForward");

	Params::BP_CustomCar_C_MoveForward Parms{};

	Parms.Axis = Axis;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.MoveForwardEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Param_MoveForwardAxis                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::MoveForwardEvent(double Param_MoveForwardAxis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "MoveForwardEvent");

	Params::BP_CustomCar_C_MoveForwardEvent Parms{};

	Parms.Param_MoveForwardAxis = Param_MoveForwardAxis;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.MoveFwdAll
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Axis                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::MoveFwdAll(double Axis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "MoveFwdAll");

	Params::BP_CustomCar_C_MoveFwdAll Parms{};

	Parms.Axis = Axis;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.MoveFwdSRV
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Axis                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::MoveFwdSRV(double Axis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "MoveFwdSRV");

	Params::BP_CustomCar_C_MoveFwdSRV Parms{};

	Parms.Axis = Axis;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.MovementReplication
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::MovementReplication()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "MovementReplication");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.MoveRight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Axis                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::MoveRight(double Axis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "MoveRight");

	Params::BP_CustomCar_C_MoveRight Parms{};

	Parms.Axis = Axis;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.MoveRightAll
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Axis                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::MoveRightAll(double Axis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "MoveRightAll");

	Params::BP_CustomCar_C_MoveRightAll Parms{};

	Parms.Axis = Axis;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.MoveRightSRV
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Axis                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::MoveRightSRV(double Axis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "MoveRightSRV");

	Params::BP_CustomCar_C_MoveRightSRV Parms{};

	Parms.Axis = Axis;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.OnclientDisconnectAll
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::OnclientDisconnectAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "OnclientDisconnectAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.OnClientDriverDisconnect(srv)
// (BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::OnClientDriverDisconnect_srv_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "OnClientDriverDisconnect(srv)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.OnDriverCarosseInvalid
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::OnDriverCarosseInvalid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "OnDriverCarosseInvalid");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.OnDriverCarosseValid
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::OnDriverCarosseValid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "OnDriverCarosseValid");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.OnPossessedOwner
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::OnPossessedOwner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "OnPossessedOwner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.OnRep_Driver
// (BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::OnRep_Driver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "OnRep_Driver");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.PossessedAll
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::PossessedAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "PossessedAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.RaceEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::RaceEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "RaceEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_CustomCar_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.ReceivePossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "ReceivePossessed");

	Params::BP_CustomCar_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "ReceiveTick");

	Params::BP_CustomCar_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.Refresh Skin
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// E_ChoosenChar                           Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::Refresh_Skin(class USkeletalMeshComponent* Mesh, E_ChoosenChar Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "Refresh Skin");

	Params::BP_CustomCar_C_Refresh_Skin Parms{};

	Parms.Mesh = Mesh;
	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.RefreshPassagers
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::RefreshPassagers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "RefreshPassagers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.RefreshSkin01All
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ChoosenChar                           Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::RefreshSkin01All(E_ChoosenChar Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "RefreshSkin01All");

	Params::BP_CustomCar_C_RefreshSkin01All Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.RefreshSkin02All
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ChoosenChar                           Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::RefreshSkin02All(E_ChoosenChar Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "RefreshSkin02All");

	Params::BP_CustomCar_C_RefreshSkin02All Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.RefreshSkin03All
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ChoosenChar                           Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::RefreshSkin03All(E_ChoosenChar Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "RefreshSkin03All");

	Params::BP_CustomCar_C_RefreshSkin03All Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.ReplicateMov
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Param_RepTransform                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Param_ServerVelocity                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::ReplicateMov(const struct FTransform& Param_RepTransform, const struct FVector& Param_ServerVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "ReplicateMov");

	Params::BP_CustomCar_C_ReplicateMov Parms{};

	Parms.Param_RepTransform = std::move(Param_RepTransform);
	Parms.Param_ServerVelocity = std::move(Param_ServerVelocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.ResetAll
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       NewTransform                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::ResetAll(const struct FTransform& NewTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "ResetAll");

	Params::BP_CustomCar_C_ResetAll Parms{};

	Parms.NewTransform = std::move(NewTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.ResetTransform
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::ResetTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "ResetTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.ResetVelocity
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::ResetVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "ResetVelocity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.ResetWheelLocationByTag
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::ResetWheelLocationByTag(class FName Selection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "ResetWheelLocationByTag");

	Params::BP_CustomCar_C_ResetWheelLocationByTag Parms{};

	Parms.Selection = Selection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.SetWheelLoc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  WheelMesh                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InVec                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::SetWheelLoc(class USceneComponent* WheelMesh, const struct FVector& InVec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "SetWheelLoc");

	Params::BP_CustomCar_C_SetWheelLoc Parms{};

	Parms.WheelMesh = WheelMesh;
	Parms.InVec = std::move(InVec);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.SnapDriverToVehicle
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::SnapDriverToVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "SnapDriverToVehicle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.Sprint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Sprint                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::Sprint(bool Param_Sprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "Sprint");

	Params::BP_CustomCar_C_Sprint Parms{};

	Parms.Param_Sprint = Param_Sprint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.Stabilize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InterpSpeed                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::Stabilize(double InterpSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "Stabilize");

	Params::BP_CustomCar_C_Stabilize Parms{};

	Parms.InterpSpeed = InterpSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.StabilizeVelocity
// (BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::StabilizeVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "StabilizeVelocity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.Stance
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::Stance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "Stance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.SwitchCarVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::SwitchCarVisibility(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "SwitchCarVisibility");

	Params::BP_CustomCar_C_SwitchCarVisibility Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.TestControlNotify
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::TestControlNotify()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "TestControlNotify");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.Transfer Chains to Human (Srv)
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            InDriver                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::Transfer_Chains_to_Human__Srv_(const class APawn* InDriver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "Transfer Chains to Human (Srv)");

	Params::BP_CustomCar_C_Transfer_Chains_to_Human__Srv_ Parms{};

	Parms.InDriver = InDriver;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.Transfer Chains to Vehicle (Srv)
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InDriver                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::Transfer_Chains_to_Vehicle__Srv_(const class UObject* InDriver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "Transfer Chains to Vehicle (Srv)");

	Params::BP_CustomCar_C_Transfer_Chains_to_Vehicle__Srv_ Parms{};

	Parms.InDriver = InDriver;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.TransferLoggedPlayerToCar
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Param_Controller                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::TransferLoggedPlayerToCar(class AController* Param_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "TransferLoggedPlayerToCar");

	Params::BP_CustomCar_C_TransferLoggedPlayerToCar Parms{};

	Parms.Param_Controller = Param_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.TransferOtherPlayersToCar
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          DriverController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::TransferOtherPlayersToCar(class UObject* DriverController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "TransferOtherPlayersToCar");

	Params::BP_CustomCar_C_TransferOtherPlayersToCar Parms{};

	Parms.DriverController = DriverController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.UnpossessVehicle
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::UnpossessVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "UnpossessVehicle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.UnpossessVehicleAll
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::UnpossessVehicleAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "UnpossessVehicleAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.Update Driver Hands
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::Update_Driver_Hands()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "Update Driver Hands");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.UpdateDamping
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::UpdateDamping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "UpdateDamping");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.UpdateMoveForward
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::UpdateMoveForward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "UpdateMoveForward");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.UpdateSound
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::UpdateSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "UpdateSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.UpdateSpeed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::UpdateSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "UpdateSpeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.UpdateSteerFromVelocity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Steer                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  NewSteer                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::UpdateSteerFromVelocity(double Steer, double* NewSteer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "UpdateSteerFromVelocity");

	Params::BP_CustomCar_C_UpdateSteerFromVelocity Parms{};

	Parms.Steer = Steer;

	UObject::ProcessEvent(Func, &Parms);

	if (NewSteer != nullptr)
		*NewSteer = Parms.NewSteer;
}


// Function BP_CustomCar.BP_CustomCar_C.Use
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Param_Controller                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ControlledActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::Use(class AController* Param_Controller, class AActor* ControlledActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "Use");

	Params::BP_CustomCar_C_Use Parms{};

	Parms.Param_Controller = Param_Controller;
	Parms.ControlledActor = ControlledActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomCar.BP_CustomCar_C.WheelLeftRight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  NewRotation_Yaw                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomCar_C::WheelLeftRight(double NewRotation_Yaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "WheelLeftRight");

	Params::BP_CustomCar_C_WheelLeftRight Parms{};

	Parms.NewRotation_Yaw = NewRotation_Yaw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomCar.BP_CustomCar_C.WheelRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_CustomCar_C::WheelRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomCar_C", "WheelRotation");

	UObject::ProcessEvent(Func, nullptr);
}

}

