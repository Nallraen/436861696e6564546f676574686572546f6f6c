#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MovingWheel

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MovingWheel.BP_MovingWheel_C
// 0x0060 (0x02F8 - 0x0298)
class ABP_MovingWheel_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UC_TickOptimizer_C*                     C_TickOptimizer;                                   // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_AD06A91A4F3774C1906979A32C66C8F5; // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_AD06A91A4F3774C1906979A32C66C8F5; // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A96[0x3];                                     // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InitLoc;                                           // 0x02D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Time;                                              // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewVar;                                            // 0x02F0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)

public:
	void CustomEvent();
	void ExecuteUbergraph_BP_MovingWheel(int32 EntryPoint);
	void OnRep_NewVar();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MovingWheel_C">();
	}
	static class ABP_MovingWheel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MovingWheel_C>();
	}
};
static_assert(alignof(ABP_MovingWheel_C) == 0x000008, "Wrong alignment on ABP_MovingWheel_C");
static_assert(sizeof(ABP_MovingWheel_C) == 0x0002F8, "Wrong size on ABP_MovingWheel_C");
static_assert(offsetof(ABP_MovingWheel_C, UberGraphFrame) == 0x000298, "Member 'ABP_MovingWheel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MovingWheel_C, StaticMesh1) == 0x0002A0, "Member 'ABP_MovingWheel_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(ABP_MovingWheel_C, C_TickOptimizer) == 0x0002A8, "Member 'ABP_MovingWheel_C::C_TickOptimizer' has a wrong offset!");
static_assert(offsetof(ABP_MovingWheel_C, StaticMesh) == 0x0002B0, "Member 'ABP_MovingWheel_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_MovingWheel_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_MovingWheel_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_MovingWheel_C, Timeline_0_NewTrack_0_AD06A91A4F3774C1906979A32C66C8F5) == 0x0002C0, "Member 'ABP_MovingWheel_C::Timeline_0_NewTrack_0_AD06A91A4F3774C1906979A32C66C8F5' has a wrong offset!");
static_assert(offsetof(ABP_MovingWheel_C, Timeline_0__Direction_AD06A91A4F3774C1906979A32C66C8F5) == 0x0002C4, "Member 'ABP_MovingWheel_C::Timeline_0__Direction_AD06A91A4F3774C1906979A32C66C8F5' has a wrong offset!");
static_assert(offsetof(ABP_MovingWheel_C, Timeline_0) == 0x0002C8, "Member 'ABP_MovingWheel_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_MovingWheel_C, InitLoc) == 0x0002D0, "Member 'ABP_MovingWheel_C::InitLoc' has a wrong offset!");
static_assert(offsetof(ABP_MovingWheel_C, Time) == 0x0002E8, "Member 'ABP_MovingWheel_C::Time' has a wrong offset!");
static_assert(offsetof(ABP_MovingWheel_C, NewVar) == 0x0002F0, "Member 'ABP_MovingWheel_C::NewVar' has a wrong offset!");

}

